(this["webpackJsonpvisualization-tool"]=this["webpackJsonpvisualization-tool"]||[]).push([[0],{25:function(t,i,e){},38:function(t,i,e){t.exports=e(55)},39:function(t,i,e){},55:function(t,i,e){"use strict";e.r(i);e(25);var s=e(10),h=e(2);e(39);class a{constructor(t,i,e,s,h){this.objectID=t,this.fromX=i,this.fromY=e,this.toX=s,this.toY=h}}class n{addUndoAnimation(){return!1}undoInitialStep(){}}class l extends n{constructor(t,i,e,s,h){super(),this.objectID=t,this.fromX=i,this.fromY=e,this.toX=s,this.toY=h}addUndoAnimation(t){const i=new a(this.objectID,this.fromX,this.fromY,this.toX,this.toY);return t.push(i),!0}}class r extends n{constructor(t){super(),this.objectID=t}undoInitialStep(t){t.removeObject(this.objectID)}}class o extends n{constructor(t,i,e){super(),this.objectID=t,this.highlightValue=i,this.color=e}undoInitialStep(t){t.setHighlight(this.objectID,this.highlightValue,this.color)}}class d extends n{constructor(t,i){super(),this.objectID=t,this.height=i}undoInitialStep(t){t.setHeight(this.objectID,this.height)}}class c extends n{constructor(t,i){super(),this.objectID=t,this.width=i}undoInitialStep(t){t.setWidth(this.objectID,this.width)}}class m extends n{constructor(t,i){if(super(),this.objectID=t.objectID,this.sizeBeforeChange=t.getNumElements(),this.sizeAfterChange=i,this.sizeBeforeChange>this.sizeAfterChange){this.labels=new Array(this.sizeBeforeChange-this.sizeAfterChange),this.colors=new Array(this.sizeBeforeChange-this.sizeAfterChange);for(let i=0;i<this.sizeBeforeChange-this.sizeAfterChange;i++)this.labels[i]=t.getText(i+this.sizeAfterChange),this.colors[i]=t.getTextColor(i+this.sizeAfterChange)}}undoInitialStep(t){if(t.setNumElements(this.objectID,this.sizeBeforeChange),this.sizeBeforeChange>this.sizeAfterChange)for(let i=0;i<this.sizeBeforeChange-this.sizeAfterChange;i++)t.setText(this.objectID,this.labels[i],i+this.sizeAfterChange),t.setTextColor(this.objectID,this.colors[i],i+this.sizeAfterChange)}}class g extends n{constructor(t,i){super(),this.objectID=t,this.alphaVal=i}undoInitialStep(t){t.setAlpha(this.objectID,this.alphaVal)}}class u extends n{constructor(t,i){super(),this.objectID=t,this.nullVal=i}undoInitialStep(t){t.setNull(this.objectID,this.nullVal)}}class p extends n{constructor(t,i){super(),this.objectID=t,this.nullVal=i}undoInitialStep(t){t.setPrevNull(this.objectID,this.nullVal)}}class I extends n{constructor(t,i){super(),this.objectID=t,this.nullVal=i}undoInitialStep(t){t.setNextNull(this.objectID,this.nullVal)}}class x extends n{constructor(t,i){super(),this.objectID=t,this.color=i}undoInitialStep(t){t.setForegroundColor(this.objectID,this.color)}}class D extends n{constructor(t,i){super(),this.objectID=t,this.color=i}undoInitialStep(t){t.setBackgroundColor(this.objectID,this.color)}}class b extends n{constructor(t,i){super(),this.objectID=t,this.index=i}undoInitialStep(t){t.setHighlightIndex(this.objectID,this.index)}}class f extends n{constructor(t,i,e){super(),this.objectID=t,this.newText=i,this.labelIndex=e}undoInitialStep(t){t.setText(this.objectID,this.newText,this.labelIndex)}}class y extends n{constructor(t,i,e){super(),this.objectID=t,this.color=i,this.index=e}undoInitialStep(t){t.setTextColor(this.objectID,this.color,this.index)}}class k extends n{constructor(t,i,e){super(),this.fromID=t,this.toID=i,this.highlightValue=e}undoInitialStep(t){t.setEdgeHighlight(this.fromID,this.toID,this.highlightValue)}}class L extends n{constructor(t,i,e){super(),this.fromID=t,this.toID=i,this.thickness=e}undoInitialStep(t){t.setEdgeThickness(this.fromID,this.toID,this.thickness)}}class C extends n{constructor(t,i,e){super(),this.fromID=t,this.toID=i,this.color=e}undoInitialStep(t){t.setEdgeColor(this.fromID,this.toID,this.color)}}class T extends n{constructor(t,i,e){super(),this.fromID=t,this.toID=i,this.alpha=e}undoInitialStep(t){t.setEdgeAlpha(this.fromID,this.toID,this.alpha)}}class v extends n{constructor(t,i,e){super(),this.objectID=t,this.x=i,this.y=e}undoInitialStep(t){t.setNodePosition(this.objectID,this.x,this.y)}}class F extends n{constructor(t,i){super(),this.objectID=t,this.onTop=i}undoInitialStep(t){t.setAlwaysOnTop(this.objectID,this.onTop)}}class w extends n{constructor(t,i){super(),this.objectID=t,this.thicknessArray=i}undoInitialStep(t){t.setRectangleEdgeThickness(this.objectID,this.thicknessArray)}}class S{constructor(){this.objectID=-1,this.x=0,this.y=0,this.backgroundColor="#FFFFFF",this.foregroundColor="#000000",this.highlighted=!1,this.label="",this.labelColor="#000000",this.layer=0,this.alpha=1,this.minHeightDiff=3,this.range=5,this.highlightIndex=-1,this.highlightIndexDirty=!0,this.addedToScene=!0}setBackgroundColor(t){this.backgroundColor=t}setNull(){}getNull(){return!1}setAlpha(t){this.alpha=t}getAlpha(){return this.alpha}setForegroundColor(t){this.foregroundColor=t,this.labelColor=t}getHighlight(){return this.highlighted}getWidth(){return 0}getHeight(){return 0}setHighlight(t,i){this.highlighted=t,this.highlightColor=i||"#ff0000"}centerX(){return this.x}setWidth(){throw new Error("setWidth() should be implemented in a base class")}centerY(){return this.y}getAlignLeftPos(t){return[t.right()+this.getWidth()/2,t.centerY()]}getAlignRightPos(t){return[t.left()-this.getWidth()/2,t.centerY()]}getAlignTopPos(t){return[t.centerX(),t.top()-this.getHeight()/2]}getAlignBottomPos(t){return[t.centerX(),t.bottom()+this.getHeight()/2]}alignLeft(t){this.y=t.centerY(),this.x=t.right()+this.getWidth()/2}alignRight(t){this.y=t.centerY(),this.x=t.left()-this.getWidth()/2}alignTop(t){this.x=t.centerX(),this.y=t.top()-this.getHeight()/2}alignBottom(t){this.x=t.centerX(),this.y=t.bottom()+this.getHeight()/2}getClosestCardinalPoint(t,i){let e,s,h,a;return t<this.left()?(e=this.left()-t,h=this.left()):t>this.right()?(e=t-this.right(),h=this.right()):(e=0,h=this.centerX()),i<this.top()?(s=this.top()-i,a=this.top()):i>this.bottom()?(s=i-this.bottom(),a=this.bottom()):(s=0,a=this.centerY()),s>e?h=this.centerX():a=this.centerY(),[h,a]}centered(){return!1}pulseHighlight(t){if(this.highlighted){const i=t/7,e=Math.abs(i%(2*this.range-2)-this.range+1);this.highlightDiff=e+this.minHeightDiff}}getTailPointerAttachPos(){return[this.x,this.y]}getHeadPointerAttachPos(){return[this.x,this.y]}identifier(){return this.objectID}getText(){return this.label}getTextColor(){return this.labelColor}setTextColor(t){this.labelColor=t}setText(t){this.label=t}setHighlightIndex(t){this.highlightIndex=t,this.highlightIndexDirty=!0}getHighlightIndex(){return this.highlightIndex}}class A extends S{constructor(t,i,e,s,h,a){super(),this.objectID=t,this.backgroundColor=h,this.foregroundColor=a,this.widthPerElement=i,this.h=e,this.numLabels=s,this.labels=[],this.labelColors=[];for(let n=0;n<this.numLabels;n++)this.labelColors[n]=this.foregroundColor}getNumElements(){return this.numLabels}getWidth(){return this.numLabels>0?this.widthPerElement*this.numLabels:10}setNumElements(t){if(this.numLabels<t){for(let i=this.numLabels;i<t;i++)this.labels[i]="",this.labelColors[i]=this.foregroundColor;this.numLabels=t}else if(this.numLabels>t){for(let i=t;i<this.numLabels;i++)this.labels[i]=null;this.numLabels=t}}left(){return this.x-this.getWidth()/2}right(){return this.x+this.getWidth()/2}top(){return this.y-this.h/2}bottom(){return this.y+this.h/2}draw(t){let i;i=this.left(),isNaN(i)&&(i=0);const e=this.top();this.highlighted&&(t.strokeStyle="#FF0000",t.fillStyle="#FF0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.getWidth()+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.getWidth()+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.getWidth(),e),t.lineTo(i+this.getWidth(),e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),t.textAlign="center",t.textBaseline="middle";for(let s=0;s<this.numLabels;s++){const i=this.x-this.widthPerElement*this.numLabels/2+this.widthPerElement/2+s*this.widthPerElement,e=this.y;t.fillStyle=this.labelColors[s],t.fillText(this.labels[s],i,e)}}getHeight(){return this.h}setForegroundColor(t){this.foregroundColor=t;for(let i=0;i<this.numLabels;i++)this.labelColor[i]=t}getTailPointerAttachPos(t,i,e){return 0===e?[this.left()+5,this.y]:e===this.numLabels?[this.right()-5,this.y]:[this.left()+e*this.widthPerElement,this.y]}getHeadPointerAttachPos(t,i){return i<this.y-this.h/2?[this.x,this.y-this.h/2]:this.fromY>this.y+this.h/2?[this.x,this.y+this.h/2]:t<this.x-this.getWidth()/2?[this.x-this.getWidth()/2,this.y]:[this.x+this.getWidth()/2,this.y]}getTextColor(t){return t=t||0,this.labelColors[t]}getText(t){return t=t||0,this.labels[t]}setTextColor(t,i){i=i||0,this.labelColors[i]=t}setText(t,i){i=i||0,this.labels[i]=t}createUndoDelete(){return new B(this.objectID,this.numLabels,this.labels,this.x,this.y,this.widthPerElement,this.h,this.labelColors,this.backgroundColor,this.foregroundColor,this.layer,this.highlighted,this.highlightColor)}}class B extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c,m){super(),this.objectID=t,this.numLabels=i,this.labels=e,this.x=s,this.y=h,this.widthPerElement=a,this.h=n,this.labelColors=l,this.backgroundColor=r,this.foregroundColor=o,this.layer=d,this.highlighted=c,this.highlightColor=m}undoInitialStep(t){t.addBTreeNode(this.objectID,this.widthPerElement,this.h,this.numLabels,this.backgroundColor,this.foregroundColor),t.setNodePosition(this.objectID,this.x,this.y);for(let i=0;i<this.numLabels;i++)t.setText(this.objectID,this.labels[i],i),t.setTextColor(this.objectID,this.labelColors[i],i);t.setLayer(this.objectID,this.layer),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class _ extends S{constructor(t,i){super(),this.objectID=t,this.label=i,this.radius=20,this.thickness=3,this.highlightIndex=-1}getTailPointerAttachPos(t,i){return this.getHeadPointerAttachPos(t,i)}getWidth(){return 2*this.radius}setWidth(t){this.radius=t/2}getHeadPointerAttachPos(t,i){const e=t-this.x,s=i-this.y,h=Math.sqrt(e*e+s*s);return 0===h?[this.x,this.y]:[this.x+e/h*this.radius,this.y+s/h*this.radius]}setHighlightIndex(t){this.highlightIndex=t,this.highlightIndexDirty=!0}draw(t){t.globalAlpha=this.alpha,this.highlighted&&(t.fillStyle=this.highlightColor,t.beginPath(),t.arc(this.x,this.y,this.radius+this.highlightDiff,0,2*Math.PI,!0),t.closePath(),t.fill()),t.fillStyle=this.backgroundColor,t.strokeStyle=this.foregroundColor,t.lineWidth=1.2,t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI,!0),t.closePath(),t.fill(),t.stroke(),t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,t.fillStyle=this.foregroundColor;const i=this.label.split("\n");if(1===i.length)if(this.highlightIndexDirty&&-1!==this.highlightIndex&&(this.leftWidth=t.measureText(this.label.substring(0,this.highlightIndex)).width,this.centerWidth=t.measureText(this.label.substring(this.highlightIndex,this.highlightIndex+1)).width,this.textWidth=t.measureText(this.label).width,this.highlightIndexDirty=!1),-1!==this.highlightIndex&&this.highlightIndex<this.label.length){const i=this.x-this.textWidth/2;t.textAlign="left";const e=this.label.substring(0,this.highlightIndex),s=this.label.substring(this.highlightIndex,this.highlightIndex+1),h=this.label.substring(this.highlightIndex+1);t.fillText(e,i,this.y),t.strokeStyle="#FF0000",t.fillStyle="#FF0000",t.fillText(s,i+this.leftWidth,this.y),t.strokeStyle=this.labelColor,t.fillStyle=this.labelColor,t.fillText(h,i+this.leftWidth+this.centerWidth,this.y)}else t.fillText(this.label,this.x,this.y);else if(i.length%2===0){const e=i.length/2;for(let s=0;s<i.length/2;s++)t.fillText(i[e-s-1],this.x,this.y-12*(s+.5)),t.fillText(i[e+s],this.x,this.y+12*(s+.5))}else{const e=(i.length-1)/2;t.fillText(i[e],this.x,this.y);for(let s=0;s<e;s++)t.fillText(i[e-(s+1)],this.x,this.y-12*(s+1)),t.fillText(i[e+(s+1)],this.x,this.y+12*(s+1))}}createUndoDelete(){return new P(this.objectID,this.label,this.x,this.y,this.foregroundColor,this.backgroundColor,this.layer,this.radius,this.highlighted,this.highlightColor)}}class P extends n{constructor(t,i,e,s,h,a,n,l,r,o){super(),this.objectID=t,this.label=i,this.x=e,this.y=s,this.foregroundColor=h,this.backgroundColor=a,this.layer=n,this.radius=l,this.highlighted=r,this.highlightColor=o}undoInitialStep(t){t.addCircleObject(this.objectID,this.label),t.setWidth(this.objectID,2*this.radius),t.setNodePosition(this.objectID,this.x,this.y),t.setForegroundColor(this.objectID,this.foregroundColor),t.setBackgroundColor(this.objectID,this.backgroundColor),t.setLayer(this.objectID,this.layer),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class E extends S{constructor(t,i,e,s,h,a,n){super(),this.objectID=t,this.w=e,this.h=s,this.backgroundColor=a,this.foregroundColor=n,this.highlighted=!1,this.linkPercent=h,this.nullPointer=!1,this.label=i,this.labelPosX=0,this.labelPosY=0,this.labelColor=n}setNull(t){this.nullPointer!==t&&(this.nullPointer=t)}getNull(){return this.nullPointer}left(){return this.x-this.w*(1-this.linkPercent)/2}right(){return this.x+this.w*(this.linkPercent+1)/2}top(){return this.y-this.h/2}bottom(){return this.y+this.h/2}resetTextPosition(){this.labelPosX=this.x,this.labelPosY=this.y}getTailPointerAttachPos(){return[this.x+this.w/2,this.y]}getHeadPointerAttachPos(t,i){return t<this.x?this.getClosestCardinalPoint(t,i):[this.x,this.bottom()]}setWidth(t){this.w=t,this.resetTextPosition()}setHeight(t){this.h=t,this.resetTextPosition()}getWidth(){return this.w}getHeight(){return this.h}draw(t){let i,e;t.lineWidth=2,i=this.left(),e=this.top(),this.highlighted&&(t.strokeStyle="#FF0000",t.fillStyle="#FF0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),i=this.right()-this.w*this.linkPercent,e=this.top(),t.lineWidth=1,t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),this.nullPointer&&t.lineTo(this.right(),e+this.h),t.closePath(),t.stroke(),t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,this.resetTextPosition(),t.fillStyle=this.labelColor,t.fillText(this.label,this.labelPosX,this.labelPosY)}setTextColor(t){this.labelColor=t}getTextColor(){return this.labelColor}getText(){return this.label}setText(t){this.label=t,this.resetTextPosition()}setHighlight(t){t!==this.highlighted&&(this.highlighted=t)}createUndoDelete(){return new H(this.objectID,this.label,this.w,this.h,this.x,this.y,this.linkPercent,this.backgroundColor,this.foregroundColor,this.labelColor,this.layer,this.nullPointer,this.highlighted,this.highlightColor)}}class H extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c,m,g){super(),this.objectID=t,this.label=i,this.w=e,this.h=s,this.x=h,this.y=a,this.linkPercent=n,this.backgroundColor=l,this.foregroundColor=r,this.labelColor=o,this.layer=d,this.nullPointer=c,this.highlighted=m,this.highlightColor=g}undoInitialStep(t){t.addCircularlyLinkedListObject(this.objectID,this.label,this.w,this.h,this.linkPercent,this.backgroundColor,this.foregroundColor),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setNull(this.objectID,this.nullPointer),t.setTextColor(this.objectID,this.labelColor),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class z extends S{constructor(t,i,e,s,h,a,n){super(),this.objectID=t,this.w=e,this.h=s,this.backgroundColor=a,this.foregroundColor=n,this.highlighted=!1,this.linkPercent=h,this.prevNullPointer=!1,this.nextNullPointer=!1,this.label=i,this.labelPosX=0,this.labelPosY=0,this.labelColor=n}setPrevNull(t){this.prevNullPointer!==t&&(this.prevNullPointer=t)}setNextNull(t){this.nextNullPointer!==t&&(this.nextNullPointer=t)}getLeftNull(){return this.prevNullPointer}getRightNull(){return this.nextNullPointer}left(){return this.x-this.w*(1-this.linkPercent)/2}right(){return this.x+this.w*(this.linkPercent+1)/2}top(){return this.y-this.h/2}bottom(){return this.y+this.h/2}resetTextPosition(){this.labelPosY=this.y,this.labelPosX=this.left()+this.w*(2*this.linkPercent)}getTailPointerAttachPos(t,i,e){return 0===e?[this.x+this.w/2,this.y-.2*this.h]:[this.left()+this.w*this.linkPercent/2,this.y+.2*this.h]}getHeadPointerAttachPos(t,i){const e=this.getClosestCardinalPoint(t,i);return e[1]===this.y?e[0]===this.left()?[e[0],this.y-.2*this.h]:[e[0],this.y+.2*this.h]:[e[0],e[1]]}setWidth(t){this.w=t,this.resetTextPosition()}setHeight(t){this.h=t,this.resetTextPosition()}getWidth(){return this.w}getHeight(){return this.h}draw(t){let i,e;t.lineWidth=2,i=this.left(),e=this.top(),this.highlighted&&(t.strokeStyle="#FF0000",t.fillStyle="#FF0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),t.lineWidth=1,i=this.left()+this.w*this.linkPercent,e=this.top(),t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),this.prevNullPointer&&(t.moveTo(this.left(),e),t.lineTo(this.left()+this.w*this.linkPercent,e+this.h)),t.closePath(),t.stroke(),i=this.right()-this.w*this.linkPercent,e=this.top(),t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),this.nextNullPointer&&(t.moveTo(this.right()-this.w*this.linkPercent,e),t.lineTo(this.right(),e+this.h)),t.closePath(),t.stroke(),t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,this.resetTextPosition(),t.fillStyle=this.labelColor,t.fillText(this.label,this.labelPosX,this.labelPosY)}setTextColor(t){this.labelColors=t}getTextColor(){return this.labelColors}getText(){return this.label}setText(t){this.label=t,this.resetTextPosition()}setHighlight(t){t!==this.highlighted&&(this.highlighted=t)}createUndoDelete(){return new N(this.objectID,this.label,this.w,this.h,this.x,this.y,this.linkPercent,this.backgroundColor,this.foregroundColor,this.labelColor,this.layer,this.prevNullPointer,this.nextNullPointer,this.highlighted,this.highlightColor)}}class N extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c,m,g,u){super(),this.objectID=t,this.label=i,this.w=e,this.h=s,this.x=h,this.y=a,this.linkPercent=n,this.backgroundColor=l,this.foregroundColor=r,this.labelColors=o,this.layer=d,this.prevNullPointer=c,this.nextNullPointer=m,this.highlighted=g,this.highlightColor=u}undoInitialStep(t){t.addDoublyLinkedListObject(this.objectID,this.label,this.w,this.h,this.linkPercent,this.backgroundColor,this.foregroundColor),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setPrevNull(this.objectID,this.prevNullPointer),t.setNextNull(this.objectID,this.nextNullPointer),t.setTextColor(this.objectID,this.labelColor),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class R extends S{constructor(t,i,e){super(),this.objectID=t,this.radius=e,this.thickness=4,this.foregroundColor=i,this.x=0,this.y=0}draw(t){t.globalAlpha=this.alpha,t.strokeStyle=this.foregroundColor,t.lineWidth=this.thickness,t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI,!0),t.closePath(),t.stroke()}createUndoDelete(){return new j(this.objectID,this.x,this.y,this.foregroundColor,this.radius,this.layer,this.alpha,this.highlighted,this.highlightColor)}}class j extends n{constructor(t,i,e,s,h,a,n,l,r){super(),this.objectID=t,this.x=i,this.y=e,this.foregroundColor=s,this.radius=h,this.layer=a,this.alpha=n,this.highlighted=l,this.highlightColor=r}undoInitialStep(t){t.addHighlightCircleObject(this.objectID,this.foregroundColor,this.radius),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setAlpha(this.objectID,this.alpha),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class M extends S{constructor(t,i,e,s){super(),this.objectID=t,this.textWidth=s||0,this.label=i,this.labelColor="#000000",this.highlighted=!1,this.centered=e,this.leftWidth=-1,this.centerWidth=-1,this.highlightIndex=-1}centered(){return this.centered}draw(t){if(!this.addedToScene)return;t.globalAlpha=this.alpha,t.font="12px Arial";let i=this.x;this.highlightIndex>=this.label.length&&(this.highlightIndex=-1),this.highlightIndexDirty&&-1!==this.highlightIndex&&(this.leftWidth=t.measureText(this.label.substring(0,this.highlightIndex)).width,this.centerWidth=t.measureText(this.label.substring(this.highlightIndex,this.highlightIndex+1)).width,this.highlightIndexDirty=!1),this.centered?-1!==this.highlightIndex?(i=this.x-this.width/2,t.textAlign="left",t.textBaseline="middle"):(t.textAlign="center",t.textBaseline="middle"):(t.textAlign="left",t.textBaseline="top"),this.highlighted&&(t.strokeStyle="#FFAAAA",t.fillStyle="#FF0000",t.lineWidth=this.highlightDiff,t.strokeText(this.label,this.x,this.y)),t.strokeStyle=this.labelColor,t.fillStyle=this.labelColor,t.lineWidth=2;const e=this.label.split("\n");if(1===e.length)if(-1===this.highlightIndex)t.fillText(this.label,this.x,this.y);else{const e=this.label.substring(0,this.highlightIndex),s=this.label.substring(this.highlightIndex,this.highlightIndex+1),h=this.label.substring(this.highlightIndex+1);t.fillText(e,i,this.y),t.strokeStyle="#FF0000",t.fillStyle="#FF0000",t.fillText(s,i+this.leftWidth,this.y),t.strokeStyle=this.labelColor,t.fillStyle=this.labelColor,t.fillText(h,i+this.leftWidth+this.centerWidth,this.y)}else{const i=this.centered?(1-e.length)/2:0;for(let s=0;s<e.length;s++)t.fillText(e[s],this.x,this.y+i+12*s)}t.closePath()}getAlignLeftPos(t){return this.centered?[t.left()-this.textWidth/2,this.y=t.centerY()]:[t.left()-this.textWidth,t.centerY()-5]}alignLeft(t){this.centered?(this.y=t.centerY(),this.x=t.left()-this.textWidth/2):(this.y=t.centerY()-5,this.x=t.left()-this.textWidth)}alignRight(t){this.centered?(this.y=t.centerY(),this.x=t.right()+this.textWidth/2):(this.y=t.centerY()-5,this.x=t.right())}getAlignRightPos(t){return this.centered?[t.right()+this.textWidth/2,t.centerY()]:[t.right(),t.centerY()-5]}alignTop(t){this.centered?(this.y=t.top()-5,this.x=t.centerX()):(this.y=t.top()-10,this.x=t.centerX()-this.textWidth/2)}getAlignTopPos(t){return this.centered?[t.centerX(),t.top()-5]:[t.centerX()-this.textWidth/2,t.top()-10]}alignBottom(t){this.centered?(this.y=t.bottom()+5,this.x=t.centerX()):(this.y=t.bottom(),this.x=t.centerX()-this.textWidth/2)}getAlignBottomPos(t){return this.centered?[t.centerX(),t.bottom()+5]:[t.centerX()-this.textWidth/2,t.bottom()]}getWidth(){return this.textWidth}getHeight(){return 10}setHighlight(t){this.highlighted=t}centerX(){return this.centered?this.x:this.x+this.textWidth}centerY(){return this.centered?this.y:this.y+5}top(){return this.centered?this.y-5:this.y}bottom(){return this.centered?this.y+5:this.y+10}right(){return this.centered?this.x+this.textWidth/2:this.x+this.textWidth}left(){return this.centered?this.x-this.textWidth/2:this.x}setHighlightIndex(t){-1===this.label.indexOf("\n")&&this.label.length>t?(this.highlightIndex=t,this.highlightIndexDirty=!0):this.highlightIndex=-1}getTailPointerAttachPos(t,i){return this.getClosestCardinalPoint(t,i)}getHeadPointerAttachPos(t,i){return this.getClosestCardinalPoint(t,i)}setText(t,i,e){this.label=t,null!=e&&(this.textWidth=e)}createUndoDelete(){return new O(this.objectID,this.label,this.x,this.y,this.centered,this.labelColor,this.layer,this.highlightIndex,this.highlighted,this.highlightColor)}}class O extends n{constructor(t,i,e,s,h,a,n,l,r,o){super(),this.objectID=t,this.label=i,this.x=e,this.y=s,this.centered=h,this.labelColor=a,this.layer=n,this.highlightIndex=l,this.highlighted=r,this.highlightColor=o}undoInitialStep(t){t.addLabelObject(this.objectID,this.label,this.centered),t.setNodePosition(this.objectID,this.x,this.y),t.setForegroundColor(this.objectID,this.labelColor),t.setLayer(this.objectID,this.layer),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class V{constructor(t,i,e,s,h,a,n,l){this.fromID=t,this.toID=i,this.foregroundColor=e,this.edgeLabel=a,this.highlighted=!1,this.highlightDiff=0,this.dirty=!1,this.directed=h,this.anchorPoint=n,this.alpha=1,this.thickness=l,this.arrowHeight=8,this.arrowWidth=4,this.curve=s}color(){return this.foregroundColor}setColor(t){this.foregroundColor=t,this.dirty=!0}setHighlight(t,i){this.highlighted=t,this.highlightColor=i||"#FF0000"}setThickness(t){this.thickness=t}pulseHighlight(t){if(this.highlighted){const i=t/14,e=Math.abs(i%4-3+1);this.highlightDiff=e+this.thickness+3,this.dirty=!0}}hasNode(t){return this.fromID===t||this.toID===t}sign(t){return t>0?1:-1}drawArrow(t,i,e){e.strokeStyle=i,e.fillStyle=i,e.lineWidth=t;const s=this.fromID.getTailPointerAttachPos(this.toID.x,this.toID.y,this.anchorPoint),h=this.toID.getHeadPointerAttachPos(this.fromID.x,this.fromID.y),a=h[0]-s[0],n=h[1]-s[1],l=a/2+s[0],r=n/2+s[1],o=l-n*this.curve,d=r+a*this.curve;e.beginPath(),e.moveTo(s[0],s[1]),e.quadraticCurveTo(o,d,h[0],h[1]),e.stroke();let c=.25*s[0]+.5*o+.25*h[0],m=.25*s[1]+.5*d+.25*h[1];const g=Math.sqrt(n*n+a*a);if(0!==g&&(c+=-n*this.sign(this.curve)/g*10,m+=a*this.sign(this.curve)/g*10),e.textAlign="center",e.font="12px Arial",e.textBaseline="middle",e.fillText(this.edgeLabel,c,m),this.directed){let t=o-h[0],i=d-h[1];const s=Math.sqrt(t*t+i*i);s>0&&(t/=s,i/=s,e.beginPath(),e.moveTo(h[0],h[1]),e.lineTo(h[0]+t*this.arrowHeight-i*this.arrowWidth,h[1]+i*this.arrowHeight+t*this.arrowWidth),e.lineTo(h[0]+t*this.arrowHeight+i*this.arrowWidth,h[1]+i*this.arrowHeight-t*this.arrowWidth),e.lineTo(h[0],h[1]),e.closePath(),e.stroke(),e.fill())}}draw(t){t.globalAlpha=this.alpha,this.highlighted&&this.drawArrow(this.highlightDiff,this.highlightColor,t),this.drawArrow(this.thickness,this.foregroundColor,t)}createUndoConnect(){return new X(this.fromID.objectID,this.toID.objectID,!0,this.foregroundColor,this.curve,this.directed,this.edgeLabel,this.anchorPoint,this.thickness,this.highlighted)}}class X{constructor(t,i,e,s,h,a,n,l,r,o){this.fromID=t,this.toID=i,this.createConnection=e,this.color=s,this.curve=h,this.directed=a,this.edgeLabel=n,this.anchorPoint=l,this.thickness=r,this.highlighted=o}undoInitialStep(t){this.createConnection?(t.connectEdge(this.fromID,this.toID,this.color,this.curve,this.directed,this.edgeLabel,this.anchorPoint,this.thickness),t.setEdgeHighlight(this.fromID,this.toID,this.highlighted)):t.disconnect(this.fromID,this.toID)}addUndoAnimation(){return!1}}class K extends S{constructor(t,i,e,s,h,a,n,l,r){super(),this.objectID=t,this.w=e,this.h=s,this.backgroundColor=l,this.foregroundColor=r,this.highlighted=!1,this.vertical=a,this.linkPosEnd=n,this.linkPercent=h,this.nullPointer=!1,this.labels=i,this.labelPosX=[0],this.labelPosY=[0],this.labelColors=[r]}left(){return this.vertical?this.x-this.w/2:this.linkPosEnd?this.x-this.w*(1-this.linkPercent)/2:this.x-this.w*(this.linkPercent+1)/2}setNull(t){this.nullPointer!==t&&(this.nullPointer=t)}getNull(){return this.nullPointer}right(){return this.vertical?this.x+this.w/2:this.linkPosEnd?this.x+this.w*(this.linkPercent+1)/2:this.x+this.w*(1-this.linkPercent)/2}top(){return this.vertical?this.linkPosEnd?this.y-this.h*(1-this.linkPercent)/2:this.y-this.h*(1+this.linkPercent)/2:this.y-this.h/2}bottom(){return this.vertical?this.linkPosEnd?this.y+this.h*(1+this.linkPercent)/2:this.y+this.h*(1-this.linkPercent)/2:this.y+this.h/2}getTailPointerAttachPos(t,i,e){return this.vertical&&this.linkPosEnd?[this.x,this.y+this.h/2]:this.vertical&&!this.linkPosEnd?[this.x,this.y-this.h/2]:!this.vertical&&this.linkPosEnd?[this.x+this.w/2,this.y]:[this.x-this.w/2,this.y]}getHeadPointerAttachPos(t,i){return this.getClosestCardinalPoint(t,i)}setWidth(t){this.w=t}setHeight(t){this.h=t}getWidth(){return this.w}getHeight(){return this.h}draw(t){let i,e;if(t.lineWidth=2,i=this.left(),e=this.top(),this.highlighted&&(t.strokeStyle="#ff0000",t.fillStyle="#ff0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),this.vertical){i=this.left();for(let s=1;s<this.labels.length;s++)e=this.y+this.h*(1-this.linkPercent)*(s/this.labels.length-.5),t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.closePath(),t.stroke()}else{e=this.top();for(let s=1;s<this.labels.length;s++)i=this.x+this.w*(1-this.linkPercent)*(s/this.labels.length-.5),t.beginPath(),t.moveTo(i,e),t.lineTo(i,e+this.h),t.closePath(),t.stroke()}if(t.lineWidth=1,this.vertical&&this.linkPosEnd?(i=this.left(),e=this.bottom()-this.h*this.linkPercent,t.beginPath(),t.moveTo(i+this.w,e),t.lineTo(i,e),this.nullPointer&&t.lineTo(this.startX+this.w,this.bottom()),t.closePath(),t.stroke()):this.vertical&&!this.linkPosEnd?(i=this.left(),e=this.top()+this.h*this.linkPercent,t.beginPath(),t.moveTo(i+this.w,e),t.lineTo(i,e),this.nullPointer&&t.lineTo(i+this.w,this.top()),t.closePath(),t.stroke()):!this.vertical&&this.linkPosEnd?(i=this.right()-this.w*this.linkPercent,e=this.top(),t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),this.nullPointer&&t.lineTo(this.right(),e+this.h),t.closePath(),t.stroke()):(i=this.left()+this.w*this.linkPercent,e=this.top(),t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),this.nullPointer&&t.lineTo(this.left(),e),t.closePath(),t.stroke()),t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,this.vertical){this.labelPosX[0]=this.x,this.labelPosY[0]=this.y+this.h*(1-this.linkPercent)/2*(1/this.labels.length-1);for(let t=1;t<this.labels.length;t++)this.labelPosX[t]=this.x,this.labelPosY[t]=this.labelPosY[t-1]+this.h*(1-this.linkPercent)/this.labels.length}else{this.labelPosY[0]=this.y,this.labelPosX[0]=this.x+this.w*(1-this.linkPercent)/2*(1/this.labels.length-1);for(let t=1;t<this.labels.length;t++)this.labelPosY[t]=this.y,this.labelPosX[t]=this.labelPosX[t-1]+this.w*(1-this.linkPercent)/this.labels.length}for(let s=0;s<this.labels.length;s++)t.fillStyle=this.labelColors[s],t.fillText(this.labels[s],this.labelPosX[s],this.labelPosY[s])}setTextColor(t,i){this.labelColors[i]=t}getTextColor(t){return this.labelColors[t]}getText(t){return this.labels[t]}setText(t,i){this.labels[i]=t}setHighlight(t){t!==this.highlighted&&(this.highlighted=t)}createUndoDelete(){return new q(this.objectID,this.labels,this.w,this.h,this.x,this.y,this.linkPercent,this.vertical,this.linkPosEnd,this.backgroundColor,this.foregroundColor,this.labelColors,this.layer,this.nullPointer,this.highlighted,this.highlightColor)}}class q extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c,m,g,u,p){super(),this.objectID=t,this.labels=i,this.w=e,this.h=s,this.x=h,this.y=a,this.linkPercent=n,this.vertical=l,this.linkPosEnd=r,this.backgroundColor=o,this.foregroundColor=d,this.labelColors=c,this.layer=m,this.nullPointer=g,this.highlighted=u,this.highlightColor=p}undoInitialStep(t){t.addLinkedListObject(this.objectID,this.labels,this.w,this.h,this.linkPercent,this.vertical,this.linkPosEnd,this.backgroundColor,this.foregroundColor),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setNull(this.objectID,this.nullPointer);for(let i=0;i<this.labels.length;i++)t.setTextColor(this.objectID,this.labelColors[i],i);t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class W extends S{constructor(t,i,e,s,h,a,n,l){super(),this.objectID=t,this.w=e,this.h=s,this.xJustify=h,this.yJustify=a,this.backgroundColor=n,this.foregroundColor=l,this.textColor=l,this.highlighted=!1,this.thicknessArray=[!1,!1,!1,!1],this.label=i,this.nullPointer=!1}setNull(t){this.nullPointer=t}getNull(){return this.nullPointer}left(){return"left"===this.xJustify?this.x:"center"===this.xJustify?this.x-this.w/2:this.x-this.w}centerX(){return"center"===this.xJustify?this.x:"left"===this.xJustify?this.x+this.w/2:this.x-this.w/2}centerY(){return"center"===this.yJustify?this.y:"top"===this.yJustify?this.y+this.h/2:this.y-this.w/2}top(){return"top"===this.yJustify?this.y:"center"===this.yJustify?this.y-this.h/2:this.y-this.h}bottom(){return"top"===this.yJustify?this.y+this.h:"center"===this.yJustify?this.y+this.h/2:this.y}right(){return"left"===this.xJustify?this.x+this.w:"center"===this.xJustify?this.x+this.w/2:this.x}getHeadPointerAttachPos(t,i){return this.getClosestCardinalPoint(t,i)}getTailPointerAttachPos(t,i,e){switch(e){case 0:return this.getClosestCardinalPoint(t,i);case 1:return[this.x,this.top()];case 2:return[this.x,this.bottom()];case 3:return[this.left(),this.y];case 4:return[this.right(),this.y];default:return null}}setWidth(t){this.w=t}setHeight(t){this.h=t}getWidth(){return this.w}getHeight(){return this.h}draw(t){if(!this.addedToScene)return;let i,e;t.globalAlpha=this.alpha,t.lineWidth=2,"left"===this.xJustify?i=this.x:"center"===this.xJustify?i=this.x-this.w/2:"right"===this.xJustify&&(i=this.x-this.w),"top"===this.yJustify?e=this.y:"center"===this.yJustify?e=this.y-this.h/2:"bottom"===this.yJustify&&(e=this.y-this.h),t.lineWidth=2,this.highlighted&&(t.strokeStyle="#ff0000",t.fillStyle="#ff0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),this.thicknessArray[0]&&(t.lineWidth=3,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.stroke(),t.closePath()),this.thicknessArray[1]&&(t.lineWidth=3,t.beginPath(),t.moveTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.stroke(),t.closePath()),this.thicknessArray[2]&&(t.lineWidth=3,t.beginPath(),t.moveTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.stroke(),t.closePath()),this.thicknessArray[3]&&(t.lineWidth=3,t.beginPath(),t.moveTo(i,e+this.h),t.lineTo(i,e),t.stroke(),t.closePath()),t.lineWidth=1.2,this.nullPointer&&(t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e+this.h),t.closePath(),t.stroke()),t.fillStyle=this.textColor,t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,t.fillText(this.label,this.x,this.y)}setText(t){this.label=t}setTextColor(t){this.textColor=t}getTextColor(){return this.textColor}setHighlight(t){this.highlighted=t}setEdgeThickness(t){this.thicknessArray=t}getEdgeThickness(){return this.thicknessArray}createUndoDelete(){return new G(this.objectID,this.label,this.x,this.y,this.w,this.h,this.xJustify,this.yJustify,this.backgroundColor,this.foregroundColor,this.layer,this.highlighted,this.highlightColor)}}class G extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c,m){super(),this.objectID=t,this.label=i,this.x=e,this.y=s,this.w=h,this.h=a,this.xJustify=n,this.yJustify=l,this.backgroundColor=r,this.foregroundColor=o,this.layer=d,this.highlighted=c,this.highlightColor=m}undoInitialStep(t){t.addRectangleObject(this.objectID,this.label,this.w,this.h,this.xJustify,this.yJustify,this.backgroundColor,this.foregroundColor),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class Y extends S{constructor(t,i,e,s,h,a){super(),this.objectID=t,this.w=e,this.h=s,this.backgroundColor=h,this.foregroundColor=a,this.highlighted=!1,this.label=i,this.labelPosX=0,this.labelPosY=0,this.labelColor=a}left(){return this.x-this.w/2}right(){return this.x+this.w/2}top(){return this.y-this.h/2}bottom(){return this.y+this.h/2}resetTextPosition(){this.labelPosY=this.y,this.labelPosX=this.x}getTailPointerAttachPos(t,i,e){switch(e){case 0:return[this.x,this.top()];case 1:return[this.x,this.bottom()];case 2:return[this.left(),this.y];case 3:return[this.right(),this.y];default:return this.getClosestCardinalPoint(t,i)}}getHeadPointerAttachPos(t,i){return this.getClosestCardinalPoint(t,i)}setWidth(t){this.w=t,this.resetTextPosition()}setHeight(t){this.h=t,this.resetTextPosition()}getWidth(){return this.w}getHeight(){return this.h}draw(t){const i=this.left(),e=this.top();this.highlighted&&(t.strokeStyle="#ff0000",t.fillStyle="#ff0000",t.beginPath(),t.moveTo(i-this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e-this.highlightDiff),t.lineTo(i+this.w+this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e+this.h+this.highlightDiff),t.lineTo(i-this.highlightDiff,e-this.highlightDiff),t.closePath(),t.stroke(),t.fill()),t.strokeStyle=this.foregroundColor,t.fillStyle=this.backgroundColor,t.beginPath(),t.moveTo(i,e),t.lineTo(i+this.w,e),t.lineTo(i+this.w,e+this.h),t.lineTo(i,e+this.h),t.lineTo(i,e),t.closePath(),t.stroke(),t.fill(),t.textAlign="center",t.font="12px Arial",t.textBaseline="middle",t.lineWidth=2,this.resetTextPosition(),t.fillStyle=this.labelColor,"\u2212\u221e"!==this.label&&"\u221e"!==this.label||(t.font="18px sans-serif"),t.fillText(this.label,this.labelPosX,this.labelPosY)}setTextColor(t){this.labelColor=t}getTextColor(){return this.labelColor}getText(){return this.label}setText(t){this.label=t,this.resetTextPosition()}setHighlight(t){t!==this.highlighted&&(this.highlighted=t)}createUndoDelete(){return new U(this.objectID,this.label,this.w,this.h,this.x,this.y,this.labelColor,this.backgroundColor,this.foregroundColor,this.layer,this.highlighted,this.highlightColor)}}class U extends n{constructor(t,i,e,s,h,a,n,l,r,o,d,c){super(),this.objectID=t,this.label=i,this.w=e,this.h=s,this.x=h,this.y=a,this.labelColor=n,this.backgroundColor=l,this.foregroundColor=r,this.layer=o,this.highlighted=d,this.highlightColor=c}undoInitialStep(t){t.addSkipListObject(this.objectID,this.label,this.w,this.h,this.backgroundColor,this.foregroundColor),t.setTextColor(this.objectID,this.labelColor),t.setNodePosition(this.objectID,this.x,this.y),t.setLayer(this.objectID,this.layer),t.setHighlight(this.objectID,this.highlighted,this.highlightColor)}}class ${constructor(t){this.nodes=[],this.edges=[],this.backEdges=[],this.activeLayers=[],this.activeLayers[0]=!0,this.ctx=t.current.getContext("2d"),this.framenum=0,this.width=0,this.height=0,this.statusReport=new M(-1,"XXX",!1,30),this.statusReport.x=30}draw(){let t,i;for(this.framenum++,this.framenum>1e3&&(this.framenum=0),this.ctx.clearRect(0,0,this.width,this.height),this.statusReport.y=this.height-15,t=0;t<this.nodes.length;t++)null==this.nodes[t]||this.nodes[t].highlighted||!this.nodes[t].addedToScene||this.nodes[t].alwaysOnTop||this.nodes[t].draw(this.ctx);for(t=0;t<this.nodes.length;t++)null!=this.nodes[t]&&this.nodes[t].highlighted&&!this.nodes[t].alwaysOnTop&&this.nodes[t].addedToScene&&(this.nodes[t].pulseHighlight(this.framenum),this.nodes[t].draw(this.ctx));for(t=0;t<this.nodes.length;t++)null!=this.nodes[t]&&!this.nodes[t].highlighted&&this.nodes[t].alwaysOnTop&&this.nodes[t].addedToScene&&this.nodes[t].draw(this.ctx);for(t=0;t<this.nodes.length;t++)null!=this.nodes[t]&&this.nodes[t].highlighted&&this.nodes[t].alwaysOnTop&&this.nodes[t].addedToScene&&(this.nodes[t].pulseHighlight(this.framenum),this.nodes[t].draw(this.ctx));for(t=0;t<this.edges.length;t++)if(null!=this.edges[t])for(i=0;i<this.edges[t].length;i++)this.edges[t][i].addedToScene&&(this.edges[t][i].pulseHighlight(this.framenum),this.edges[t][i].draw(this.ctx));this.statusReport.draw(this.ctx)}update(){}setLayers(t,i){for(let e=0;e<i.length;e++)this.activeLayers[i[e]]=t;this.resetLayers()}addHighlightCircleObject(t,i,e){if(null!=this.nodes[t]&&void 0!==this.nodes[t])throw new Error("addHighlightCircleObject: object with same ID ("+String(t)+") already exists!");const s=new R(t,i,e);this.nodes[t]=s}setEdgeAlpha(t,i,e){let s=1;if(null!=this.edges[t]&&void 0!==this.edges[t]){for(let h=this.edges[t].length-1;h>=0;h--)null!=this.edges[t][h]&&void 0!==this.edges[t][h]&&this.edges[t][h].toID===this.nodes[i]&&(s=this.edges[t][h].alpha,this.edges[t][h].alpha=e)}return s}setAlpha(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setAlpha(i)}getAlpha(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]?this.nodes[t].getAlpha():-1}getTextColor(t,i){return null!=this.nodes[t]&&void 0!==this.nodes[t]?this.nodes[t].getTextColor(i):"#000000"}setTextColor(t,i,e){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setTextColor(i,e)}setHighlightIndex(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setHighlightIndex(i)}setAllLayers(t){this.activeLayers=[];for(let i=0;i<t.length;i++)this.activeLayers[t[i]]=!0;this.resetLayers()}resetLayers(){let t;for(t=0;t<this.nodes.length;t++)null!=this.nodes[t]&&void 0!==this.nodes[t]&&(this.nodes[t].addedToScene=!0===this.activeLayers[this.nodes[t].layer]);for(t=this.edges.length-1;t>=0;t--)if(null!=this.edges[t]&&void 0!==this.edges[t])for(let i=0;i<this.edges[t].length;i++)null!=this.edges[t][i]&&void 0!==this.edges[t][i]&&(this.edges[t][i].addedToScene=!0===this.activeLayers[this.edges[t][i].fromID.layer]&&!0===this.activeLayers[this.edges[t][i].toID.layer])}setLayer(t,i){if(null!=this.nodes[t]&&void 0!==this.nodes[t]){if(this.nodes[t].layer=i,this.activeLayers[i]?this.nodes[t].addedToScene=!0:this.nodes[t].addedToScene=!1,null!=this.edges[t]&&void 0!==this.edges[t])for(let i=0;i<this.edges[t].length;i++){const e=this.edges[t][i];null!=e&&void 0!==e&&(e.addedToScene=e.fromID.addedToScene&&e.toID.addedToScene)}if(null!=this.backEdges[t]&&void 0!==this.backEdges[t])for(let i=0;i<this.backEdges[t].length;i++){const e=this.backEdges[t][i];null!=e&&void 0!==e&&(e.addedToScene=e.fromID.addedToScene&&e.toID.addedToScene)}}}clearAllObjects(){this.nodes=[],this.edges=[],this.backEdges=[]}setForegroundColor(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setForegroundColor(i)}setBackgroundColor(t,i){null!=this.nodes[t]&&this.nodes[t].setBackgroundColor(i)}setHighlight(t,i,e){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setHighlight(i,e)}getHighlight(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].getHighlight()}getHighlightIndex(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].getHighlightIndex()}setWidth(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setWidth(i)}setHeight(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setHeight(i)}getHeight(t){return null==this.nodes[t]||void 0===this.nodes[t]?-1:this.nodes[t].getHeight()}getWidth(t){return null==this.nodes[t]||void 0===this.nodes[t]?-1:this.nodes[t].getWidth()}backgroundColor(t){return null!=this.nodes[t]?this.nodes[t].backgroundColor:"#000000"}foregroundColor(t){return null!=this.nodes[t]?this.nodes[t].foregroundColor:"#000000"}disconnect(t,i){let e,s,h=null;if(null!=this.edges[t]){e=this.edges[t].length;for(let a=e-1;a>=0;a--)null!=this.edges[t][a]&&this.edges[t][a].toID===this.nodes[i]&&(s=this.edges[t][a],h=s.createUndoConnect(),this.edges[t][a]=this.edges[t][e-1],e-=1,this.edges[t].pop())}if(null!=this.backEdges[i]){e=this.backEdges[i].length;for(let h=e-1;h>=0;h--)null!=this.backEdges[i][h]&&this.backEdges[i][h].fromID===this.nodes[t]&&(s=this.backEdges[i][h],this.backEdges[i][h]=this.backEdges[i][e-1],e-=1,this.backEdges[i].pop())}return h}deleteIncident(t){const i=[];let e,s;if(null!=this.edges[t]){e=this.edges[t].length;for(let h=e-1;h>=0;h--){s=this.edges[t][h];const e=s.toID.identifier();i.push(s.createUndoConnect());let a=this.backEdges[e].length;for(let t=a-1;t>=0;t--)this.backEdges[e][t]===s&&(this.backEdges[e][t]=this.backEdges[e][a-1],a-=1,this.backEdges[e].pop())}this.edges[t]=null}if(null!=this.backEdges[t]){e=this.backEdges[t].length;for(let h=e-1;h>=0;h--){s=this.backEdges[t][h];const e=s.fromID.identifier();i.push(s.createUndoConnect());let a=this.edges[e].length;for(let t=a-1;t>=0;t--)this.edges[e][t]===s&&(this.edges[e][t]=this.edges[e][a-1],a-=1,this.edges[e].pop())}this.backEdges[t]=null}return i}removeObject(t){const i=this.nodes[t];return t===this.nodes.length-1?this.nodes.pop():this.nodes[t]=null,i}getObject(t){if(null==this.nodes[t]||void 0===this.nodes[t])throw new Error("getObject:Object with ID ("+String(t)+") does not exist");return this.nodes[t]}addCircleObject(t,i){if(null!=this.nodes[t]&&void 0!==this.nodes[t])throw new Error("addCircleObject: object with same ID ("+String(t)+") already exists!");const e=new _(t,i);this.nodes[t]=e}getNodeX(t){if(null==this.nodes[t]||void 0===this.nodes[t])throw new Error("Getting x position of an object that does not exist");return this.nodes[t].x}getTextWidth(t){this.ctx.font="12px Arial";const i=t.split("\n");let e=0;if(1===i.length)e=this.ctx.measureText(t).width;else for(let s=0;s<i.length;s++)e=Math.max(e,this.ctx.measureText(i[s]).width);return e}setText(t,i,e){if(null==this.nodes[t]||void 0===this.nodes[t])throw new Error("setting text of an object that does not exist");this.nodes[t].setText(i,e,this.getTextWidth(i))}getText(t,i){if(null==this.nodes[t]||void 0===this.nodes[t])throw new Error("getting text of an object that does not exist");return this.nodes[t].getText(i)}getNodeY(t){if(null==this.nodes[t]||void 0===this.nodes[t])throw new Error("getting y position of an object that does not exist");return this.nodes[t].y}connectEdge(t,i,e,s,h,a,n,l){const r=this.nodes[t],o=this.nodes[i];if(null==r||null==o)throw new Error("Tried to connect two nodes, one didn't exist!");const d=new V(r,o,e,s,h,a,n,l);null==this.edges[t]&&(this.edges[t]=[]),null==this.backEdges[i]&&(this.backEdges[i]=[]),d.addedToScene=r.addedToScene&&o.addedToScene,this.edges[t].push(d),this.backEdges[i].push(d)}setNull(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setNull(i)}setPrevNull(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setPrevNull(i)}setNextNull(t,i){null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].setNextNull(i)}getNull(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].getNull()}getLeftNull(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].getLeftNull()}getRightNull(t){return null!=this.nodes[t]&&void 0!==this.nodes[t]&&this.nodes[t].getRightNull()}setEdgeColor(t,i,e){let s="#000000";if(null!=this.edges[t]&&void 0!==this.edges[t]){for(let h=this.edges[t].length-1;h>=0;h--)null!=this.edges[t][h]&&void 0!==this.edges[t][h]&&this.edges[t][h].toID===this.nodes[i]&&(s=this.edges[t][h].color(),this.edges[t][h].setColor(e))}return s}alignTop(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));this.nodes[t].alignTop(this.nodes[i])}alignLeft(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));this.nodes[t].alignLeft(this.nodes[i])}alignRight(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));this.nodes[t].alignRight(this.nodes[i])}getAlignRightPos(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));return this.nodes[t].getAlignRightPos(this.nodes[i])}getAlignLeftPos(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));return this.nodes[t].getAlignLeftPos(this.nodes[i])}alignBottom(t,i){if(null==this.nodes[t]||void 0===this.nodes[t]||null==this.nodes[i]||void 0===this.nodes[i])throw new Error("Trying to align two nodes, one doesn't exist: "+String(t)+","+String(i));this.nodes[t].alignBottom(this.nodes[i])}setAlwaysOnTop(t,i){if(null!=this.nodes[t]&&void 0!==this.nodes[t]){const e=this.nodes[t].alwaysOnTop;return this.nodes[t].alwaysOnTop=i,e}throw new Error("Trying to bring node that doesn't exist to top")}setEdgeHighlight(t,i,e,s){let h=!1;if(null!=this.edges[t]&&void 0!==this.edges[t]){for(let a=this.edges[t].length-1;a>=0;a--)null!=this.edges[t][a]&&void 0!==this.edges[t][a]&&this.edges[t][a].toID===this.nodes[i]&&(h=this.edges[t][a].highlighted,this.edges[t][a].setHighlight(e,s))}return h}setEdgeThickness(t,i,e){let s=1;if(null!=this.edges[t]&&void 0!==this.edges[t]){for(let h=this.edges[t].length-1;h>=0;h--)null!=this.edges[t][h]&&void 0!==this.edges[t][h]&&this.edges[t][h].toID===this.nodes[i]&&(s=this.edges[t][h].thickness,this.edges[t][h].setThickness(e))}return s}setRectangleEdgeThickness(t,i){if(null!=this.nodes[t]&&void 0!==this.nodes[t]){const e=this.nodes[t].getEdgeThickness();return this.nodes[t].setEdgeThickness(i),e}throw new Error("Trying to bring node that doesn't exist to top")}addLabelObject(t,i,e){if(null!=this.nodes[t]&&void 0!==this.nodes[t])throw new Error("addLabelObject: object already exists!");const s=new M(t,i,e,this.getTextWidth(i));this.nodes[t]=s}addLinkedListObject(t,i,e,s,h,a,n,l,r){if(null!=this.nodes[t])throw new Error("addLinkedListObject: object with same ID already exists!");const o=new K(t,i,e,s,h,a,n,l,r);this.nodes[t]=o}addDoublyLinkedListObject(t,i,e,s,h,a,n){if(null!=this.nodes[t])throw new Error("addDoublyLinkedListObject: object with same ID already exists!");const l=new z(t,i,e,s,h,a,n);this.nodes[t]=l}addCircularlyLinkedListObject(t,i,e,s,h,a,n){if(null!=this.nodes[t])throw new Error("addCircularlyLinkedListObject: object with same ID already exists!");const l=new E(t,i,e,s,h,a,n);this.nodes[t]=l}addSkipListObject(t,i,e,s,h,a){if(null!=this.nodes[t])throw new Error("addSkipListObject: object with same ID already exists!");const n=new Y(t,i,e,s,h,a);this.nodes[t]=n}getNumElements(t){return this.nodes[t].getNumElements()}setNumElements(t,i){this.nodes[t].setNumElements(i)}addBTreeNode(t,i,e,s,h,a){if(h=void 0===h?"#FFFFFF":h,a=void 0===a?"#FFFFFF":a,null!=this.nodes[t]&&void 0!==this.nodes[t])throw new Error("addBTreeNode: object with same ID already exists!");const n=new A(t,i,e,s,h,a);this.nodes[t]=n}addRectangleObject(t,i,e,s,h,a,n,l){if(null!=this.nodes[t]&&void 0!==this.nodes[t])throw new Error("addRectangleObject: object with same ID already exists!");const r=new W(t,i,e,s,h,a,n,l);this.nodes[t]=r}setNodePosition(t,i,e){null!=this.nodes[t]&&void 0!==this.nodes[t]&&void 0!==i&&void 0!==e&&(this.nodes[t].x=i,this.nodes[t].y=e)}}var Q=e(0),J=e.n(Q),Z=e(16),tt=e.n(Z),it=e(21),et=e(68);function st(t){let i,e,s;const h=document.cookie.split(";");for(i=0;i<h.length;i++)if(e=h[i].substr(0,h[i].indexOf("=")),s=h[i].substr(h[i].indexOf("=")+1),e=e.replace(/^\s+|\s+$/g,""),e===t)return unescape(s)}function ht(t,i,e){const s=new Date;s.setDate(s.getDate()+e),document.cookie=t+"="+i}function at(t,i,e,s){const h=document.createElement("input");h.setAttribute("type",i),h.setAttribute("value",e),"Button"===i?h.onclick=s:"Text"===i&&(h.onkeydown=s);const a=document.createElement("td");return a.appendChild(h),t.current.appendChild(a),h}function nt(t){const i=document.createElement("td");i.setAttribute("class","divisorLeft");const e=document.createElement("td");e.setAttribute("class","divisorRight"),t.current.appendChild(i),t.current.appendChild(e)}class lt extends class{constructor(){this.events=[]}removeListener(t,i,e){if(null==this.events[t])return;let s,h=null;for(s=0;s<this.events[t].length;s++)if(this.events[t][s].scope===i){h=this.events[t][s];break}if(null!=h)for(s=0;s<h.functions.length;s++)if(h.functions[s]===e)return void h.functions.splice(s,1)}addListener(t,i,e){let s;void 0===this.events[t]&&(this.events[t]=[]);let h=null;for(s=0;s<this.events[t].length;s++)if(this.events[t][s].scope===i){h=this.events[t][s];break}for(null===h&&(this.events[t].push({scope:i,functions:[]}),h=this.events[t][this.events[t].length-1]),s=0;s<h.functions.length;s++)if(h.functions[s]===e)return;h.functions.push(e)}fireEvent(t,i){if(void 0!==this.events[t])for(let e=0;e<this.events[t].length;e++){const s=this.events[t][e],h=s.functions,a=s.scope;for(let t=0;t<h.length;t++){h[t].call(a,i)}}}}{constructor(t,i){super(),this.objectManager=new $(t),this.animatedObjects=this.objectManager,this.animationPaused=!1,this.awaitingStep=!1,this.currentlyAnimating=!1,this.animationSteps=[],this.currentAnimation=0,this.previousAnimationSteps=[],this.currFrame=0,this.animationBlockLength=0,this.currentBlock=null,this.undoStack=[],this.doingUndo=!1,this.undoAnimationStepIndices=[],this.undoAnimationStepIndicesStack=[],this.animationBlockLength=10,this.paused=!1,this.canvas=t,this.skipBackButton=at(i,"Button","Skip Back",()=>this.skipBack()),this.stepBackButton=at(i,"Button","Step Back",()=>this.stepBack()),this.playPauseBackButton=at(i,"Button","Pause",()=>this.doPlayPause()),this.playPauseBackButton.setAttribute("style","width: 80px"),this.stepForwardButton=at(i,"Button","Step Forward",()=>this.step()),this.skipForwardButton=at(i,"Button","Skip Forward",()=>this.skipForward()),nt(i);const e=document.createElement("div");e.setAttribute("display","inline-block"),e.setAttribute("float","left");let s=st("VisualizationSpeed");s=null==s||""===s?75:parseInt(s);const h=Object(it.a)({root:{color:"#F9C333",height:3,padding:"13px 0"},track:{height:4,borderRadius:2}})(et.a),a=J.a.createElement(h,{defaultValue:s,onChange:(t,i)=>{this.setSpeed(i),ht("VisualizationSpeed",String(i),30)}});let n=document.createElement("td");const l=document.getElementById("GeneralAnimationControls"),r=document.createElement("table");let o=document.createElement("tr"),d=document.createElement("td");o.appendChild(d),tt.a.render(a,d),r.appendChild(o),o=document.createElement("tr"),d=document.createElement("td"),d.align="center";let c=document.createTextNode("Animation Speed");o.appendChild(d),d.appendChild(c),r.appendChild(o),n.appendChild(r),l.appendChild(n),this.setSpeed(s),e.setAttribute("style","width:200px"),nt(i);let m=st("VisualizationWidth");m=null==m||""===m?1500:parseInt(m);let g=st("VisualizationHeight");g=null==g||""===g?505:parseInt(g),canvas.width=m,canvas.height=g,n=document.createElement("td"),c=document.createTextNode("h:"),n.appendChild(c),l.appendChild(n),this.heightEntry=at(i,"Text",canvas.height,()=>{return t=this.heightEntry,i=()=>this.changeSize(document.documentElement.clientWidth,parseInt(this.heightEntry.value)),s=!0,void 0!==(e=4)&&(t.size=e),function(h){let a=0;return window.event?a=h.keyCode:h.which&&(a=h.which),13===a?(i(),!1):59!==a&&45!==a&&46!==a&&190!==a&&173!==a&&!((void 0!==e&&t.value.length>=e||s&&(a<48||a>57))&&!function(t){return 8===t||9===t||37===t||38===t||39===t||40===t||46===t}(a))};var t,i,e,s}),this.heightEntry.size=4,this.sizeButton=at(i,"Button","Change Canvas Size",()=>this.changeSize()),this.addListener("AnimationStarted",this,this.animStarted),this.addListener("AnimationEnded",this,this.animEnded),this.addListener("AnimationWaiting",this,this.animWaiting),this.addListener("AnimationUndoUnavailable",this,this.animUndoUnavailable),this.objectManager.width=canvas.width,this.objectManager.height=canvas.height}lerp(t,i,e){return(i-t)*e+t}setPaused(t){this.animationPaused=t,this.animationPaused||this.step()}parseBool(t){const i=t.toUpperCase();return!("False"===i||"f"===i||" 0"===i||"0"===i||""===i)}parseColor(t){return"#"===t.charAt(0)?t:"0x"===t.substring(0,2)?"#"+t.substring(2):void 0}setSpeed(t){this.animationBlockLength=Math.floor((100-t)/2)}changeSize(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.documentElement.clientWidth,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:parseInt(this.heightEntry.value);t>100&&(canvas.width=t,this.animatedObjects.width=t,ht("VisualizationWidth",String(t),30)),i>100&&(canvas.height=i,this.animatedObjects.height=i,ht("VisualizationHeight",String(i),30)),this.heightEntry.value=canvas.height,this.animatedObjects.draw(),this.fireEvent("CanvasSizeChanged",{width:canvas.width,height:canvas.height})}startNextBlock(){if(this.awaitingStep=!1,this.currentBlock=[],this.undoBlock=[],this.currentAnimation===this.animationSteps.length)return this.currentlyAnimating=!1,this.awaitingStep=!1,this.fireEvent("AnimationEnded","NoData"),this.stopTimer(),this.animatedObjects.update(),void this.animatedObjects.draw();for(this.undoAnimationStepIndices.push(this.currentAnimation),this.foundBreak=!1,this.anyAnimations=!1;this.currentAnimation<this.animationSteps.length&&!this.foundBreak;){const[t,i]=this.animationSteps[this.currentAnimation];t.call(this,i),this.currentAnimation++}this.currFrame=0,(!this.anyAnimations&&this.animationPaused||!this.anyAnimations&&this.currentAnimation===this.animationSteps.length)&&(this.currFrame=this.animationBlockLength),this.undoStack.push(this.undoBlock)}startNewAnimation(t){this.stopTimer(),null!==this.animationSteps&&(this.previousAnimationSteps.push(this.animationSteps),this.undoAnimationStepIndicesStack.push(this.undoAnimationStepIndices)),void 0===t||0===t.length?this.animationSteps=[[rt.step,[]]]:this.animationSteps=t,this.undoAnimationStepIndices=[],this.currentAnimation=0,this.startNextBlock(),this.currentlyAnimating=!0,this.fireEvent("AnimationStarted","NoData"),this.startTimer()}stepBack(){this.awaitingStep&&null!==this.undoStack&&0!==this.undoStack.length?(this.fireEvent("AnimationStarted","NoData"),this.stopTimer(),this.awaitingStep=!1,this.undoLastBlock(),this.stopTimer(),this.startTimer()):!this.currentlyAnimating&&this.animationPaused&&null!==this.undoAnimationStepIndices&&(this.fireEvent("AnimationStarted","NoData"),this.currentlyAnimating=!0,this.undoLastBlock(),this.stopTimer(),this.startTimer())}step(){this.awaitingStep&&(this.startNextBlock(),this.fireEvent("AnimationStarted","NoData"),this.currentlyAnimating=!0,this.stopTimer(),this.startTimer())}clearHistory(){this.undoStack=[],this.undoAnimationStepIndices=null,this.previousAnimationSteps=[],this.undoAnimationStepIndicesStack=[],this.animationSteps=null,this.fireEvent("AnimationUndoUnavailable","NoData"),this.stopTimer(),this.animatedObjects.update(),this.animatedObjects.draw()}skipBack(){let t=null!==this.undoAnimationStepIndices&&0!==this.undoAnimationStepIndices.length;if(t){let i;for(i=0;null!==this.currentBlock&&i<this.currentBlock.length;i++){const t=this.currentBlock[i].objectID;this.animatedObjects.setNodePosition(t,this.currentBlock[i].toX,this.currentBlock[i].toY)}for(this.doingUndo&&this.finishUndoBlock(this.undoStack.pop());t;){for(this.undoLastBlock(),i=0;i<this.currentBlock.length;i++){const t=this.currentBlock[i].objectID;this.animatedObjects.setNodePosition(t,this.currentBlock[i].toX,this.currentBlock[i].toY)}t=this.finishUndoBlock(this.undoStack.pop())}this.stopTimer(),this.animatedObjects.update(),this.animatedObjects.draw(),null!=this.undoStack&&0!==this.undoStack.length||this.fireEvent("AnimationUndoUnavailable","NoData")}}resetAll(){this.clearHistory(),this.animatedObjects.clearAllObjects(),this.animatedObjects.draw(),this.stopTimer()}skipForward(){if(this.currentlyAnimating){for(this.animatedObjects.runFast=!0;null!==this.animationSteps&&this.currentAnimation<this.animationSteps.length;){for(let t=0;null!==this.currentBlock&&t<this.currentBlock.length;t++){const i=this.currentBlock[t].objectID;this.animatedObjects.setNodePosition(i,this.currentBlock[t].toX,this.currentBlock[t].toY)}this.doingUndo&&this.finishUndoBlock(this.undoStack.pop()),this.startNextBlock();for(let t=0;t<this.currentBlock.length;t++){const i=this.currentBlock[t].objectID;this.animatedObjects.setNodePosition(i,this.currentBlock[t].toX,this.currentBlock[t].toY)}}this.animatedObjects.update(),this.currentlyAnimating=!1,this.awaitingStep=!1,this.doingUndo=!1,this.animatedObjects.runFast=!1,this.fireEvent("AnimationEnded","NoData"),this.stopTimer(),this.animatedObjects.update(),this.animatedObjects.draw()}}finishUndoBlock(t){for(let i=t.length-1;i>=0;i--)t[i].undoInitialStep(this.animatedObjects);return this.doingUndo=!1,0!==this.undoAnimationStepIndices.length||(this.awaitingStep=!1,this.currentlyAnimating=!1,this.undoAnimationStepIndices=this.undoAnimationStepIndicesStack.pop(),this.animationSteps=this.previousAnimationSteps.pop(),this.fireEvent("AnimationEnded","NoData"),this.fireEvent("AnimationUndo","NoData"),this.currentBlock=[],null!=this.undoStack&&0!==this.undoStack.length||(this.currentlyAnimating=!1,this.awaitingStep=!1,this.fireEvent("AnimationUndoUnavailable","NoData")),this.stopTimer(),this.animatedObjects.update(),this.animatedObjects.draw(),!1)}undoLastBlock(){if(0!==this.undoAnimationStepIndices.length&&this.undoAnimationStepIndices.length>0){this.doingUndo=!0;let t=!1;this.currentAnimation=this.undoAnimationStepIndices.pop(),this.currentBlock=[];const i=this.undoStack[this.undoStack.length-1];let e;for(e=i.length-1;e>=0;e--){const s=i[e].addUndoAnimation(this.currentBlock);t=t||s}this.currFrame=0,!t&&this.animationPaused&&(this.currFrame=this.animationBlockLength),this.currentlyAnimating=!0}}setLayer(t,i){this.animatedObjects.setLayer(t,i),this.animatedObjects.draw()}setAllLayers(t){this.animatedObjects.setAllLayers(t),this.animatedObjects.draw()}update(){if(this.currentlyAnimating){let t;for(this.currFrame=this.currFrame+1,t=0;t<this.currentBlock.length;t++)if(this.currFrame===this.animationBlockLength||1===this.currFrame&&0===this.animationBlockLength)this.animatedObjects.setNodePosition(this.currentBlock[t].objectID,this.currentBlock[t].toX,this.currentBlock[t].toY);else if(this.currFrame<this.animationBlockLength){const i=this.currentBlock[t].objectID,e=1/(this.animationBlockLength-this.currFrame),s=this.lerp(this.animatedObjects.getNodeX(i),this.currentBlock[t].toX,e),h=this.lerp(this.animatedObjects.getNodeY(i),this.currentBlock[t].toY,e);this.animatedObjects.setNodePosition(i,s,h)}this.currFrame>=this.animationBlockLength&&(this.doingUndo?this.finishUndoBlock(this.undoStack.pop())&&(this.awaitingStep=!0,this.fireEvent("AnimationWaiting","NoData")):this.animationPaused&&this.currentAnimation<this.animationSteps.length?(this.awaitingStep=!0,this.fireEvent("AnimationWaiting","NoData"),this.currentBlock=[]):this.startNextBlock()),this.animatedObjects.update()}}animWaiting(){this.stepForwardButton.disabled=!1,!1===this.skipBackButton.disabled&&(this.stepBackButton.disabled=!1),this.objectManager.statusReport.setText("Animation Paused"),this.objectManager.statusReport.setForegroundColor("#FF0000")}animStarted(){this.skipForwardButton.disabled=!1,this.skipBackButton.disabled=!1,this.stepForwardButton.disabled=!0,this.stepBackButton.disabled=!0,this.objectManager.statusReport.setText("Animation Running"),this.objectManager.statusReport.setForegroundColor("#009900")}animEnded(){this.skipForwardButton.disabled=!0,this.stepForwardButton.disabled=!0,!1===this.skipBackButton.disabled&&this.paused&&(this.stepBackButton.disabled=!1),this.objectManager.statusReport.setText("Animation Completed"),this.objectManager.statusReport.setForegroundColor("#000000")}animUndoUnavailable(){this.skipBackButton.disabled=!0,this.stepBackButton.disabled=!0}timeout(){this.timer=setTimeout(()=>this.timeout(),30),this.update(),this.objectManager.draw()}doPlayPause(){this.paused=!this.paused,this.paused?(this.playPauseBackButton.setAttribute("value","Play"),!1===this.skipBackButton.disabled&&(this.stepBackButton.disabled=!1)):this.playPauseBackButton.setAttribute("value","Pause"),this.setPaused(this.paused)}startTimer(){this.timer=setTimeout(()=>this.timeout(),30)}stopTimer(){clearInterval(this.timer)}}const rt={step(){this.foundBreak=!0},move(t){const i=new a(t[0],this.animatedObjects.getNodeX(t[0]),this.animatedObjects.getNodeY(t[0]),t[1],t[2]);this.currentBlock.push(i),this.undoBlock.push(new l(i.objectID,i.toX,i.toY,i.fromX,i.fromY)),this.anyAnimations=!0},delete(t){const i=this.animatedObjects.deleteIncident(t[0]);i.length>0&&(this.undoBlock=this.undoBlock.concat(i));const e=this.animatedObjects.getObject(t[0]);null!==e&&(this.undoBlock.push(e.createUndoDelete()),this.animatedObjects.removeObject(t[0]))},connect(t){t[2]=t[2]||"#000000",t[3]=t[3]||0,t[4]=!1!==t[4]&&0!==t[4],t[5]=void 0===t[5]?"":t[5],t[6]=t[6]||0,t[7]=void 0===t[7]?1:t[7],this.animatedObjects.connectEdge(t[0],t[1],t[2],t[3],t[4],String(t[5]),t[6],t[7]),this.undoBlock.push(new X(t[0],t[1],!1))},connectNext(t){this.animatedObjects.connectEdge(t[0],t[1],"#000000",0,!0,"",0),this.undoBlock.push(new X(t[0],t[1],!1))},connectPrev(t){this.animatedObjects.connectEdge(t[0],t[1],"#000000",0,!0,"",1),this.undoBlock.push(new X(t[0],t[1],!1))},connectCurve(t){this.animatedObjects.connectEdge(t[0],t[1],"#000000",t[2],!0,"",1),this.undoBlock.push(new X(t[0],t[1],!1))},connectSkipList(t){this.animatedObjects.connectEdge(t[0],t[1],"#000000",0,!1,"",t[2]),this.undoBlock.push(new X(t[0],t[1],!1))},disconnect(t){const i=this.animatedObjects.disconnect(t[0],t[1]);null!==i&&this.undoBlock.push(i)},createCircle(t){t[2]=t[2]||0,t[3]=t[3]||0,this.animatedObjects.addCircleObject(t[0],String(t[1])),this.animatedObjects.setNodePosition(parseInt(t[0]),parseInt(t[2]),parseInt(t[3])),this.undoBlock.push(new r(t[0]))},createHighlightCircle(t){t[2]=t[2]||0,t[3]=t[3]||0,t[4]=void 0===t[4]?20:t[4],this.animatedObjects.addHighlightCircleObject(t[0],t[1],t[4]),this.animatedObjects.setNodePosition(parseInt(t[0]),parseInt(t[2]),parseInt(t[3])),this.undoBlock.push(new r(t[0]))},createRectangle(t){t[4]=t[4]||0,t[5]=t[5]||0,t[6]=t[6]||"center",t[7]=t[7]||"center",t[8]=t[8]||"#FFFFFF",t[9]=t[9]||"#000000",this.animatedObjects.addRectangleObject(t[0],String(t[1]),t[2],t[3],t[6],t[7],t[8],t[9]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},createLabel(t){t[2]=t[2]||0,t[3]=t[3]||0,t[4]=!1!==t[4]&&0!==t[4],this.animatedObjects.addLabelObject(t[0],String(t[1]),t[4]),this.animatedObjects.setNodePosition(t[0],t[2],t[3]),this.undoBlock.push(new r(t[0]))},createLinkedListNode(t){t[1]=Array.isArray(t[1])?t[1].map(t=>String(t)):[String(t[1])],t[4]=t[4]||0,t[5]=t[5]||0,t[6]=void 0===t[6]?.25:t[6],t[7]=!1!==t[7]&&0!==t[7],t[8]=t[8]||!1,t[9]=t[9]||"#FFFFFF",t[10]=t[10]||"#000000",this.animatedObjects.addLinkedListObject(t[0],t[1],t[2],t[3],t[6],t[7],t[8],t[9],t[10]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},createDoublyLinkedListNode(t){t[4]=t[4]||0,t[5]=t[5]||0,t[6]=void 0===t[6]?.25:t[6],t[7]=t[7]||"#FFFFFF",t[8]=t[8]||"#000000",this.animatedObjects.addDoublyLinkedListObject(t[0],String(t[1]),t[2],t[3],t[6],t[7],t[8]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},createCircularlyLinkedListNode(t){t[4]=t[4]||0,t[5]=t[5]||0,t[6]=void 0===t[6]?.25:t[6],t[7]=t[7]||"#FFFFFF",t[8]=t[8]||"#000000",this.animatedObjects.addCircularlyLinkedListObject(t[0],String(t[1]),t[2],t[3],t[6],t[7],t[8]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},createSkipListNode(t){t[4]=t[4]||0,t[5]=t[5]||0,t[6]=t[6]||"#FFFFFF",t[7]=t[7]||"#000000",this.animatedObjects.addSkipListObject(t[0],String(t[1]),t[2],t[3],t[6],t[7]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},createBTreeNode(t){t[4]=t[4]||0,t[5]=t[5]||0,t[6]=t[6]||"#FFFFFF",t[7]=t[7]||"#000000",this.animatedObjects.addBTreeNode(t[0],t[1],t[2],t[3],t[6],t[7]),this.animatedObjects.setNodePosition(t[0],t[4],t[5]),this.undoBlock.push(new r(t[0]))},setText(t){t[2]=t[2]||0;const i=this.animatedObjects.getText(t[0],t[2]);this.animatedObjects.setText(t[0],String(t[1]),t[2]),void 0!==i&&this.undoBlock.push(new f(t[0],i,t[2]))},setTextColor(t){t[2]=t[2]||0;const i=this.animatedObjects.getTextColor(t[0],t[2]);this.animatedObjects.setTextColor(t[0],t[1],t[2]),this.undoBlock.push(new y(t[0],i,t[2]))},setForegroundColor(t){const i=this.animatedObjects.foregroundColor(t[0]);this.animatedObjects.setForegroundColor(t[0],t[1]),this.undoBlock.push(new x(t[0],i))},setBackgroundColor(t){const i=this.animatedObjects.backgroundColor(t[0]);this.animatedObjects.setBackgroundColor(t[0],t[1]),this.undoBlock.push(new D(t[0],i))},setHighlight(t){this.animatedObjects.setHighlight(t[0],t[1],t[2]),this.undoBlock.push(new o(t[0],!t[1],t[2]))},setAlpha(t){const i=this.animatedObjects.getAlpha(t[0]);this.animatedObjects.setAlpha(t[0],t[1]),this.undoBlock.push(new g(t[0],i))},setEdgeColor(t){const i=this.animatedObjects.setEdgeColor(t[0],t[1],t[2]);this.undoBlock.push(new C(t[0],t[1],i))},setEdgeAlpha(t){const i=this.animatedObjects.setEdgeAlpha(t[0],t[1],t[2]);this.undoBlock.push(new T(t[0],t[1],i))},setEdgeHighlight(t){const i=this.animatedObjects.setEdgeHighlight(t[0],t[1],t[2],t[3]);this.undoBlock.push(new k(t[0],t[1],i))},setEdgeThickness(t){const i=this.animatedObjects.setEdgeThickness(t[0],t[1],t[2]);this.undoBlock.push(new L(t[0],t[1],i))},setRectangleEdgeThickness(t){const i=this.animatedObjects.setRectangleEdgeThickness(t[0],t[1]);this.undoBlock.push(new w(t[0],i))},setHeight(t){const i=this.animatedObjects.getHeight(t[0]);this.animatedObjects.setHeight(t[0],t[1]),this.undoBlock.push(new d(t[0],i))},setWidth(t){const i=this.animatedObjects.getWidth(t[0]);this.animatedObjects.setWidth(t[0],t[1]),this.undoBlock.push(new c(t[0],i))},setLayer(t){this.animatedObjects.setLayer(t[0],t[1])},setNull(t){const i=this.animatedObjects.getNull(t[0]);this.animatedObjects.setNull(t[0],t[1]),this.undoBlock.push(new u(t[0],i))},setPrevNull(t){const i=this.animatedObjects.getLeftNull(t[0]);this.animatedObjects.setPrevNull(t[0],t[1]),this.undoBlock.push(new p(t[0],i))},setNextNull(t){const i=this.animatedObjects.getRightNull(t[0]);this.animatedObjects.setNextNull(t[0],t[1]),this.undoBlock.push(new I(t[0],i))},setNumElements(t){const i=this.animatedObjects.getObject(t[0]);this.undoBlock.push(new m(i,t[1])),this.animatedObjects.setNumElements(t[0],t[1])},setPosition(t){const i=this.animatedObjects.getNodeX(t[0]),e=this.animatedObjects.getNodeY(t[0]);this.animatedObjects.setNodePosition(t[0],t[1],t[2]),this.undoBlock.push(new v(t[0],i,e))},setHighlightIndex(t){const i=this.animatedObjects.getHighlightIndex(t[0]);this.undoBlock.push(new b(t[0],i)),this.animatedObjects.setHighlightIndex(t[0],t[1])},alignRight(t){const i=this.animatedObjects.getNodeX(t[0]),e=this.animatedObjects.getNodeY(t[0]);this.animatedObjects.alignRight(t[0],t[1]),this.undoBlock.push(new v(t[0],i,e))},alignLeft(t){const i=this.animatedObjects.getNodeX(t[0]),e=this.animatedObjects.getNodeY(t[0]);this.animatedObjects.alignLeft(t[0],t[1]),this.undoBlock.push(new v(t[0],i,e))},alignTop(t){const i=this.animatedObjects.getNodeX(t[0]),e=this.animatedObjects.getNodeY(t[0]);this.animatedObjects.alignTop(t[0],t[1]),this.undoBlock.push(new v(t[0],i,e))},alignBottom(t){const i=this.animatedObjects.getNodeX(t[0]),e=this.animatedObjects.getNodeY(t[0]);this.animatedObjects.alignBottom(t[0],t[1]),this.undoBlock.push(new v(t[0],i,e))},bringToTop(t){const i=this.animatedObjects.setAlwaysOnTop(t[0],t[1]);this.undoBlock.push(new F(t[0],i))},moveToAlignRight(t){const i=this.animatedObjects.getAlignRightPos(t[0],t[1]),e=new a(t[0],this.animatedObjects.getNodeX(t[0]),this.animatedObjects.getNodeY(t[0]),i[0],i[1]);this.currentBlock.push(e),this.undoBlock.push(new l(e.objectID,e.toX,e.toY,e.fromX,e.fromY)),this.anyAnimations=!0}};var ot=()=>J.a.createElement("div",{className:"footer"},"\xa9 Copyright 2019 ",J.a.createElement("a",{href:"https://rodrigodlpontes.github.io/website/"},"Rodrigo Pontes"),", under the direction of Mary Hudachek-Buswell, \xa9 Copyright 2011\xa0",J.a.createElement("a",{href:"http://www.cs.usfca.edu/galles"},"David Galles")),dt=e(14);e(30);class ct extends J.a.Component{constructor(){super(...arguments),this.state={menuVisible:null},this.toggleMenu=()=>this.setState(t=>({menuVisible:!t.menuVisible}))}render(){return J.a.createElement(J.a.Fragment,null,J.a.createElement("div",{className:"header"},J.a.createElement("div",{id:"left"},J.a.createElement("button",{className:this.state.menuVisible?"selected":"",onClick:this.toggleMenu})),J.a.createElement("div",{id:"center"},J.a.createElement("h1",null,"CS 1332 Data Structures and Algorithms Visualizations")),J.a.createElement("div",{id:"right"},J.a.createElement(dt.Toggle,null))),J.a.createElement("div",{className:"menu "+{null:"",true:"show",false:"hide"}[this.state.menuVisible]},J.a.createElement("ul",null,J.a.createElement("li",null,J.a.createElement(s.b,{to:"/",onClick:this.toggleMenu},"Home")),J.a.createElement("li",null,J.a.createElement(s.b,{to:"/about",onClick:this.toggleMenu},"About")),J.a.createElement("li",null,J.a.createElement("a",{href:"https://github.com/RodrigoDLPontes/visualization-tool"},"Source Code")))))}}var mt=ct,gt=e(18);function ut(t,i){const e=document.createElement("p");if(e.appendChild(document.createTextNode(t)),i)i.appendChild(e),e.setAttribute("class","groupChild");else{const t=document.createElement("td");t.appendChild(e);document.getElementById("AlgorithmSpecificControls").appendChild(t)}return e}function pt(t,i,e){const s=document.createElement("input");s.setAttribute("type","checkbox"),s.setAttribute("id",t),s.setAttribute("name",t),s.setAttribute("value",t),i&&s.setAttribute("checked","true");const h=document.createElement("label");h.setAttribute("for",t);const a=document.createTextNode(t);if(h.appendChild(a),e){const t=document.createElement("span");t.appendChild(s),t.appendChild(h),e.appendChild(t),t.setAttribute("class","groupChild")}else{const t=document.createElement("td");t.appendChild(s),t.appendChild(h);document.getElementById("AlgorithmSpecificControls").appendChild(t)}return s}function It(t,i,e){const s=[],h=document.createElement("table");for(let a=0;a<t.length;a++){const e=document.createElement("tr"),n=document.createElement("td"),l=document.createElement("input");l.setAttribute("type","radio"),l.setAttribute("name",i),l.setAttribute("id",t[a]),l.setAttribute("value",t[a]),n.appendChild(l),e.appendChild(n);const r=document.createElement("label");r.setAttribute("for",t[a]);const o=document.createTextNode(" "+t[a]);r.appendChild(o),n.appendChild(r),h.appendChild(e),s.push(l)}if(e)e.appendChild(h),h.setAttribute("class","groupChild");else{const t=document.createElement("td");t.appendChild(h);document.getElementById("AlgorithmSpecificControls").appendChild(t)}return s}function xt(t,i,e){const s=document.createElement("input");if(s.setAttribute("type",t),s.setAttribute("value",i),e)e.appendChild(s),s.setAttribute("class","groupChild");else{const t=document.createElement("td");t.appendChild(s);document.getElementById("AlgorithmSpecificControls").appendChild(t)}return s}function Dt(){const t=document.createElement("td");t.setAttribute("class","divisorLeft");const i=document.createElement("td");i.setAttribute("class","divisorRight");const e=document.getElementById("AlgorithmSpecificControls");e.appendChild(t),e.appendChild(i)}function bt(t,i){const e=document.createElement("div");if(e.setAttribute("class",t?"hgroup":"vgroup"),i)i.appendChild(e);else{const t=document.createElement("td");t.appendChild(e);document.getElementById("AlgorithmSpecificControls").appendChild(t)}return e}class ft{constructor(t,i,e){null!=t&&(this.animationManager=t,t.addListener("AnimationStarted",this,this.disableUI),t.addListener("AnimationEnded",this,this.enableUI),t.addListener("AnimationUndo",this,this.undo),this.canvasWidth=i,this.canvasHeight=e,this.actionHistory=[],this.recordAnimation=!0,this.commands=[])}addCodeToCanvasBase(t,i,e,s,h,a){s="undefined"!==typeof s?s:14,h="undefined"!==typeof h?h:"#000000",a="undefined"!==typeof a?a:0;const n=Array(t.length);let l,r;for(l=0;l<t.length;l++)for(n[l]=new Array(t[l].length),r=0;r<t[l].length;r++)n[l][r]=this.nextIndex++,this.cmd(rt.createLabel,n[l][r],t[l][r],i,e+l*s,0),this.cmd(rt.setForegroundColor,n[l][r],h),this.cmd(rt.setLayer,n[l][r],a),r>0&&this.cmd(rt.alignRight,n[l][r],n[l][r-1]);return n}highlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#FF0000")}unhighlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000")}removeCode(t){for(let i=0;i<t.length;i++)for(let e=0;e<t[i].length;e++)this.cmd(rt.delete,t[i][e])}setCodeAlpha(t,i){for(let e=0;e<t.length;e++)for(let s=0;s<t[e].length;s++)this.cmd(rt.setAlpha,t[e][s],i)}cmd(t){if(this.recordAnimation){for(var i=arguments.length,e=new Array(i>1?i-1:0),s=1;s<i;s++)e[s-1]=arguments[s];this.commands.push([t,e])}}clearHistory(){this.actionHistory=[]}undo(){this.actionHistory.pop(),this.reset();const t=this.actionHistory.length;this.recordAnimation=!1;for(let i=0;i<t;i++)this.actionHistory[i][0](...this.actionHistory[i][1]);this.recordAnimation=!0}implementAction(t){for(var i=arguments.length,e=new Array(i>1?i-1:0),s=1;s<i;s++)e[s-1]=arguments[s];const h=[t,e];this.actionHistory.push(h);const a=t(...e);this.animationManager.startNewAnimation(a)}normalizeNumber(t,i){return/\D/.test(t)||""===t?t:t.substr(-i)}returnSubmit(t,i,e,s){return void 0!==e&&(t.size=e),function(h){let a=0;if(window.event?a=h.keyCode:h.which&&(a=h.which),13===a&&null!=i)i();else{if(190===a||59===a||173===a||189===a)return!1;if((void 0!==e&&t.value.length>=e||s&&(a<48||a>57))&&!yt(a))return!1}}}sizeChanged(t,i){throw new Error("sizeChanged() should be implemented in base class")}disableUI(t){throw new Error("disableUI() should be implemented in base class")}enableUI(t){throw new Error("enableUI() should be implemented in base class")}reset(){throw new Error("reset() should be implemented in base class")}}function yt(t){return 8===t||9===t||37===t||38===t||39===t||40===t||46===t}ft.prototype.returnSubmitFloat=function(t,i,e){return void 0!==e&&(t.size=e),function(s){let h=0;if(window.event?h=s.keyCode:s.which&&(h=s.which),13!==h)return(yt(h)||109===h||(void 0!==e||t.value.length<e)&&h>=48&&h<=57||(void 0!==e||t.value.length<e)&&190===h&&-1===t.value.indexOf("."))&&void 0;i()}},ft.prototype.addReturnSubmit=function(t,i){t.onkeydown=this.returnSubmit(t,i,4,!1)};class kt extends ft{constructor(t,i,e){super(t,i,e),this.first_print_pos_y=e-2*kt.PRINT_VERTICAL_GAP,this.print_max=i-10,this.startingX=i/2,this.addControls(),this.nextIndex=1,this.commands=[],this.edges=[],this.cmd(rt.createLabel,0,"",kt.EXPLANITORY_TEXT_X,kt.EXPLANITORY_TEXT_Y,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}addControls(){this.controls=[],this.insertField=xt("Text",""),this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4,!0),this.controls.push(this.insertField),this.insertButton=xt("Button","Insert"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.deleteField=xt("Text",""),this.deleteField.onkeydown=this.returnSubmit(this.deleteField,this.deleteCallback.bind(this),4,!0),this.controls.push(this.deleteField),this.deleteButton=xt("Button","Delete"),this.deleteButton.onclick=this.deleteCallback.bind(this),this.controls.push(this.deleteButton),Dt(),this.findField=xt("Text",""),this.findField.onkeydown=this.returnSubmit(this.findField,this.findCallback.bind(this),4,!0),this.controls.push(this.findField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt(),this.printButton=xt("Button","Print"),this.printButton.onclick=this.printCallback.bind(this),this.controls.push(this.printButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const t=It(["Predecessor","Successor"],"Predecessor/Successor");this.predButton=t[0],this.succButton=t[1],this.predButton.onclick=()=>this.predSucc="pred",this.succButton.onclick=()=>this.predSucc="succ",this.succButton.checked=!0,this.predSucc="succ"}reset(){this.nextIndex=1,this.treeRoot=null,this.edges=[]}insertCallback(){let t=this.insertField.value;t=this.normalizeNumber(t,4),""!==t&&(this.insertField.value="",this.implementAction(this.add.bind(this),parseInt(t)))}deleteCallback(){let t=this.deleteField.value;""!==t&&(t=this.normalizeNumber(t,4),this.deleteField.value="",this.implementAction(this.remove.bind(this),parseInt(t)))}findCallback(){let t=this.findField.value;""!==t&&(t=this.normalizeNumber(t,4),this.findField.value="",this.implementAction(this.findElement.bind(this),parseInt(t)))}printCallback(){this.implementAction(this.printTree.bind(this))}clearCallback(){this.implementAction(this.clear.bind(this))}sizeChanged(t){this.startingX=t/2}printTree(){if(this.commands=[],null!=this.treeRoot){this.highlightID=this.nextIndex++;const t=this.nextIndex;this.cmd(rt.createHighlightCircle,this.highlightID,kt.HIGHLIGHT_COLOR,this.treeRoot.x,this.treeRoot.y),this.xPosOfNextLabel=kt.FIRST_PRINT_POS_X,this.yPosOfNextLabel=this.first_print_pos_y,this.printTreeRec(this.treeRoot),this.cmd(rt.delete,this.highlightID),this.cmd(rt.step);for(let i=t;i<this.nextIndex;i++)this.cmd(rt.delete,i);this.nextIndex=this.highlightID}return this.commands}printTreeRec(t){this.cmd(rt.step),null!=t.left&&(this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.printTreeRec(t.left),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step));const i=this.nextIndex++;this.cmd(rt.createLabel,i,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,i,kt.PRINT_COLOR),this.cmd(rt.move,i,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=kt.PRINT_HORIZONTAL_GAP,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=kt.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=kt.PRINT_VERTICAL_GAP),null!=t.right&&(this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.printTreeRec(t.right),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step))}findElement(t){return this.commands=[],this.highlightID=this.nextIndex++,this.doFind(this.treeRoot,t),this.commands}doFind(t,i){this.cmd(rt.setText,0,"Searchiing for "+i),null!=t?(this.cmd(rt.setHighlight,t.graphicID,1),t.data===i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" = "+i+" (Element found!)"),this.cmd(rt.step),this.cmd(rt.setText,0,"Found:"+i),this.cmd(rt.setHighlight,t.graphicID,0)):t.data>i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" < "+t.data+" (look to left subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.left&&(this.cmd(rt.createHighlightCircle,this.highlightID,kt.HIGHLIGHT_COLOR,t.x,t.y),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID)),this.doFind(t.left,i)):(this.cmd(rt.setText,0," Searching for "+i+" : "+i+" > "+t.data+" (look to right subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.right&&(this.cmd(rt.createHighlightCircle,this.highlightID,kt.HIGHLIGHT_COLOR,t.x,t.y),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID)),this.doFind(t.right,i))):(this.cmd(rt.setText,0," Searching for "+i+" : < Empty Tree > (Element not found)"),this.cmd(rt.step),this.cmd(rt.setText,0," Searching for "+i+" :  (Element not found)"))}remakeTree(t){null!=t&&(null!=t.left&&(this.cmd(rt.connect,t.graphicID,t.left.graphicID,kt.LINK_COLOR),this.remakeTree(t.left)),null!=t.right&&(this.cmd(rt.connect,t.graphicID,t.right.graphicID,kt.LINK_COLOR),this.remakeTree(t.right)))}add(t){return this.commands=[],this.cmd(rt.setText,0," Inserting "+t),this.treeRoot=this.addH(t,this.treeRoot),this.resizeTree(),this.commands}addH(t,i){if(null==i){this.cmd(rt.setText,0,"Null found, inserting new node");const i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++;return this.cmd(rt.createCircle,i,t,30,kt.STARTING_Y),this.cmd(rt.setForegroundColor,i,kt.FOREGROUND_COLOR),this.cmd(rt.setBackgroundColor,i,kt.BACKGROUND_COLOR),this.cmd(rt.createLabel,e,0,10,kt.STARTING_Y-20),this.cmd(rt.setForegroundColor,e,kt.HEIGHT_LABEL_COLOR),this.cmd(rt.createLabel,s,0,50,kt.STARTING_Y-20),this.cmd(rt.setForegroundColor,s,kt.HEIGHT_LABEL_COLOR),this.cmd(rt.step),this.cmd(rt.setText,0,""),new Lt(t,i,e,s,0,0)}if(this.cmd(rt.setHighlight,i.graphicID,1),t<i.data){this.cmd(rt.setText,0,`${t} < ${i.data}. Looking at left subtree`),this.cmd(rt.step),i.left=this.addH(t,i.left),i.left.parent=i,this.resizeTree();this.connectSmart(i.graphicID,i.left.graphicID)&&this.cmd(rt.step)}else if(t>i.data){this.cmd(rt.setText,0,`${t} > ${i.data}. Looking at right subtree`),this.cmd(rt.step),i.right=this.addH(t,i.right),i.right.parent=i,this.resizeTree();this.connectSmart(i.graphicID,i.right.graphicID)&&this.cmd(rt.step)}else this.cmd(rt.setText,0,`${t} == ${i.data}. Ignoring duplicate!`),this.cmd(rt.step);return i=this.balance(i),this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setText,0,""),i}connectSmart(t,i){return!this.edges.some(e=>e[0]===t&&e[1]===i)&&(this.cmd(rt.connect,t,i,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,t,i,kt.LINK_OPACITY),this.edges.push([t,i]),!0)}balance(t){return t.updateHeightAndBF(),this.cmd(rt.setText,t.heightLabelID,t.height),this.cmd(rt.setText,t.bfLabelID,t.bf),this.cmd(rt.setText,0,"Adjusting height and balance factor after recursive call"),this.cmd(rt.step),t.bf<-1?(this.cmd(rt.setText,0,"Balance factor < -1"),this.cmd(rt.setTextColor,t.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step),null!=t.right&&t.right.bf>0?(this.cmd(rt.setText,0,"Right child balance factor > 0"),this.cmd(rt.setTextColor,t.right.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step),this.cmd(rt.setText,0,"Right-left rotation"),this.cmd(rt.step),this.cmd(rt.setTextColor,t.right.bfLabelID,kt.HEIGHT_LABEL_COLOR),t.right=this.singleRotateRight(t.right)):(null!=t.right?(this.cmd(rt.setText,0,"Right child balance factor <= 0"),this.cmd(rt.setTextColor,t.right.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step)):(this.cmd(rt.setText,0,"No right child"),this.cmd(rt.step)),this.cmd(rt.setText,0,"Left rotation"),this.cmd(rt.step)),this.cmd(rt.setTextColor,t.bfLabelID,kt.HEIGHT_LABEL_COLOR),this.cmd(rt.setTextColor,t.right.bfLabelID,kt.HEIGHT_LABEL_COLOR),t=this.singleRotateLeft(t)):t.bf>1&&(this.cmd(rt.setText,0,"Balance factor > 1"),this.cmd(rt.setTextColor,t.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step),null!=t.left&&t.left.bf<0?(this.cmd(rt.setText,0,"Left child balance factor < 0"),this.cmd(rt.setTextColor,t.left.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step),this.cmd(rt.setText,0,"Left-right rotation"),this.cmd(rt.step),this.cmd(rt.setTextColor,t.left.bfLabelID,kt.HEIGHT_LABEL_COLOR),t.left=this.singleRotateLeft(t.left)):(null!=t.left?(this.cmd(rt.setText,0,"Left child balance factor >= 0"),this.cmd(rt.setTextColor,t.left.bfLabelID,kt.HIGHLIGHT_LABEL_COLOR),this.cmd(rt.step)):(this.cmd(rt.setText,0,"No left child"),this.cmd(rt.step)),this.cmd(rt.setText,0,"Right rotation"),this.cmd(rt.step),this.cmd(rt.setTextColor,t.bfLabelID,kt.HEIGHT_LABEL_COLOR)),this.cmd(rt.setTextColor,t.bfLabelID,kt.HEIGHT_LABEL_COLOR),this.cmd(rt.setTextColor,t.left.bfLabelID,kt.HEIGHT_LABEL_COLOR),t=this.singleRotateRight(t)),t}singleRotateRight(t){const i=t,e=t.left,s=e.right;return this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.step),null!=s&&(this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,i.graphicID,s.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,i.graphicID,s.graphicID,kt.LINK_OPACITY),s.parent=i),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,e.graphicID,i.graphicID,kt.LINK_OPACITY),e.parent=i.parent,this.treeRoot===i?this.treeRoot=e:(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID,kt.LINK_COLOR),this.cmd(rt.connect,i.parent.graphicID,e.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,i.parent.graphicID,e.graphicID,kt.LINK_OPACITY),i.isLeftChild()?i.parent.left=e:i.parent.right=e),e.right=i,i.parent=e,i.left=s,this.cmd(rt.setHighlight,e.graphicID,0),this.cmd(rt.setHighlight,i.graphicID,0),i.updateHeightAndBF(),this.cmd(rt.setText,i.heightLabelID,i.height),this.cmd(rt.setText,i.bfLabelID,i.bf),e.updateHeightAndBF(),this.cmd(rt.setText,e.heightLabelID,e.height),this.cmd(rt.setText,e.bfLabelID,e.bf),this.resizeTree(),e}singleRotateLeft(t){const i=t,e=t.right,s=e.left;return this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.step),null!=s&&(this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,i.graphicID,s.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,i.graphicID,s.graphicID,kt.LINK_OPACITY),s.parent=i),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,e.graphicID,i.graphicID,kt.LINK_OPACITY),e.parent=i.parent,this.treeRoot===i?this.treeRoot=e:(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID,kt.LINK_COLOR),this.cmd(rt.connect,i.parent.graphicID,e.graphicID,kt.LINK_COLOR),this.cmd(rt.setEdgeAlpha,i.parent.graphicID,e.graphicID,kt.LINK_OPACITY),i.isLeftChild()?i.parent.left=e:i.parent.right=e),e.left=i,i.parent=e,i.right=s,this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setHighlight,e.graphicID,0),i.updateHeightAndBF(),this.cmd(rt.setText,i.heightLabelID,i.height),this.cmd(rt.setText,i.bfLabelID,i.bf),e.updateHeightAndBF(),this.cmd(rt.setText,e.heightLabelID,e.height),this.cmd(rt.setText,e.bfLabelID,e.bf),this.resizeTree(),e}getHeight(t){return null==t?-1:t.height}resetHeight(t){if(null!=t){const i=Math.max(this.getHeight(t.left),this.getHeight(t.right))+1;t.height!==i&&(t.height=Math.max(this.getHeight(t.left),this.getHeight(t.right))+1,this.cmd(rt.setText,t.heightLabelID,i))}}deleteNode(t){this.cmd(rt.delete,t.graphicID),this.cmd(rt.delete,t.heightLabelID),this.cmd(rt.delete,t.bfLabelID)}remove(t){return this.commands=[],this.cmd(rt.setText,0,"Deleting "+t),this.cmd(rt.step),this.cmd(rt.setText,0," "),this.highlightID=this.nextIndex++,this.treeRoot=this.removeH(this.treeRoot,t),this.cmd(rt.setText,0,""),this.resizeTree(),this.commands}removeH(t,i){if(null!=t){if(this.cmd(rt.setHighlight,t.graphicID,1),i<t.data)this.cmd(rt.setText,0,`${i} < ${t.data}. Looking left`),this.cmd(rt.step),t.left=this.removeH(t.left,i),null!=t.left&&(t.left.parent=t,this.connectSmart(t.graphicID,t.left.graphicID),this.resizeTree());else if(i>t.data)this.cmd(rt.setText,0,`${i} > ${t.data}. Looking right`),this.cmd(rt.step),t.right=this.removeH(t.right,i),null!=t.right&&(t.right.parent=t,this.connectSmart(t.graphicID,t.right.graphicID),this.resizeTree());else{if(null==t.left&&null==t.right)return this.cmd(rt.setText,0,"Element to delete is a leaf node"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),null;if(null==t.left)return this.cmd(rt.setText,0,"One-child case, replace with right child"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),t.right;if(null==t.right)return this.cmd(rt.setText,0,"One-child case, replace with left child"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),t.left;{const i=[];"succ"===this.predSucc?(this.cmd(rt.setText,0,"Two-child case, replace data with successor"),this.cmd(rt.step),t.right=this.removeSucc(t.right,i),t.right&&this.connectSmart(t.graphicID,t.right.graphicID)):(this.cmd(rt.setText,0,"Two-child case, replace data with predecessor"),this.cmd(rt.step),t.left=this.removePred(t.left,i),t.left&&this.connectSmart(t.graphicID,t.left.graphicID)),this.resizeTree(),t.data=i[0],this.cmd(rt.setText,t.graphicID,t.data)}}return t=this.balance(t),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setText,0,""),t}this.cmd(rt.setText,0,i+" not found in the tree")}removeSucc(t,i){return this.cmd(rt.setHighlight,t.graphicID,1,"#0000ff"),this.cmd(rt.step),null==t.left?(this.cmd(rt.setText,0,"No left child, replace with right child"),this.cmd(rt.step),i.push(t.data),this.deleteNode(t),this.cmd(rt.step),this.cmd(rt.setText,0,""),t.right):(this.cmd(rt.setText,0,"Left child exists, look left"),this.cmd(rt.step),t.left=this.removeSucc(t.left,i),null!=t.left&&(t.left.parent=t,this.connectSmart(t.graphicID,t.left.graphicID),this.resizeTree()),t=this.balance(t),this.cmd(rt.setHighlight,t.graphicID,0),t)}removePred(t,i){return this.cmd(rt.setHighlight,t.graphicID,1,"#0000ff"),this.cmd(rt.step),null==t.right?(this.cmd(rt.setText,0,"No right child, replace with right child"),this.cmd(rt.step),i.push(t.data),this.deleteNode(t),this.cmd(rt.step),this.cmd(rt.setText,0,""),t.left):(this.cmd(rt.setText,0,"Right child exists, look right"),this.cmd(rt.step),t.right=this.removePred(t.right,i),null!=t.right&&(t.right.parent=t,this.connectSmart(t.graphicID,t.right.graphicID),this.resizeTree()),t=this.balance(t),this.cmd(rt.setHighlight,t.graphicID,0),t)}resizeTree(){if(null==this.treeRoot)return;let t=this.startingX;this.resizeWidths(this.treeRoot),null!=this.treeRoot&&(this.treeRoot.leftWidth>t?t=this.treeRoot.leftWidth:this.treeRoot.rightWidth>t&&(t=Math.max(this.treeRoot.leftWidth,2*t-this.treeRoot.rightWidth)),this.setNewPositions(this.treeRoot,t,kt.STARTING_Y,0),this.animateNewPositions(this.treeRoot),this.cmd(rt.step))}setNewPositions(t,i,e,s){null!=t&&(t.y=e,-1===s?(i-=t.rightWidth,t.heightLabelX=i-20,t.bfLabelX=i+20):1===s?(i+=t.leftWidth,t.heightLabelX=i-20,t.bfLabelX=i+20):(t.heightLabelX=i-20,t.bfLabelX=i+20),t.x=i,t.heightLabelY=t.y-20,t.bfLabelY=t.y-20,this.setNewPositions(t.left,i,e+kt.HEIGHT_DELTA,-1),this.setNewPositions(t.right,i,e+kt.HEIGHT_DELTA,1))}animateNewPositions(t){null!=t&&(this.cmd(rt.move,t.graphicID,t.x,t.y),this.cmd(rt.move,t.heightLabelID,t.heightLabelX,t.heightLabelY),this.cmd(rt.move,t.bfLabelID,t.bfLabelX,t.bfLabelY),this.animateNewPositions(t.left),this.animateNewPositions(t.right))}resizeWidths(t){return null==t?0:(t.leftWidth=Math.max(this.resizeWidths(t.left),kt.WIDTH_DELTA/2),t.rightWidth=Math.max(this.resizeWidths(t.right),kt.WIDTH_DELTA/2),t.leftWidth+t.rightWidth)}clear(){return this.commands=[],this.recClear(this.treeRoot),this.treeRoot=null,this.commands}recClear(t){null!=t&&(this.cmd(rt.delete,t.graphicID),this.cmd(rt.delete,t.heightLabelID),this.cmd(rt.delete,t.bfLabelID),this.recClear(t.left),this.recClear(t.right))}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}class Lt{constructor(t,i,e,s,h,a){this.data=t,this.x=h,this.y=a,this.heightLabelID=e,this.bfLabelID=s,this.height=0,this.bf=0,this.graphicID=i,this.left=null,this.right=null,this.parent=null}updateHeightAndBF(){const t=t=>null==t?-1:t.height,i=t(this.left),e=t(this.right);this.height=Math.max(i,e)+1,this.bf=i-e}isLeftChild(){return null==this.parent||this.parent.left===this}}kt.HIGHLIGHT_LABEL_COLOR="#FF0000",kt.HIGHLIGHT_LINK_COLOR="#FF0000",kt.HIGHLIGHT_COLOR="#007700",kt.HEIGHT_LABEL_COLOR="#065e9d",kt.LINK_COLOR="#00B000",kt.LINK_OPACITY=.25,kt.HIGHLIGHT_CIRCLE_COLOR="#007700",kt.FOREGROUND_COLOR="#007700",kt.BACKGROUND_COLOR="#DDFFDD",kt.PRINT_COLOR=kt.FOREGROUND_COLOR,kt.WIDTH_DELTA=50,kt.HEIGHT_DELTA=50,kt.STARTING_Y=50,kt.FIRST_PRINT_POS_X=50,kt.PRINT_VERTICAL_GAP=20,kt.PRINT_HORIZONTAL_GAP=50,kt.EXPLANITORY_TEXT_X=10,kt.EXPLANITORY_TEXT_Y=10;const Ct=[[!1,!0,!0,!1,!0,!1,!1,!0,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1],[!0,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],[!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],[!1,!1,!0,!1,!1,!1,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1,!0],[!0,!0,!1,!1,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1],[!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1],[!1,!1,!0,!0,!1,!0,!1,!1,!1,!0,!0,!1,!1,!1,!1,!1,!1,!1],[!0,!1,!1,!1,!0,!1,!1,!1,!0,!1,!1,!0,!1,!1,!0,!1,!1,!1],[!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!1,!1,!1],[!1,!1,!1,!0,!1,!1,!0,!1,!1,!0,!1,!1,!1,!0,!1,!1,!1,!0],[!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!1,!1,!0,!1,!0,!0,!1,!1],[!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1],[!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1,!0,!0],[!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!0,!1,!1,!1,!0,!1,!1],[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!0],[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0],[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!0,!1,!0,!0,!1]],Tt=[[0,0,-.4,0,0,0,0,0,0,0,0,0,0,0,.25,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-.25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,.25,0,0,0,0,0,0,0,0,0,0,0,-.4,0,0]],vt=[600,700,800,900,650,750,850,600,700,800,900,650,750,850,600,700,800,900],Ft=[50,50,50,50,150,150,150,250,250,250,250,350,350,350,450,450,450,450],wt=[[!1,!0,!0,!0,!0,!1,!1,!1],[!0,!1,!0,!0,!1,!0,!0,!1],[!0,!0,!1,!1,!0,!0,!0,!1],[!0,!0,!1,!1,!1,!0,!1,!0],[!0,!1,!0,!1,!1,!1,!0,!0],[!1,!0,!0,!0,!1,!1,!0,!0],[!1,!0,!0,!1,!0,!0,!1,!0],[!1,!1,!1,!0,!0,!0,!0,!1]],St=[[0,.001,0,.5,-.5,0,0,0],[0,0,0,.001,0,.001,-.2,0],[0,.001,0,0,0,.2,0,0],[-.5,0,0,0,0,.001,0,.5],[.5,0,0,0,0,0,0,-.5],[0,0,-.2,0,0,0,.001,.001],[0,.2,0,0,0,0,0,0],[0,0,0,-.5,.5,0,0,0]],At=[800,725,875,650,950,725,875,800],Bt=[25,125,125,225,225,325,325,425],_t=[[0,1,1,1,1,0,0,0],[1,0,0,0,0,0,1,0],[1,0,0,0,0,0,0,0],[1,0,0,0,0,1,0,0],[1,0,0,0,0,0,1,0],[0,0,0,1,0,0,1,0],[0,1,0,0,1,1,0,1],[0,0,0,0,0,0,1,0]].map(t=>t.map(t=>t||-1)),Pt=[[0,8,2,5,0,0,0,0],[8,0,1,1,0,0,7,0],[2,1,0,0,3,0,0,0],[5,1,0,0,0,4,0,0],[0,0,3,0,0,0,2,0],[0,0,0,4,0,0,"0",1],[0,7,0,0,2,"0",0,1],[0,0,0,0,0,1,1,0]].map(t=>t.map(t=>Number(t||-1))),Et=[[0,1,5,0,0,0,0,0],[1,0,7,9,0,0,1,0],[5,7,0,0,0,0,13,0],[0,9,0,0,0,4,0,0],[0,0,0,0,0,0,10,0],[0,0,0,4,0,0,2,"0"],[0,1,13,0,10,2,0,3],[0,0,0,0,0,"0",3,0]].map(t=>t.map(t=>Number(t||-1))),Ht=["#9b9bd4","#6aaf6a","#f07575","#ffe866","#b8f9b8","#ff99ff","#99ffff","#ffccd4"];class zt extends ft{constructor(t,i,e,s,h,a,n){super(t,i,e),this.controls=[],s=s===[]?void 0:s,h=void 0!==h&&h,a=void 0!==a&&a,n=void 0!==n&&n,this.nextIndex=0,this.currentLayer=1,this.defaultEdges=s,this.directed=h,this.isDAG=a,this.showEdgeCosts=n,this.currentLayer=1,this.setup_small(this.defaultEdges)}addControls(t){null==t&&(t=!0);const i=bt(!1);if(this.newGraphButton=xt("Button","New Graph",i),this.newGraphButton.onclick=this.newGraphCallback.bind(this),this.controls.push(this.newGraphButton),this.defaultGraphButton=xt("Button","Default Graph",i),this.defaultGraphButton.onclick=this.defaultGraphCallback.bind(this),this.defaultGraphButton.disabled=!0,this.controls.push(this.defaultGraphButton),Dt(),t){const t=It(["Undirected Graph","Directed Graph"],"GraphType");this.undirectedGraphButton=t[0],this.undirectedGraphButton.onclick=this.directedGraphCallback.bind(this,!1),this.undirectedGraphButton.checked=!this.directed,this.controls.push(this.undirectedGraphButton),this.directedGraphButton=t[1],this.directedGraphButton.onclick=this.directedGraphCallback.bind(this,!0),this.directedGraphButton.checked=this.directed,this.controls.push(this.directedGraphButton),Dt()}let e=It(["Small Graph","Large Graph"],"GraphSize");this.smallGraphButton=e[0],this.smallGraphButton.onclick=this.smallGraphCallback.bind(this),this.smallGraphButton.checked=!0,this.controls.push(this.smallGraphButton),this.largeGraphButton=e[1],this.largeGraphButton.onclick=this.largeGraphCallback.bind(this),this.controls.push(this.largeGraphButton),Dt(),e=It(["Logical Representation","Adjacency List Representation","Adjacency Matrix Representation"],"GraphRepresentation"),this.logicalButton=e[0],this.logicalButton.onclick=this.graphRepChangedCallback.bind(this,1),this.adjacencyListButton=e[1],this.adjacencyListButton.onclick=this.graphRepChangedCallback.bind(this,2),this.adjacencyMatrixButton=e[2],this.adjacencyMatrixButton.onclick=this.graphRepChangedCallback.bind(this,3),this.logicalButton.checked=!0}directedGraphCallback(t){t!==this.directed&&(this.defaultGraphButton.disabled=t,this.directed=t,this.animationManager.resetAll(),this.setup())}smallGraphCallback(){8!==this.size&&(this.animationManager.resetAll(),this.setup_small())}largeGraphCallback(){18!==this.size&&(this.animationManager.resetAll(),this.setup_large())}newGraphCallback(){this.animationManager.resetAll(),this.setup()}defaultGraphCallback(){this.animationManager.resetAll(),this.setup(this.defaultEdges)}graphRepChangedCallback(t){this.animationManager.setAllLayers([0,t]),this.currentLayer=t}recolorGraph(){for(let t=0;t<this.size;t++)for(let i=0;i<this.size;i++)this.adj_matrix[t][i]>=0&&(this.setEdgeColor(t,i,"#000000"),this.setEdgeThickness(t,i,1))}highlightEdge(t,i,e,s){this.cmd(rt.setHighlight,this.adj_list_edges[t][i],e,s),this.cmd(rt.setHighlight,this.adj_matrixID[t][i],e,s),this.cmd(rt.setEdgeHighlight,this.circleID[t],this.circleID[i],e,s),this.directed||this.cmd(rt.setEdgeHighlight,this.circleID[i],this.circleID[t],e,s)}visitVertex(t){this.cmd(rt.createHighlightCircle,this.highlightCircleL,"#000000",this.x_pos_logical[t],this.y_pos_logical[t]),this.cmd(rt.setLayer,this.highlightCircleL,1),this.cmd(rt.createHighlightCircle,this.highlightCircleAL,"#000000",this.adj_list_x_start-this.adj_list_width,this.adj_list_y_start+t*this.adj_list_height),this.cmd(rt.setLayer,this.highlightCircleAL,2),this.cmd(rt.createHighlightCircle,this.highlightCircleAM,"#000000",this.adj_matrix_x_start-this.adj_matrix_width,this.adj_matrix_y_start+t*this.adj_matrix_height),this.cmd(rt.setLayer,this.highlightCircleAM,3)}leaveVertex(){this.cmd(rt.delete,this.highlightCircleL),this.cmd(rt.delete,this.highlightCircleAM),this.cmd(rt.delete,this.highlightCircleAL)}setEdgeColor(t,i,e){this.cmd(rt.setForegroundColor,this.adj_list_edges[t][i],e),this.cmd(rt.setTextColor,this.adj_matrixID[t][i],e),this.cmd(rt.setEdgeColor,this.circleID[t],this.circleID[i],e),this.directed||this.cmd(rt.setEdgeColor,this.circleID[i],this.circleID[t],e)}setEdgeThickness(t,i,e){this.cmd(rt.setEdgeThickness,this.circleID[t],this.circleID[i],e),this.directed||this.cmd(rt.setEdgeThickness,this.circleID[i],this.circleID[t],e)}clearEdges(){for(let t=0;t<this.size;t++)for(let i=0;i<this.size;i++)this.adj_matrix[t][i]>=0&&this.cmd(rt.disconnect,this.circleID[t],this.circleID[i])}rebuildEdges(){this.clearEdges(),this.buildEdges()}buildEdges(){for(let t=0;t<this.size;t++)for(let i=0;i<this.size;i++)if(this.adj_matrix[t][i]>=0){const e=this.showEdgeCosts?String(this.adj_matrix[t][i]):"";this.directed?this.cmd(rt.connect,this.circleID[t],this.circleID[i],"#000000",this.adjustCurveForDirectedEdges(this.curve[t][i],this.adj_matrix[i][t]>=0),1,e):t<i&&this.cmd(rt.connect,this.circleID[t],this.circleID[i],"#000000",this.curve[t][i],0,e)}}setup_small(t){this.allowed=wt,this.curve=St,this.x_pos_logical=At,this.y_pos_logical=Bt,this.adj_matrix_x_start=700,this.adj_matrix_y_start=45,this.adj_matrix_width=30,this.adj_matrix_height=30,this.adj_list_x_start=600,this.adj_list_y_start=30,this.adj_list_elem_width=80,this.adj_list_elem_height=30,this.adj_list_height=36,this.adj_list_width=36,this.adj_list_spacing_after_list=15,this.adj_list_spacing_between_nodes=15,this.size=8,this.isLarge=!1,this.highlightCircleL=this.nextIndex++,this.highlightCircleAL=this.nextIndex++,this.highlightCircleAM=this.nextIndex++,this.setup(t)}setup_large(){this.allowed=Ct,this.curve=Tt,this.x_pos_logical=vt,this.y_pos_logical=Ft,this.adj_matrix_x_start=575,this.adj_matrix_y_start=40,this.adj_matrix_width=23,this.adj_matrix_height=23,this.adj_list_x_start=550,this.adj_list_y_start=30,this.adj_list_elem_width=80,this.adj_list_elem_height=20,this.adj_list_height=25,this.adj_list_width=20,this.adj_list_spacing_after_list=25,this.adj_list_spacing_between_nodes=15,this.size=18,this.isLarge=!0,this.highlightCircleL=this.nextIndex++,this.highlightCircleAL=this.nextIndex++,this.highlightCircleAM=this.nextIndex++,this.setup()}adjustCurveForDirectedEdges(t,i){return!this.directed||!i||Math.abs(t)>.01?t:.1}setup(t){this.commands=[],this.circleID=new Array(this.size);for(let i=0;i<this.size;i++)this.circleID[i]=this.nextIndex++,this.cmd(rt.createCircle,this.circleID[i],this.toStr(i),this.x_pos_logical[i],this.y_pos_logical[i]),this.cmd(rt.setTextColor,this.circleID[i],"#0000FF",0),this.cmd(rt.setLayer,this.circleID[i],1);if(t){this.adj_matrix=t,this.adj_matrixID=new Array(this.size);for(let t=0;t<this.size;t++){this.adj_matrixID[t]=new Array(this.size);for(let i=0;i<this.size;i++)this.adj_matrixID[t][i]=this.nextIndex++}this.buildEdges()}else{this.adj_matrix=new Array(this.size),this.adj_matrixID=new Array(this.size);for(let i=0;i<this.size;i++)this.adj_matrix[i]=new Array(this.size),this.adj_matrixID[i]=new Array(this.size);let t;if(t=8===this.size?this.directed?.4:.5:this.directed?.35:.6,this.directed){for(let i=0;i<this.size;i++)for(let e=0;e<this.size;e++)this.adj_matrixID[i][e]=this.nextIndex++,this.allowed[i][e]&&Math.random()<=t&&(i<e||Math.abs(this.curve[i][e])<.01||-1===this.adj_matrixID[e][i])&&(!this.isDAG||i<e)?this.showEdgeCosts?this.adj_matrix[i][e]=Math.floor(9*Math.random())+1:this.adj_matrix[i][e]=1:this.adj_matrix[i][e]=-1;this.buildEdges()}else{for(let i=0;i<this.size;i++)for(let e=i+1;e<this.size;e++)if(this.adj_matrixID[i][e]=this.nextIndex++,this.adj_matrixID[e][i]=this.nextIndex++,this.allowed[i][e]&&Math.random()<=t){let t;this.showEdgeCosts?this.adj_matrix[i][e]=Math.floor(9*Math.random())+1:this.adj_matrix[i][e]=1,this.adj_matrix[e][i]=this.adj_matrix[i][e],t=this.showEdgeCosts?String(this.adj_matrix[i][e]):"",this.cmd(rt.connect,this.circleID[i],this.circleID[e],"#000000",this.curve[i][e],0,t)}else this.adj_matrix[i][e]=-1,this.adj_matrix[e][i]=-1;this.buildEdges();for(let t=0;t<this.size;t++)this.adj_matrix[t][t]=-1}}this.buildAdjList(),this.buildAdjMatrix(),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.clearHistory()}resetAll(){}buildAdjMatrix(){this.adj_matrix_index_x=new Array(this.size),this.adj_matrix_index_y=new Array(this.size);for(let t=0;t<this.size;t++){this.adj_matrix_index_x[t]=this.nextIndex++,this.adj_matrix_index_y[t]=this.nextIndex++,this.cmd(rt.createLabel,this.adj_matrix_index_x[t],this.toStr(t),this.adj_matrix_x_start+t*this.adj_matrix_width,this.adj_matrix_y_start-this.adj_matrix_height),this.cmd(rt.setForegroundColor,this.adj_matrix_index_x[t],"#0000FF"),this.cmd(rt.createLabel,this.adj_matrix_index_y[t],this.toStr(t),this.adj_matrix_x_start-this.adj_matrix_width,this.adj_matrix_y_start+t*this.adj_matrix_height),this.cmd(rt.setForegroundColor,this.adj_matrix_index_y[t],"#0000FF"),this.cmd(rt.setLayer,this.adj_matrix_index_x[t],3),this.cmd(rt.setLayer,this.adj_matrix_index_y[t],3);for(let i=0;i<this.size;i++){let e;this.adj_matrixID[t][i]=this.nextIndex++,e=this.adj_matrix[t][i]<0?"":String(this.adj_matrix[t][i]),this.cmd(rt.createRectangle,this.adj_matrixID[t][i],e,this.adj_matrix_width,this.adj_matrix_height,this.adj_matrix_x_start+i*this.adj_matrix_width,this.adj_matrix_y_start+t*this.adj_matrix_height),this.cmd(rt.setLayer,this.adj_matrixID[t][i],3)}}}removeAdjList(){for(let t=0;t<this.size;t++){this.cmd(rt.delete,this.adj_list_list[t],"RAL1"),this.cmd(rt.delete,this.adj_list_index[t],"RAL2");for(let i=0;i<this.size;i++)this.adj_matrix[t][i]>0&&this.cmd(rt.delete,this.adj_list_edges[t][i],"RAL3")}}buildAdjList(){this.adj_list_index=new Array(this.size),this.adj_list_list=new Array(this.size),this.adj_list_edges=new Array(this.size);for(let t=0;t<this.size;t++){this.adj_list_index[t]=this.nextIndex++,this.adj_list_edges[t]=new Array(this.size),this.adj_list_index[t]=this.nextIndex++,this.adj_list_list[t]=this.nextIndex++,this.cmd(rt.createRectangle,this.adj_list_list[t],"",this.adj_list_width,this.adj_list_height,this.adj_list_x_start,this.adj_list_y_start+t*this.adj_list_height),this.cmd(rt.setLayer,this.adj_list_list[t],2),this.cmd(rt.createLabel,this.adj_list_index[t],this.toStr(t),this.adj_list_x_start-this.adj_list_width,this.adj_list_y_start+t*this.adj_list_height),this.cmd(rt.setForegroundColor,this.adj_list_index[t],"#0000FF"),this.cmd(rt.setLayer,this.adj_list_index[t],2);let i=this.adj_list_list[t],e=this.adj_list_x_start+this.adj_list_width+this.adj_list_spacing_after_list+this.adj_list_spacing_between_nodes,s=!1;for(let h=0;h<this.size;h++)this.adj_matrix[t][h]>=0&&(s=!0,this.adj_list_edges[t][h]=this.nextIndex++,this.cmd(rt.createLinkedListNode,this.adj_list_edges[t][h],[this.toStr(h),this.adj_matrix[t][h]],this.adj_list_elem_width,this.adj_list_elem_height,e,this.adj_list_y_start+t*this.adj_list_height,.25,0,1),this.cmd(rt.setNull,this.adj_list_edges[t][h],1),this.cmd(rt.setTextColor,this.adj_list_edges[t][h],"#0000FF",0),this.cmd(rt.setLayer,this.adj_list_edges[t][h],2),e=e+this.adj_list_elem_width+this.adj_list_spacing_between_nodes,this.cmd(rt.connect,i,this.adj_list_edges[t][h]),this.cmd(rt.setNull,i,0),i=this.adj_list_edges[t][h]);s||this.cmd(rt.setNull,this.adj_list_list[t],1)}}reset(){throw new Error("reset() should be implemented in child")}toStr(t){return String.fromCharCode(65+t)}enableUI(){for(const t of this.controls)t===this.defaultGraphButton&&(this.directed||this.isLarge||this.adj_matrix===this.defaultEdges)?t.disabled=!0:t.disabled=!1}disableUI(){for(const t of this.controls)t.disabled=!0}}const Nt=[["procedure preOrder(Node node)"],["     if node is not null:"],["          look at data in the node"],["          recurse left"],["          recurse right"],["end procedure"]],Rt=[["procedure inOrder(Node node)"],["     if node is not null:"],["          recurse left"],["          look at data in the node"],["          recurse right"],["end procedure"]],jt=[["procedure postOrder(Node node)"],["     if node is not null:"],["          recurse left"],["          recurse right"],["          look at data in the node"],["end procedure"]],Mt=[["procedure levelOrder()"],["     create Queue q"],["     add root to q"],["     while q is not empty"],["          Node curr <- remove from q"],["          record data from curr"],["          if curr.left is not null:"],["               add curr.left to q"],["          if curr.right is not null:"],["               add curr.right to q"],["end procedure"]];class Ot extends ft{constructor(t,i,e){super(t,i,e),this.first_print_pos_y=e-2*Ot.PRINT_VERTICAL_GAP,this.print_max=i-10,this.startingX=i/2,this.addControls(),this.nextIndex=1,this.commands=[],this.edges=[],this.toClear=[],this.cmd(rt.createLabel,0,"",Ot.EXPLANITORY_TEXT_X,Ot.EXPLANITORY_TEXT_Y,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}addControls(){this.controls=[],this.insertField=xt("Text",""),this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4,!0),this.controls.push(this.insertField),this.insertButton=xt("Button","Insert"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.deleteField=xt("Text",""),this.deleteField.onkeydown=this.returnSubmit(this.deleteField,this.deleteCallback.bind(this),4,!0),this.controls.push(this.deleteField),this.deleteButton=xt("Button","Delete"),this.deleteButton.onclick=this.deleteCallback.bind(this),this.controls.push(this.deleteButton),Dt(),this.findField=xt("Text",""),this.findField.onkeydown=this.returnSubmit(this.findField,this.findCallback.bind(this),4,!0),this.controls.push(this.findField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt();const t=It(["Pre-order","In-order","Post-order","Level order"],"Traversals");this.preOrderSelect=t[0],this.inOrderSelect=t[1],this.postOrderSelect=t[2],this.levelOrderSelect=t[3],this.preOrderSelect.onclick=()=>this.traversal="pre",this.inOrderSelect.onclick=()=>this.traversal="in",this.postOrderSelect.onclick=()=>this.traversal="post",this.levelOrderSelect.onclick=()=>this.traversal="level",this.preOrderSelect.checked=!0,this.traversal="pre",this.traverseButton=xt("Button","Traverse"),this.traverseButton.onclick=this.traverseCallback.bind(this),this.controls.push(this.traverseButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const i=It(["Predecessor","Successor"],"Predecessor/Successor");this.predButton=i[0],this.succButton=i[1],this.predButton.onclick=()=>this.predSucc="pred",this.succButton.onclick=()=>this.predSucc="succ",this.succButton.checked=!0,this.predSucc="succ"}reset(){this.nextIndex=1,this.treeRoot=null,this.edges=[],this.toClear=[]}insertCallback(){const t=this.insertField.value;""!==t&&(this.insertField.value="",this.implementAction(this.add.bind(this),parseInt(t)))}deleteCallback(){const t=this.deleteField.value;""!==t&&(this.deleteField.value="",this.implementAction(this.remove.bind(this),parseInt(t)))}findCallback(){const t=this.findField.value;""!==t&&(this.findField.value="",this.implementAction(this.findElement.bind(this),parseInt(t)))}traverseCallback(){this.implementAction(this.traverse.bind(this))}clearCallback(){this.implementAction(this.clear.bind(this))}sizeChanged(t){this.startingX=t/2}printTree(){if(this.commands=[],null!=this.treeRoot){this.highlightID=this.nextIndex++;const t=this.nextIndex;this.cmd(rt.createHighlightCircle,this.highlightID,Ot.HIGHLIGHT_COLOR,this.treeRoot.x,this.treeRoot.y),this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel=this.first_print_pos_y,this.printTreeRec(this.treeRoot),this.cmd(rt.delete,this.highlightID),this.cmd(rt.step);for(let i=t;i<this.nextIndex;i++)this.cmd(rt.delete,i);this.nextIndex=this.highlightID}return this.commands}preOrderRec(t,i){this.codeID=i,this.cmd(rt.step);const e=this.nextIndex++;this.unhighlight(3,0),this.unhighlight(4,0),this.highlight(2,0),this.cmd(rt.createLabel,e,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,e,Ot.PRINT_COLOR),this.cmd(rt.move,e,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=Ot.PRINT_HORIZONTAL_GAP,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=Ot.PRINT_VERTICAL_GAP),this.unhighlight(2,0),null!=t.left&&(this.highlight(3,0),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.preOrderRec(t.left,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(3,0),null!=t.right&&(this.highlight(4,0),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.preOrderRec(t.right,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(4,0)}levelOrder(t,i){this.codeID=i;const e=[t],s=this.nextIndex++,h=[this.nextIndex];for(this.cmd(rt.createLabel,s,"Queue: ",30,225,0),this.cmd(rt.step),this.cmd(rt.createLabel,this.nextIndex,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,this.nextIndex,Ot.PRINT_COLOR),this.cmd(rt.move,this.nextIndex++,35,250,0),this.highlight(2,0),this.cmd(rt.step),this.unhighlight(2,0),this.highlight(3,0),this.cmd(rt.step);0!==e.length;){const t=e.shift();this.cmd(rt.move,this.highlightID,t.x,t.y),this.unhighlight(3,0);const i=h.shift();this.cmd(rt.move,i,this.xPosOfNextLabel,this.yPosOfNextLabel),this.highlight(4,0),this.highlight(5,0);for(let e=0;e<h.length;e++)this.cmd(rt.move,h[e],35+40*e,250);this.cmd(rt.step),this.unhighlight(4,0),this.unhighlight(5,0),this.xPosOfNextLabel+=Ot.PRINT_HORIZONTAL_GAP,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=Ot.PRINT_VERTICAL_GAP),this.highlight(6,0),null!=t.left?(this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0),e.push(t.left),h.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex,t.left.data,t.left.x,t.left.y),this.cmd(rt.setForegroundColor,this.nextIndex,Ot.PRINT_COLOR),this.cmd(rt.move,this.nextIndex++,35+40*(e.length-1),250),this.cmd(rt.step),this.unhighlight(7,0)):(this.cmd(rt.step),this.unhighlight(6,0)),this.highlight(8,0),null!=t.right?(this.cmd(rt.step),this.unhighlight(8,0),this.highlight(9,0),e.push(t.right),h.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex,t.right.data,t.right.x,t.right.y),this.cmd(rt.setForegroundColor,this.nextIndex,Ot.PRINT_COLOR),this.cmd(rt.move,this.nextIndex++,35+40*(e.length-1),250),this.cmd(rt.step),this.unhighlight(9,0)):(this.cmd(rt.step),this.unhighlight(8,0)),this.highlight(3,0),this.cmd(rt.step)}this.unhighlight(3,0)}traverse(){if(this.commands=[],this.clearOldObjects(),null==this.treeRoot)return this.commands;this.highlightID=this.nextIndex++;const t=this.nextIndex;this.cmd(rt.createHighlightCircle,this.highlightID,Ot.HIGHLIGHT_COLOR,this.treeRoot.x,this.treeRoot.y),this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel=this.first_print_pos_y,"pre"===this.traversal?(this.codeID=this.addCodeToCanvasBase(Nt,25,35,14),this.preOrderRec(this.treeRoot,this.codeID)):"in"===this.traversal?(this.codeID=this.addCodeToCanvasBase(Rt,25,35,14),this.printTreeRec(this.treeRoot,this.codeID)):"post"===this.traversal?(this.codeID=this.addCodeToCanvasBase(jt,25,35,14),this.postOrderRec(this.treeRoot,this.codeID)):"level"===this.traversal&&(this.codeID=this.addCodeToCanvasBase(Mt,25,35,14),this.levelOrder(this.treeRoot,this.codeID)),this.cmd(rt.delete,this.highlightID),this.cmd(rt.step);for(let i=t;i<this.nextIndex;i++)this.toClear.push(i);return this.commands}postOrderRec(t,i){this.codeID=i,this.cmd(rt.step),null!=t.left&&(this.unhighlight(3,0),this.highlight(2,0),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.postOrderRec(t.left,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(2,0),null!=t.right&&(this.unhighlight(2,0),this.highlight(3,0),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.postOrderRec(t.right,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(3,0),this.highlight(4,0);const e=this.nextIndex++;this.cmd(rt.createLabel,e,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,e,Ot.PRINT_COLOR),this.cmd(rt.move,e,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=Ot.PRINT_HORIZONTAL_GAP,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=Ot.PRINT_VERTICAL_GAP),this.unhighlight(4,0)}printTreeRec(t,i){this.codeID=i,this.cmd(rt.step),null!=t.left&&(this.unhighlight(3,0),this.unhighlight(4,0),this.highlight(2,0),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.printTreeRec(t.left,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(2,0),this.unhighlight(4,0),this.highlight(3,0);const e=this.nextIndex++;this.cmd(rt.createLabel,e,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,e,Ot.PRINT_COLOR),this.cmd(rt.move,e,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=Ot.PRINT_HORIZONTAL_GAP,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=Ot.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=Ot.PRINT_VERTICAL_GAP),this.unhighlight(3,0),null!=t.right&&(this.unhighlight(2,0),this.unhighlight(3,0),this.highlight(4,0),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.printTreeRec(t.right,i),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step)),this.unhighlight(4,0)}findElement(t){return this.commands=[],this.clearOldObjects(),this.highlightID=this.nextIndex++,this.doFind(this.treeRoot,t),this.commands}doFind(t,i){this.cmd(rt.setText,0,"Searching for "+i),null!=t?(this.cmd(rt.setHighlight,t.graphicID,1),t.data===i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" = "+i+" (Element found!)"),this.cmd(rt.step),this.cmd(rt.setText,0,"Found:"+i),this.cmd(rt.setHighlight,t.graphicID,0)):t.data>i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" < "+t.data+" (look to left subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.left&&(this.cmd(rt.createHighlightCircle,this.highlightID,Ot.HIGHLIGHT_COLOR,t.x,t.y),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID)),this.doFind(t.left,i)):(this.cmd(rt.setText,0," Searching for "+i+" : "+i+" > "+t.data+" (look to right subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.right&&(this.cmd(rt.createHighlightCircle,this.highlightID,Ot.HIGHLIGHT_COLOR,t.x,t.y),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID)),this.doFind(t.right,i))):(this.cmd(rt.setText,0,"Searching for "+i+" : < Empty Tree > (Element not found)"),this.cmd(rt.step),this.cmd(rt.setText,0,"Searching for "+i+" :  (Element not found)"))}remakeTree(t){null!=t&&(null!=t.left&&(this.cmd(rt.connect,t.graphicID,t.left.graphicID,Ot.LINK_COLOR),this.remakeTree(t.left)),null!=t.right&&(this.cmd(rt.connect,t.graphicID,t.right.graphicID,Ot.LINK_COLOR),this.remakeTree(t.right)))}clearOldObjects(){this.toClear.forEach(t=>this.cmd(rt.delete,t)),this.toClear=[]}add(t){return this.commands=[],this.clearOldObjects(),this.cmd(rt.setText,0,"Inserting "+t),this.treeRoot=this.addH(t,this.treeRoot),this.resizeTree(),this.commands}addH(t,i){if(null==i){this.cmd(rt.setText,0,"Null found, inserting new node");const i=this.nextIndex++;return this.cmd(rt.createCircle,i,t,30,Ot.STARTING_Y),this.cmd(rt.setForegroundColor,i,Ot.FOREGROUND_COLOR),this.cmd(rt.setBackgroundColor,i,Ot.BACKGROUND_COLOR),this.cmd(rt.step),this.cmd(rt.setText,0,""),new Vt(t,i,0,0)}if(this.cmd(rt.setHighlight,i.graphicID,1),t<i.data){this.cmd(rt.setText,0,`${t} < ${i.data}. Looking at left subtree`),this.cmd(rt.step),i.left=this.addH(t,i.left),i.left.parent=i,this.resizeTree();this.connectSmart(i.graphicID,i.left.graphicID)&&this.cmd(rt.step)}else if(t>i.data){this.cmd(rt.setText,0,`${t} > ${i.data}. Looking at right subtree`),this.cmd(rt.step),i.right=this.addH(t,i.right),i.right.parent=i,this.resizeTree();this.connectSmart(i.graphicID,i.right.graphicID)&&this.cmd(rt.step)}else this.cmd(rt.setText,0,`${t} == ${i.data}. Ignoring duplicate!`),this.cmd(rt.step);return this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setText,0,""),i}connectSmart(t,i){return!this.edges.some(e=>e[0]===t&&e[1]===i)&&(this.cmd(rt.connect,t,i,Ot.LINK_COLOR),this.edges.push([t,i]),!0)}deleteNode(t){this.cmd(rt.delete,t.graphicID)}remove(t){return this.commands=[],this.clearOldObjects(),this.cmd(rt.setText,0,"Deleting "+t),this.cmd(rt.step),this.cmd(rt.setText,0," "),this.highlightID=this.nextIndex++,this.treeRoot=this.removeH(this.treeRoot,t),this.cmd(rt.setText,0,""),this.resizeTree(),this.commands}removeH(t,i){if(null!=t){if(this.cmd(rt.setHighlight,t.graphicID,1),i<t.data)this.cmd(rt.setText,0,`${i} < ${t.data}. Looking left`),this.cmd(rt.step),t.left=this.removeH(t.left,i),null!=t.left&&(t.left.parent=t,this.connectSmart(t.graphicID,t.left.graphicID),this.resizeTree());else if(i>t.data)this.cmd(rt.setText,0,`${i} > ${t.data}. Looking right`),this.cmd(rt.step),t.right=this.removeH(t.right,i),null!=t.right&&(t.right.parent=t,this.connectSmart(t.graphicID,t.right.graphicID),this.resizeTree());else{if(null==t.left&&null==t.right)return this.cmd(rt.setText,0,"Element to delete is a leaf node"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),null;if(null==t.left)return this.cmd(rt.setText,0,"One-child case, replace with right child"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),t.right;if(null==t.right)return this.cmd(rt.setText,0,"One-child case, replace with left child"),this.cmd(rt.step),this.deleteNode(t),this.cmd(rt.step),t.left;{const i=[];"succ"===this.predSucc?(this.cmd(rt.setText,0,"Two-child case, replace data with successor"),this.cmd(rt.step),t.right=this.removeSucc(t.right,i),t.right&&this.connectSmart(t.graphicID,t.right.graphicID)):(this.cmd(rt.setText,0,"Two-child case, replace data with predecessor"),this.cmd(rt.step),t.left=this.removePred(t.left,i),t.left&&this.connectSmart(t.graphicID,t.left.graphicID)),this.resizeTree(),t.data=i[0],this.cmd(rt.setText,t.graphicID,t.data)}}return this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setText,0,""),t}this.cmd(rt.setText,0,i+" not found in the tree")}removeSucc(t,i){return this.cmd(rt.setHighlight,t.graphicID,1,"#0000ff"),this.cmd(rt.step),null==t.left?(this.cmd(rt.setText,0,"No left child, replace with right child"),this.cmd(rt.step),i.push(t.data),this.deleteNode(t),this.cmd(rt.step),this.cmd(rt.setText,0,""),t.right):(this.cmd(rt.setText,0,"Left child exists, look left"),t.left=this.removeSucc(t.left,i),null!=t.left&&(t.left.parent=t,this.connectSmart(t.graphicID,t.left.graphicID),this.resizeTree()),this.cmd(rt.setHighlight,t.graphicID,0,"#0000ff"),t)}removePred(t,i){return this.cmd(rt.setHighlight,t.graphicID,1,"#0000ff"),this.cmd(rt.step),null==t.right?(this.cmd(rt.setText,0,"No right child, replace with right child"),this.cmd(rt.step),i.push(t.data),this.deleteNode(t),this.cmd(rt.step),this.cmd(rt.setText,0,""),t.left):(this.cmd(rt.setText,0,"Right child exists, look right"),this.cmd(rt.step),t.right=this.removePred(t.right,i),null!=t.right&&(t.right.parent=t,this.connectSmart(t.graphicID,t.right.graphicID),this.resizeTree()),this.cmd(rt.setHighlight,t.graphicID,0,"#0000ff"),t)}resizeTree(){if(null==this.treeRoot)return;let t=this.startingX;this.resizeWidths(this.treeRoot),null!=this.treeRoot&&(this.treeRoot.leftWidth>t?t=this.treeRoot.leftWidth:this.treeRoot.rightWidth>t&&(t=Math.max(this.treeRoot.leftWidth,2*t-this.treeRoot.rightWidth)),this.setNewPositions(this.treeRoot,t,Ot.STARTING_Y,0),this.animateNewPositions(this.treeRoot),this.cmd(rt.step))}setNewPositions(t,i,e,s){null!=t&&(t.y=e,-1===s?i-=t.rightWidth:1===s&&(i+=t.leftWidth),t.x=i,this.setNewPositions(t.left,i,e+Ot.HEIGHT_DELTA,-1),this.setNewPositions(t.right,i,e+Ot.HEIGHT_DELTA,1))}animateNewPositions(t){null!=t&&(this.cmd(rt.move,t.graphicID,t.x,t.y),this.animateNewPositions(t.left),this.animateNewPositions(t.right))}resizeWidths(t){return null==t?0:(t.leftWidth=Math.max(this.resizeWidths(t.left),Ot.WIDTH_DELTA/2),t.rightWidth=Math.max(this.resizeWidths(t.right),Ot.WIDTH_DELTA/2),t.leftWidth+t.rightWidth)}clear(){return this.commands=[],this.clearOldObjects(),this.recClear(this.treeRoot),this.treeRoot=null,this.commands}recClear(t){null!=t&&(this.cmd(rt.delete,t.graphicID),this.recClear(t.left),this.recClear(t.right))}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}highlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#FF0000")}unhighlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000")}}class Vt{constructor(t,i,e,s){this.data=t,this.x=e,this.y=s,this.graphicID=i,this.left=null,this.right=null,this.parent=null}}Ot.HIGHLIGHT_LABEL_COLOR="#FF0000",Ot.HIGHLIGHT_LINK_COLOR="#FF0000",Ot.HIGHLIGHT_COLOR="#007700",Ot.HEIGHT_LABEL_COLOR="#007700",Ot.LINK_COLOR="#00B000",Ot.HIGHLIGHT_CIRCLE_COLOR="#007700",Ot.FOREGROUND_COLOR="#007700",Ot.BACKGROUND_COLOR="#DDFFDD",Ot.PRINT_COLOR=Ot.FOREGROUND_COLOR,Ot.WIDTH_DELTA=50,Ot.HEIGHT_DELTA=50,Ot.STARTING_Y=50,Ot.FIRST_PRINT_POS_X=50,Ot.PRINT_VERTICAL_GAP=20,Ot.PRINT_HORIZONTAL_GAP=50,Ot.EXPLANITORY_TEXT_X=10,Ot.EXPLANITORY_TEXT_Y=10;function Xt(t,i,e){this.widths=[],this.keys=[],this.children=[],this.x=i,this.y=e,this.graphicID=t,this.numKeys=1,this.isLeaf=!0,this.parent=null,this.leftWidth=0,this.rightWidth=0}let Kt=!1;let qt=!0;class Wt extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.hashingIntegers=!0}addControls(){this.controls=[],ut("Key: "),this.keyField=xt("Text",""),this.keyField.size=10,this.keyField.onkeydown=this.returnSubmit(this.keyField,this.insertCallback.bind(this),10,!0),this.controls.push(this.keyField),ut("Value: "),this.valueField=xt("Text",""),this.valueField.size=10,this.valueField.onkeydown=this.returnSubmit(this.valueField,this.insertCallback.bind(this),10,!1),this.controls.push(this.valueField),this.insertButton=xt("Button","Insert"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.deleteField=xt("Text",""),this.deleteField.size=10,this.deleteField.onkeydown=this.returnSubmit(this.keyField,this.deleteCallback.bind(this),10,!0),this.controls.push(this.deleteField),this.deleteButton=xt("Button","Delete"),this.deleteButton.onclick=this.deleteCallback.bind(this),this.controls.push(this.deleteButton),Dt(),this.findField=xt("Text",""),this.findField.size=10,this.findField.onkeydown=this.returnSubmit(this.keyField,this.findCallback.bind(this),10,!0),this.controls.push(this.findField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt(),this.loadField=xt("Text",""),this.loadField.setAttribute("placeholder","LF/100"),this.loadField.size=5,this.loadField.onkeydown=this.returnSubmit(this.loadField,this.changeLoadFactor.bind(this),5,!0),this.controls.push(this.loadField),this.loadButton=xt("Button","Load Factor"),this.loadButton.onclick=this.loadFactorCallBack.bind(this),this.controls.push(this.loadButton),Dt();const t=It(["Hash Integer","Hash Strings"],"HashType");this.hashIntegerButton=t[0],this.hashIntegerButton.onclick=this.changeHashTypeCallback.bind(this,!0),this.controls.push(this.hashIntegerButton),this.hashStringButton=t[1],this.hashStringButton.onclick=this.changeHashTypeCallback.bind(this,!1),this.hashIntegerButton.checked=!0,this.controls.push(this.hashStringButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}changeHashTypeCallback(t){this.hashingIntegers!==t&&this.implementAction(this.changeHashType.bind(this),t)}changeHashType(t){return this.hashingIntegers=t,this.hashingIntegers?(this.hashIntegerButton.checked=!0,this.keyField.onkeydown=this.returnSubmit(this.keyField,this.insertCallback.bind(this),10,!0),this.deleteField.onkeydown=this.returnSubmit(this.keyField,this.deleteCallback.bind(this),10,!0),this.findField.onkeydown=this.returnSubmit(this.keyField,this.findCallback.bind(this),10,!0)):(this.hashStringButton.checked=!0,this.keyField.onkeydown=this.returnSubmit(this.keyField,this.insertCallback.bind(this),10,!1),this.deleteField.onkeydown=this.returnSubmit(this.keyField,this.deleteCallback.bind(this),10,!1),this.findField.onkeydown=this.returnSubmit(this.keyField,this.findCallback.bind(this),10,!1)),this.resetAll()}clearCallback(){this.implementAction(this.clear.bind(this))}doHash(t){if(this.hashingIntegers){const i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++,h=parseInt(t)%this.table_size;return this.currHash=parseInt(t),this.cmd(rt.createLabel,i,t+" % "+String(this.table_size)+" = ",200,45),this.cmd(rt.createLabel,e,h,250,45),this.cmd(rt.step),this.cmd(rt.createHighlightCircle,s,"#0000FF",250,45),this.cmd(rt.move,s,this.indexXPos[h],this.indexYPos[h]),this.cmd(rt.step),this.cmd(rt.delete,i),this.cmd(rt.delete,e),this.cmd(rt.delete,s),this.nextIndex-=3,h}{const i=this.nextIndex++;this.cmd(rt.createLabel,i,"Hashing:",10,55,0);const e=new Array(t.length),s=new Array(t.length);for(let I=0;I<t.length;I++)e[I]=this.nextIndex++,s[I]=t.charAt(I),this.cmd(rt.createLabel,e[I],s[I],60+7*I,55,0);const h=new Array(32),a=new Array(32),n=new Array(8),l=new Array(8),r=new Array(32),o=new Array(4),d=new Array(4),c=this.nextIndex++,m=this.nextIndex++;for(let t=0;t<32;t++)a[t]=0,h[t]=this.nextIndex++,r[t]=this.nextIndex++;for(let t=0;t<8;t++)l[t]=this.nextIndex++;for(let t=0;t<4;t++)o[t]=this.nextIndex++;this.cmd(rt.step);for(let t=s.length-1;t>=0;t--){for(let t=0;t<32;t++)this.cmd(rt.createLabel,h[t],a[t],200+7*t,10,0);this.cmd(rt.delete,e[t]);let i=s[t].charCodeAt(0);for(let e=7;e>=0;e--)n[e]=i%2,i=Math.floor(i/2),this.cmd(rt.createLabel,l[e],n[e],60+7*t,55,0),this.cmd(rt.move,l[e],200+7*(e+24),30);this.cmd(rt.step),this.cmd(rt.createRectangle,m,"",224,0,200,42,"left","bottom"),this.cmd(rt.createLabel,c,"+",200,30,0),this.cmd(rt.step);let g=0;for(let t=7;t>=0;t--)a[t+24]=a[t+24]+n[t]+g,a[t+24]>1?(a[t+24]=a[t+24]-2,g=1):g=0;for(let t=23;t>=0;t--)a[t]=a[t]+g,a[t]>1?(a[t]=a[t]-2,g=1):g=0;for(let t=0;t<32;t++)this.cmd(rt.createLabel,r[t],a[t],200+7*t,50,0);this.cmd(rt.step);for(let t=0;t<8;t++)this.cmd(rt.delete,l[t]);this.cmd(rt.delete,m),this.cmd(rt.delete,c);for(let t=0;t<32;t++)this.cmd(rt.delete,h[t]),this.cmd(rt.move,r[t],200+7*t,10);if(this.cmd(rt.step),t>0){for(let t=0;t<32;t++)this.cmd(rt.move,r[t],200+7*(t-4),10);this.cmd(rt.step);for(let t=0;t<28;t++)d[t]=a[t],a[t]=a[t+4];for(let t=0;t<4;t++)this.cmd(rt.move,r[t],200+7*(t+10),30),a[t+28]=0,this.cmd(rt.createLabel,o[t],0,200+7*(t+28),10,0),d[t]&&(a[t+10]=1-a[t+10]);this.cmd(rt.createRectangle,m,"",224,0,200,42,"left","bottom"),this.cmd(rt.createLabel,c,"XOR",200,30,0),this.cmd(rt.step);for(let t=0;t<32;t++)this.cmd(rt.createLabel,h[t],a[t],200+7*t,50,0);this.cmd(rt.step),this.cmd(rt.delete,c),this.cmd(rt.delete,m);for(let t=0;t<32;t++)this.cmd(rt.delete,r[t]),this.cmd(rt.move,h[t],200+7*t,10);for(let t=0;t<4;t++)this.cmd(rt.delete,o[t]);this.cmd(rt.step);for(let t=0;t<32;t++)this.cmd(rt.delete,h[t])}else for(let t=0;t<32;t++)this.cmd(rt.delete,r[t])}this.cmd(rt.delete,i);for(let t=0;t<32;t++)this.cmd(rt.createLabel,h[t],a[t],200+7*t,10,0);this.currHash=0;for(let t=0;t<32;t++)this.currHash=2*this.currHash+a[t];this.cmd(rt.createLabel,i," = "+String(this.currHash),424,10,0),this.cmd(rt.step);for(let t=0;t<32;t++)this.cmd(rt.delete,h[t]);const g=this.nextIndex++;this.cmd(rt.setText,i,String(this.currHash)+" % "+String(this.table_size)+" = ");const u=this.currHash%this.table_size;this.cmd(rt.createLabel,g,u,529,10,0),this.cmd(rt.step);const p=this.nextIndex++;return this.cmd(rt.createHighlightCircle,p,"#0000FF",530,25),this.cmd(rt.move,p,this.indexXPos[u],this.indexYPos[u]),this.cmd(rt.step),this.cmd(rt.delete,p),this.cmd(rt.delete,i),this.cmd(rt.delete,g),u}}resetAll(){return this.keyField.value="",this.valueField.value="",this.deleteField.value="",this.findField.value="",[]}insertCallback(){const t=this.keyField.value,i=this.valueField.value;""!==t&&""!==i&&(this.keyField.value="",this.valueField.value="",this.implementAction(this.insertElement.bind(this),t,i))}deleteCallback(){const t=this.deleteField.value;""!==t&&(this.deleteField.value="",this.implementAction(this.deleteElement.bind(this),t))}findCallback(){const t=this.findField.value;""!==t&&(this.findField.value="",this.implementAction(this.findElement.bind(this),t))}loadFactorCallBack(){if(""!==this.loadField.value){const t=this.loadField.value/100;this.loadField.value="",this.implementAction(this.changeLoadFactor.bind(this),t)}}reset(){this.hashIntegerButton.checked=!0}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}class Gt{constructor(t,i){this.key=t,this.val=i,this.elem=`<${t}, ${i}>`}}let Yt=!0;var Ut=class{constructor(){this.backingArray=[]}enqueue(t,i,e){this.backingArray.push([t,i,e]),this.backingArray.sort((t,i)=>t[2]!==i[2]?t[2]-i[2]:Array.isArray(t[0])?t[0][0]!==i[0][0]?t[0][0]-i[0][0]:t[0][1]-i[0][1]:t[0]-i[0])}dequeue(){const t=this.backingArray.shift();return[t[0],t[1]]}size(){return this.backingArray.length}getIDs(){return this.backingArray.map(t=>t[1])}};const $t=[0,450,250,650,150,350,550,750,100,200,300,400,500,600,700,800,75,125,175,225,275,325,375,425,475,525,575,625,675,725,775,825],Qt=[0,180,250,250,320,320,320,320,390,390,390,390,390,390,390,390,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460];class Jt{constructor(t,i,e,s,h){this.key=t,this.val=i,this.graphicID=e,this.x=s,this.y=h,this.next=null}}class Zt{constructor(t,i,e,s){this.data=t,this.x=e,this.y=s,this.graphicID=i,this.left=null,this.right=null,this.parent=null}isLeftChild(){return null==this.parent||this.parent.left===this}}const ti=[0,450,250,650,150,350,550,750,100,200,300,400,500,600,700,800,75,125,175,225,275,325,375,425,475,525,575,625,675,725,775,825],ii=[0,250,320,320,390,390,390,390,460,460,460,460,460,460,460,460,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530];const ei={ArrayList:["ArrayList",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1),i=bt(!0,t),e=bt(!0,t);ut("Add",i),this.addValueField=xt("Text","",i),this.addValueField.onkeydown=this.returnSubmit(this.addValueField,()=>this.addIndexCallback(),4),this.controls.push(this.addValueField),ut("at index",i),this.addIndexField=xt("Text","",i),this.addIndexField.onkeydown=this.returnSubmit(this.addIndexField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addIndexField),this.addFrontButton=xt("Button","Add to Front",e),this.addFrontButton.onclick=this.addFrontCallback.bind(this),this.controls.push(this.addFrontButton),this.addBackButton=xt("Button","Add to Back",e),this.addBackButton.onclick=()=>this.addBackCallback(),this.controls.push(this.addBackButton),ut("or",e),this.addIndexButton=xt("Button","Add at Index",e),this.addIndexButton.onclick=this.addIndexCallback.bind(this),this.controls.push(this.addIndexButton),Dt();const s=bt(!1),h=bt(!0,s),a=bt(!0,s);ut("Index",h),this.removeField=xt("Text","",h),this.removeField.onkeydown=this.returnSubmit(this.removeField,()=>this.removeIndexCallback(),4,!0),this.controls.push(this.removeField),this.removeIndexButton=xt("Button","Remove from Index",h),this.removeIndexButton.onclick=()=>this.removeIndexCallback(),this.controls.push(this.removeIndexButton),ut("or",a),this.removeFrontButton=xt("Button","Remove from Front",a),this.removeFrontButton.onclick=()=>this.removeFrontCallback(),this.controls.push(this.removeFrontButton),this.removeBackButton=xt("Button","Remove from Back",a),this.removeBackButton.onclick=()=>this.removeBackCallback(),this.controls.push(this.removeBackButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=()=>this.clearCallback(),this.controls.push(this.clearButton)}setup(){this.arrayID=new Array(7),this.arrayLabelID=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.arrayData=new Array(7),this.size=0,this.length=7,this.commands=[];for(let t=0;t<7;t++){const i=t%14*50+100,e=130*Math.floor(t/14)+150;this.cmd(rt.createRectangle,this.arrayID[t],"",50,50,i,e),this.cmd(rt.createLabel,this.arrayLabelID[t],t,i,e+50),this.cmd(rt.setForegroundColor,this.arrayLabelID[t],"#0000FF")}this.highlight1ID=this.nextIndex++,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.size=0,this.length=7,this.arrayID=new Array(7),this.arrayLabelID=new Array(7),this.arrayData=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.highlight1ID=this.nextIndex++}addIndexCallback(){if(""!==this.addValueField.value&&""!==this.addIndexField.value&&!(this.length===this.size&&2*this.length>30)){const t=this.addValueField.value,i=this.addIndexField.value;i>=0&&i<=this.size&&(this.addValueField.value="",this.addIndexField.value="",this.size===this.length?this.implementAction(this.resize.bind(this),t,i):this.implementAction(this.add.bind(this),t,i))}}addFrontCallback(){if(""!==this.addValueField.value&&!(this.length===this.size&&2*this.length>30)){const t=this.addValueField.value;this.addValueField.value="",this.size===this.length?this.implementAction(this.resize.bind(this),t,0):this.implementAction(this.add.bind(this),t,0)}}addBackCallback(){if(""!==this.addValueField.value&&!(this.length===this.size&&2*this.length>30)){const t=this.addValueField.value;this.addValueField.value="",this.size===this.length?this.implementAction(this.resize.bind(this),t,this.size):this.implementAction(this.add.bind(this),t,this.size)}}removeIndexCallback(){if(""!==this.removeField.value){const t=this.removeField.value;t>=0&&t<this.size&&(this.removeField.value="",this.implementAction(this.remove.bind(this),t))}}removeFrontCallback(){this.size>0&&this.implementAction(this.remove.bind(this),0)}removeBackCallback(){this.size>0&&this.implementAction(this.remove.bind(this),this.size-1)}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){return this.commands=[],this.clearAll(),this.commands}add(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++;this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.step);for(let n=this.size;n>=i;n--)this.arrayData[n+1]=this.arrayData[n];if(this.arrayData[i]=t,this.arrayMoveID=new Array(this.size),i!==this.size){for(let t=this.size-1;t>=i;t--){const i=t%14*50+100,e=130*Math.floor(t/14)+150;this.arrayMoveID[t]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[t],this.arrayData[t+1],i,e),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.move,this.arrayMoveID[t],i+50,e)}this.cmd(rt.step);for(let t=this.size-1;t>=i;t--)this.cmd(rt.setText,this.arrayID[t+1],this.arrayData[t+1]),this.cmd(rt.delete,this.arrayMoveID[t]);this.cmd(rt.step)}this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",120,30),this.cmd(rt.step);const h=parseInt(i)%14*50+100,a=130*Math.floor(parseInt(i)/14)+150;return this.cmd(rt.move,this.highlight1ID,h,a),this.cmd(rt.move,s,h,a),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[i],t),this.cmd(rt.delete,s),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.step),this.cmd(rt.delete,e),this.cmd(rt.step),this.nextIndex=null!=i?this.nextIndex-(this.size-i)-2:this.nextIndex-2,this.size=this.size+1,this.commands}remove(t){this.commands=[],t=parseInt(t);const i=this.nextIndex++,e=t%14*50+100,s=130*Math.floor(t/14)+150;this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",e,s),this.cmd(rt.createLabel,i,this.arrayData[t],e,s),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.move,this.highlight1ID,e,s-100),this.cmd(rt.move,i,e,s-100),this.cmd(rt.step),this.cmd(rt.delete,i),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.step);for(let h=t;h<this.size;h++)this.arrayData[h]=this.arrayData[h+1];this.arrayData[this.size]=null,this.arrayMoveID=new Array(this.size);for(let h=t+1;h<this.size;h++){const t=h%14*50+100,i=130*Math.floor(h/14)+150;this.arrayMoveID[h]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[h],this.arrayData[h-1],t,i),this.cmd(rt.setText,this.arrayID[h],""),this.cmd(rt.move,this.arrayMoveID[h],t-50,i)}this.cmd(rt.step);for(let h=t+1;h<this.size;h++)this.cmd(rt.setText,this.arrayID[h-1],this.arrayData[h-1]),this.cmd(rt.delete,this.arrayMoveID[h]);return this.cmd(rt.step),this.nextIndex=null!=t?this.nextIndex-(this.size-t):this.nextIndex-2,this.size=this.size-1,this.commands}resize(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++,h=this.nextIndex++;this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.createLabel,h,"(Resize Required)",60,60),this.cmd(rt.step),this.arrayIDNew=new Array(2*this.size),this.arrayLabelIDNew=new Array(2*this.size),this.arrayDataNew=new Array(2*this.size),this.length=2*this.length;for(let l=0;l<2*this.size;l++)this.arrayIDNew[l]=this.nextIndex++,this.arrayLabelIDNew[l]=this.nextIndex++,l<i?this.arrayDataNew[l]=this.arrayData[l]:l>i&&l<=this.size&&(this.arrayDataNew[l]=this.arrayData[l-1]);this.arrayDataNew[i]=t,this.highlight1ID=this.nextIndex++;for(let l=0;l<2*this.size;l++){const t=l%14*50+100,i=130*Math.floor(l/14)+280;this.cmd(rt.createRectangle,this.arrayIDNew[l],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelIDNew[l],l,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelIDNew[l],"#0000FF")}this.cmd(rt.step),this.arrayMoveID=new Array(this.size);for(let l=0;l<i;l++){const t=l%14*50+100,i=130*Math.floor(l/14)+150,e=l%14*50+100,s=130*Math.floor(l/14)+280;this.arrayMoveID[l]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[l],this.arrayData[l],t,i),this.cmd(rt.move,this.arrayMoveID[l],e,s)}this.cmd(rt.step);for(let l=0;l<i;l++)this.cmd(rt.delete,this.arrayMoveID[l]),this.cmd(rt.setText,this.arrayIDNew[l],this.arrayData[l]);this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",120,30),this.cmd(rt.step);const a=parseInt(i)%14*50+100,n=130*Math.floor(parseInt(i)/14)+280;this.cmd(rt.move,this.highlight1ID,a,n),this.cmd(rt.move,s,a,n),this.cmd(rt.step),this.cmd(rt.setText,this.arrayIDNew[i],t),this.cmd(rt.delete,s),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.step);for(let l=i;l<this.size;l++){const t=l%14*50+100,i=130*Math.floor(l/14)+150,e=l%13*50+100,s=130*Math.floor(l/13)+280;this.arrayMoveID[l]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[l],this.arrayData[l],t,i),this.cmd(rt.move,this.arrayMoveID[l],e+50,s)}this.cmd(rt.step);for(let l=i;l<=this.size;l++)l<this.size&&this.cmd(rt.delete,this.arrayMoveID[l]),this.cmd(rt.setText,this.arrayIDNew[l],this.arrayData[l-1]);this.cmd(rt.setText,this.arrayIDNew[i],t),this.cmd(rt.delete,e),this.cmd(rt.delete,h),this.cmd(rt.step);for(let l=0;l<this.size;l++)this.cmd(rt.delete,this.arrayID[l]),this.cmd(rt.delete,this.arrayLabelID[l]);for(let l=0;l<2*this.size;l++){const t=l%14*50+100,i=130*Math.floor(l/14)+150;this.cmd(rt.move,this.arrayIDNew[l],t,i),this.cmd(rt.move,this.arrayLabelIDNew[l],t,i+50)}return this.arrayID=this.arrayIDNew,this.arrayLabelID=this.arrayLabelIDNew,this.arrayData=this.arrayDataNew,null!=i&&(this.nextIndex=this.nextIndex-this.size),this.size=this.size+1,this.commands}clearAll(){this.commands=[];for(let t=0;t<this.size;t++)this.cmd(rt.setText,this.arrayID[t],""),this.arrayData[t]=null;return this.size=0,this.commands}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],LinkedList:["Singly LinkedList",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[];const t=bt(!1),i=bt(!0,t),e=bt(!0,t);ut("Add",i),this.addValueField=xt("Text","",i),this.addValueField.onkeydown=this.returnSubmit(this.addValueField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addValueField),ut("at index",i),this.addIndexField=xt("Text","",i),this.addIndexField.onkeydown=this.returnSubmit(this.addIndexField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addIndexField),this.addFrontButton=xt("Button","Add to Front",e),this.addFrontButton.onclick=this.addFrontCallback.bind(this),this.controls.push(this.addFrontButton),this.addBackButton=xt("Button","Add to Back",e),this.addBackButton.onclick=()=>this.addBackCallback(),this.controls.push(this.addBackButton),ut("or",e),this.addIndexButton=xt("Button","Add at Index",e),this.addIndexButton.onclick=this.addIndexCallback.bind(this),this.controls.push(this.addIndexButton),Dt();const s=bt(!1),h=bt(!0,s),a=bt(!0,s);ut("Index",h),this.removeField=xt("Text","",h),this.removeField.onkeydown=this.returnSubmit(this.removeField,()=>this.removeIndexCallback(),4,!0),this.controls.push(this.removeField),this.removeIndexButton=xt("Button","Remove from Index",h),this.removeIndexButton.onclick=()=>this.removeIndexCallback(),this.controls.push(this.removeIndexButton),ut("or",a),this.removeFrontButton=xt("Button","Remove from Front",a),this.removeFrontButton.onclick=()=>this.removeFrontCallback(),this.controls.push(this.removeFrontButton),this.removeBackButton=xt("Button","Remove from Back",a),this.removeBackButton.onclick=()=>this.removeBackCallback(),this.controls.push(this.removeBackButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=()=>this.clearCallback(),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(32),this.topID=this.nextIndex++,this.topLabelID=this.nextIndex++,this.arrayData=new Array(32),this.size=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.cmd(rt.createLabel,this.topLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.topID,"",30,30,180,100),this.cmd(rt.setNull,this.topID,1),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.size=0,this.nextIndex=this.initialIndex}addIndexCallback(){if(""!==this.addValueField.value&&""!==this.addIndexField.value){const t=parseInt(this.addValueField.value),i=parseInt(this.addIndexField.value);i>=0&&i<=this.size&&(this.addValueField.value="",this.addIndexField.value="",this.implementAction(this.add.bind(this),t,i))}}addFrontCallback(){if(""!==this.addValueField.value){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,0)}}addBackCallback(){if(""!==this.addValueField.value){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,this.size)}}removeIndexCallback(){if(""!==this.removeField.value){const t=this.removeField.value;t>=0&&t<this.size&&(this.removeField.value="",this.implementAction(this.remove.bind(this),t))}}removeFrontCallback(){this.size>0&&this.implementAction(this.remove.bind(this),0)}removeBackCallback(){this.size>0&&this.implementAction(this.remove.bind(this),this.size-1)}clearCallback(){this.implementAction(this.clearAll.bind(this))}traverse(t){for(let i=0;i<=t;i++)this.cmd(rt.step),this.cmd(rt.setHighlight,this.linkedListElemID[i],1),i>0&&this.cmd(rt.setHighlight,this.linkedListElemID[i-1],0);this.cmd(rt.step)}add(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++;for(let h=this.size-1;h>=i;h--)this.arrayData[h+1]=this.arrayData[h],this.linkedListElemID[h+1]=this.linkedListElemID[h];return this.arrayData[i]=t,this.linkedListElemID[i]=this.nextIndex++,this.cmd(rt.setText,this.leftoverLabelID,""),this.traverse(i-1),this.cmd(rt.createLinkedListNode,this.linkedListElemID[i],"",70,30,200,50,.25,0,1),this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.step),this.cmd(rt.move,s,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[i],t),this.cmd(rt.delete,s),i===this.size&&this.cmd(rt.setNull,this.linkedListElemID[i],1),0!==this.size?0===i?(this.cmd(rt.disconnect,this.topID,this.linkedListElemID[i+1]),this.cmd(rt.connect,this.topID,this.linkedListElemID[i]),this.cmd(rt.connect,this.linkedListElemID[i],this.linkedListElemID[i+1])):i===this.size?(this.cmd(rt.setNull,this.linkedListElemID[i-1],0),this.cmd(rt.connect,this.linkedListElemID[i-1],this.linkedListElemID[i])):(this.cmd(rt.disconnect,this.linkedListElemID[i-1],this.linkedListElemID[i+1]),this.cmd(rt.connect,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connect,this.linkedListElemID[i],this.linkedListElemID[i+1])):this.cmd(rt.connect,this.topID,this.linkedListElemID[0]),this.cmd(rt.setHighlight,this.linkedListElemID[i-1],0),this.cmd(rt.step),this.size=this.size+1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.step),this.commands}remove(t){this.commands=[],t=parseInt(t);const i=this.nextIndex++,e=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),this.traverse(t-1);const s=100+100*t;if(this.cmd(rt.createLabel,i,"Removing Value: ",50,30),this.cmd(rt.createLabel,e,this.arrayData[t],s,200),this.cmd(rt.move,e,120,30),this.cmd(rt.step),1!==this.size)if(0===t)this.cmd(rt.disconnect,this.topID,this.linkedListElemID[t]),this.cmd(rt.connect,this.topID,this.linkedListElemID[t+1]);else if(t===this.size-1)this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.setNull,this.linkedListElemID[t-1],1);else{const i=t%8*100+100,e=140;this.cmd(rt.move,this.linkedListElemID[t],i,e),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.connect,this.linkedListElemID[t-1],this.linkedListElemID[t+1])}this.cmd(rt.step),this.cmd(rt.delete,this.linkedListElemID[t]),this.cmd(rt.setHighlight,this.linkedListElemID[t-1],0);for(let h=t;h<this.size;h++)this.arrayData[h]=this.arrayData[h+1],this.linkedListElemID[h]=this.linkedListElemID[h+1];return this.size=this.size-1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.delete,i),this.commands}resetNodePositions(){for(let t=0;t<this.size;t++){const i=t%8*100+100,e=100*Math.floor(t/8)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}clearAll(){this.commands=[];for(let t=0;t<this.size;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.size=0,this.commands}}],DoublyLinkedList:["Doubly LinkedList",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.tail_pos_y=e-30,this.tail_label_y=this.tail_pos_y,this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[];const t=bt(!1),i=bt(!0,t),e=bt(!0,t);ut("Add",i),this.addValueField=xt("Text","",i),this.addValueField.onkeydown=this.returnSubmit(this.addValueField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addValueField),ut("at index",i),this.addIndexField=xt("Text","",i),this.addIndexField.onkeydown=this.returnSubmit(this.addIndexField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addIndexField),this.addFrontButton=xt("Button","Add to Front",e),this.addFrontButton.onclick=this.addFrontCallback.bind(this),this.controls.push(this.addFrontButton),this.addBackButton=xt("Button","Add to Back",e),this.addBackButton.onclick=()=>this.addBackCallback(),this.controls.push(this.addBackButton),ut("or",e),this.addIndexButton=xt("Button","Add at Index",e),this.addIndexButton.onclick=this.addIndexCallback.bind(this),this.controls.push(this.addIndexButton),Dt();const s=bt(!1),h=bt(!0,s),a=bt(!0,s);ut("Index",h),this.removeField=xt("Text","",h),this.removeField.onkeydown=this.returnSubmit(this.removeField,()=>this.removeIndexCallback(),4,!0),this.controls.push(this.removeField),this.removeIndexButton=xt("Button","Remove from Index",h),this.removeIndexButton.onclick=()=>this.removeIndexCallback(),this.controls.push(this.removeIndexButton),ut("or",a),this.removeFrontButton=xt("Button","Remove from Front",a),this.removeFrontButton.onclick=()=>this.removeFrontCallback(),this.controls.push(this.removeFrontButton),this.removeBackButton=xt("Button","Remove from Back",a),this.removeBackButton.onclick=()=>this.removeBackCallback(),this.controls.push(this.removeBackButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=()=>this.clearCallback(),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(32),this.headID=this.nextIndex++,this.headLabelID=this.nextIndex++,this.tailID=this.nextIndex++,this.tailLabelID=this.nextIndex++,this.arrayData=new Array(32),this.size=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.headLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.headID,"",30,30,180,100),this.cmd(rt.createLabel,this.tailLabelID,"Tail",130,this.tail_label_y),this.cmd(rt.createRectangle,this.tailID,"",30,30,180,this.tail_pos_y),this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.size=0,this.nextIndex=this.initialIndex}addIndexCallback(){if(""!==this.addValueField.value&&""!==this.addIndexField.value){const t=parseInt(this.addValueField.value),i=parseInt(this.addIndexField.value);i>=0&&i<=this.size&&(this.addValueField.value="",this.addIndexField.value="",this.implementAction(this.add.bind(this),t,i))}}addFrontCallback(){if(""!==this.addValueField.value){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,0)}}addBackCallback(){if(""!==this.addValueField.value){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,this.size)}}removeIndexCallback(){if(""!==this.removeField.value){const t=this.removeField.value;t>=0&&t<this.size&&(this.removeField.value="",this.implementAction(this.remove.bind(this),t))}}removeFrontCallback(){this.size>0&&this.implementAction(this.remove.bind(this),0)}removeBackCallback(){this.size>0&&this.implementAction(this.remove.bind(this),this.size-1)}clearCallback(){this.implementAction(this.clearAll.bind(this))}traverse(t){if(t<Math.floor(this.size/2)){for(let i=0;i<=t;i++)this.cmd(rt.step),this.cmd(rt.setHighlight,this.linkedListElemID[i],1),i>0&&this.cmd(rt.setHighlight,this.linkedListElemID[i-1],0);this.cmd(rt.step)}else{for(let i=this.size-1;i>=t;i--)this.cmd(rt.step),this.cmd(rt.setHighlight,this.linkedListElemID[i],1),i<this.size&&this.cmd(rt.setHighlight,this.linkedListElemID[i+1],0);this.cmd(rt.step)}}add(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++,h=i<Math.floor(this.size/2)?i-1:i;i>0&&i<this.size&&this.traverse(h);for(let a=this.size-1;a>=i;a--)this.arrayData[a+1]=this.arrayData[a],this.linkedListElemID[a+1]=this.linkedListElemID[a];return this.arrayData[i]=t,this.linkedListElemID[i]=this.nextIndex++,this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createDoublyLinkedListNode,this.linkedListElemID[i],"",100,30,200,50),this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.step),this.cmd(rt.move,s,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[i],t),this.cmd(rt.delete,s),0===i&&(this.cmd(rt.setPrevNull,this.linkedListElemID[i],1),this.cmd(rt.connect,this.headID,this.linkedListElemID[i])),i===this.size&&(this.cmd(rt.setNextNull,this.linkedListElemID[i],1),this.cmd(rt.connect,this.tailID,this.linkedListElemID[i])),0!==this.size&&(0===i?(this.cmd(rt.setPrevNull,this.linkedListElemID[i+1],0),this.cmd(rt.connectNext,this.linkedListElemID[i],this.linkedListElemID[i+1]),this.cmd(rt.connectPrev,this.linkedListElemID[i+1],this.linkedListElemID[i]),this.cmd(rt.disconnect,this.headID,this.linkedListElemID[i+1])):i===this.size?(this.cmd(rt.setNextNull,this.linkedListElemID[i-1],0),this.cmd(rt.connectNext,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connectPrev,this.linkedListElemID[i],this.linkedListElemID[i-1]),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[i-1])):(this.cmd(rt.disconnect,this.linkedListElemID[i-1],this.linkedListElemID[i+1]),this.cmd(rt.disconnect,this.linkedListElemID[i+1],this.linkedListElemID[i-1]),this.cmd(rt.connectNext,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connectPrev,this.linkedListElemID[i],this.linkedListElemID[i-1]),this.cmd(rt.connectNext,this.linkedListElemID[i],this.linkedListElemID[i+1]),this.cmd(rt.connectPrev,this.linkedListElemID[i+1],this.linkedListElemID[i]))),this.cmd(rt.setHighlight,this.linkedListElemID[i<Math.floor(this.size/2)?h:h+1],0),this.cmd(rt.step),this.size=this.size+1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.step),this.commands}remove(t){this.commands=[],t=parseInt(t);const i=this.nextIndex++,e=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),t>0&&t<this.size-1&&this.traverse(t);const s=100+150*t;if(this.cmd(rt.createLabel,i,"Removing Value: ",50,30),this.cmd(rt.createLabel,e,this.arrayData[t],s,200),this.cmd(rt.move,e,120,30),this.cmd(rt.step),1!==this.size)if(0===t)this.cmd(rt.disconnect,this.linkedListElemID[t+1],this.linkedListElemID[t]),this.cmd(rt.setPrevNull,this.linkedListElemID[t+1],1),this.cmd(rt.disconnect,this.headID,this.linkedListElemID[t]),this.cmd(rt.connect,this.headID,this.linkedListElemID[t+1]);else if(t===this.size-1)this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.setNextNull,this.linkedListElemID[t-1],1),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[t]),this.cmd(rt.connect,this.tailID,this.linkedListElemID[t-1]);else{const i=t%8*150+100,e=140;this.cmd(rt.move,this.linkedListElemID[t],i,e),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.disconnect,this.linkedListElemID[t+1],this.linkedListElemID[t]),this.cmd(rt.connectNext,this.linkedListElemID[t-1],this.linkedListElemID[t+1]),this.cmd(rt.connectPrev,this.linkedListElemID[t+1],this.linkedListElemID[t-1])}else this.cmd(rt.disconnect,this.headID,this.linkedListElemID[t]),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[t]);this.cmd(rt.step),this.cmd(rt.delete,this.linkedListElemID[t]);for(let h=t;h<this.size;h++)this.arrayData[h]=this.arrayData[h+1],this.linkedListElemID[h]=this.linkedListElemID[h+1];return this.size=this.size-1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.delete,i),this.commands}resetNodePositions(){for(let t=0;t<this.size;t++){const i=t%8*150+100,e=100*Math.floor(t/8)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}clearAll(){this.commands=[];for(let t=0;t<this.size;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.size=0,this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.commands}}],CircularlyLinkedList:["Circularly LinkedList",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[];const t=bt(!1),i=bt(!0,t),e=bt(!0,t);ut("Add",i),this.addValueField=xt("Text","",i),this.addValueField.onkeydown=this.returnSubmit(this.addValueField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addValueField),ut("at index",i),this.addIndexField=xt("Text","",i),this.addIndexField.onkeydown=this.returnSubmit(this.addIndexField,()=>this.addIndexCallback(),4,!0),this.controls.push(this.addIndexField),this.addFrontButton=xt("Button","Add to Front",e),this.addFrontButton.onclick=this.addFrontCallback.bind(this),this.controls.push(this.addFrontButton),this.addBackButton=xt("Button","Add to Back",e),this.addBackButton.onclick=()=>this.addBackCallback(),this.controls.push(this.addBackButton),ut("or",e),this.addIndexButton=xt("Button","Add at Index",e),this.addIndexButton.onclick=this.addIndexCallback.bind(this),this.controls.push(this.addIndexButton),Dt();const s=bt(!1),h=bt(!0,s),a=bt(!0,s);ut("Index",h),this.removeField=xt("Text","",h),this.removeField.onkeydown=this.returnSubmit(this.removeField,()=>this.removeIndexCallback(),4,!0),this.controls.push(this.removeField),this.removeIndexButton=xt("Button","Remove from Index",h),this.removeIndexButton.onclick=()=>this.removeIndexCallback(),this.controls.push(this.removeIndexButton),ut("or",a),this.removeFrontButton=xt("Button","Remove from Front",a),this.removeFrontButton.onclick=()=>this.removeFrontCallback(),this.controls.push(this.removeFrontButton),this.removeBackButton=xt("Button","Remove from Back",a),this.removeBackButton.onclick=()=>this.removeBackCallback(),this.controls.push(this.removeBackButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=()=>this.clearCallback(),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(9),this.headID=this.nextIndex++,this.headLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.headLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.headID,"",30,30,180,100),this.cmd(rt.setNull,this.headID,1),this.arrayData=new Array(9),this.size=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.size=0,this.nextIndex=this.initialIndex}addIndexCallback(){if(""!==this.addValueField.value&&""!==this.addIndexField.value&&this.size<9){const t=parseInt(this.addValueField.value),i=parseInt(this.addIndexField.value);i>=0&&i<=this.size&&(this.addValueField.value="",this.addIndexField.value="",this.implementAction(this.add.bind(this),t,i))}}addFrontCallback(){if(""!==this.addValueField.value&&this.size<9){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,0)}}addBackCallback(){if(""!==this.addValueField.value&&this.size<9){const t=parseInt(this.addValueField.value);this.addValueField.value="",this.implementAction(this.add.bind(this),t,this.size)}}removeIndexCallback(){if(""!==this.removeField.value){const t=this.removeField.value;t>=0&&t<this.size&&(this.removeField.value="",this.implementAction(this.remove.bind(this),t))}}removeFrontCallback(){this.size>0&&this.implementAction(this.remove.bind(this),0)}removeBackCallback(){this.size>0&&this.implementAction(this.remove.bind(this),this.size-1)}clearCallback(){this.implementAction(this.clearAll.bind(this))}traverse(t){for(let i=0;i<=t;i++)this.cmd(rt.step),this.cmd(rt.setHighlight,this.linkedListElemID[i],1),i>0&&this.cmd(rt.setHighlight,this.linkedListElemID[i-1],0);this.cmd(rt.step)}add(t,i){this.commands=[],i<this.size&&this.traverse(i-1);const e=this.nextIndex++,s=this.nextIndex++;for(let h=this.size-1;h>=i;h--)this.arrayData[h+1]=this.arrayData[h];if(this.arrayData[i]=t,0===this.size||0!==i&&i!==this.size){for(let t=this.size-1;t>=i;t--)this.linkedListElemID[t+1]=this.linkedListElemID[t];this.linkedListElemID[i]=this.nextIndex++}else{for(let t=this.size-1;t>=1;t--)this.linkedListElemID[t+1]=this.linkedListElemID[t];this.linkedListElemID[1]=this.nextIndex++}if(this.cmd(rt.setText,this.leftoverLabelID,""),0===this.size||0!==i&&i!==this.size?this.cmd(rt.createCircularlyLinkedListNode,this.linkedListElemID[i],"",70,30,200,50):this.cmd(rt.createCircularlyLinkedListNode,this.linkedListElemID[1],"",70,30,200,50),this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.step),0===this.size)this.cmd(rt.move,s,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[0],t),this.cmd(rt.delete,s),this.cmd(rt.connectCurve,this.linkedListElemID[0],this.linkedListElemID[0],-.5),this.cmd(rt.connect,this.headID,this.linkedListElemID[0]),this.cmd(rt.step),this.size=this.size+1,this.resetNodePositions();else if(0===i||i===this.size){const e=this.nextIndex++,h=0===i?this.arrayData[1]:this.arrayData[0];if(this.cmd(rt.createLabel,e,h,100,200),this.cmd(rt.move,e,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[1],h),this.cmd(rt.delete,e),this.cmd(rt.step),this.cmd(rt.move,s,100,200),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[0],t),this.cmd(rt.delete,s),this.cmd(rt.step),1===this.size?(this.cmd(rt.disconnect,this.linkedListElemID[0],this.linkedListElemID[0]),this.cmd(rt.connect,this.linkedListElemID[0],this.linkedListElemID[1]),this.cmd(rt.connectCurve,this.linkedListElemID[1],this.linkedListElemID[0],-.5)):(this.cmd(rt.disconnect,this.linkedListElemID[0],this.linkedListElemID[2]),this.cmd(rt.connect,this.linkedListElemID[0],this.linkedListElemID[1]),this.cmd(rt.connect,this.linkedListElemID[1],this.linkedListElemID[2])),this.cmd(rt.step),this.size=this.size+1,this.cmd(rt.connect,this.headID,this.linkedListElemID[0]),this.resetNodePositions(),this.cmd(rt.step),i===this.size-1){let t;this.cmd(rt.disconnect,this.headID,this.linkedListElemID[0]);const i=this.linkedListElemID[0];for(t=0;t<this.size-1;t++)this.linkedListElemID[t]=this.linkedListElemID[t+1];this.linkedListElemID[this.size-1]=i;const e=(this.size-1)%9*100+100,s=100*Math.floor((this.size-1)/9)+200;this.cmd(rt.move,this.linkedListElemID[t],(100+e)/2,s+90),this.cmd(rt.connect,this.headID,this.linkedListElemID[0]),this.cmd(rt.step);for(let h=0;h<this.size-1;h++){const t=h%9*100+100,i=100*Math.floor(h/9)+200;this.cmd(rt.move,this.linkedListElemID[h],t,i)}this.cmd(rt.disconnect,this.linkedListElemID[this.size-2],this.linkedListElemID[this.size-1]),this.cmd(rt.connect,this.linkedListElemID[this.size-2],this.linkedListElemID[this.size-1]),this.cmd(rt.disconnect,this.linkedListElemID[this.size-1],this.linkedListElemID[0]),this.cmd(rt.connectCurve,this.linkedListElemID[this.size-1],this.linkedListElemID[0],-.5),this.cmd(rt.move,this.linkedListElemID[t],e,s),this.cmd(rt.step)}}else this.cmd(rt.move,s,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[i],t),this.cmd(rt.delete,s),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[i-1],this.linkedListElemID[i+1]),this.cmd(rt.connect,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connect,this.linkedListElemID[i],this.linkedListElemID[i+1]),this.size=this.size+1,this.resetNodePositions();return this.cmd(rt.setHighlight,this.linkedListElemID[i-1],0),this.cmd(rt.delete,e),this.cmd(rt.step),this.commands}remove(t){this.commands=[],t=parseInt(t);const i=this.nextIndex++,e=this.nextIndex++;this.traverse(t-1),this.cmd(rt.setText,this.leftoverLabelID,"");const s=100+100*t;if(this.cmd(rt.createLabel,i,"Removing Value: ",50,30),this.cmd(rt.createLabel,e,this.arrayData[t],s,200),this.cmd(rt.move,e,120,30),this.cmd(rt.step),1!==this.size){if(0===t){const t=this.nextIndex++,i=200,e=200;this.cmd(rt.createLabel,t,this.arrayData[1],i,e),this.cmd(rt.move,t,100,200),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[0],this.arrayData[1]),this.cmd(rt.delete,t),this.cmd(rt.step),this.cmd(rt.move,this.linkedListElemID[1],i,e-60),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[0],this.linkedListElemID[1]),2===this.size?this.cmd(rt.connectCurve,this.linkedListElemID[0],this.linkedListElemID[0],-.5):this.cmd(rt.connect,this.linkedListElemID[0],this.linkedListElemID[2])}else if(t===this.size-1)this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),2===this.size?this.cmd(rt.connectCurve,this.linkedListElemID[0],this.linkedListElemID[0],-.5):this.cmd(rt.connectCurve,this.linkedListElemID[t-1],this.linkedListElemID[0],-.5);else{const i=t%9*100+100,e=140;this.cmd(rt.move,this.linkedListElemID[t],i,e),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.connect,this.linkedListElemID[t-1],this.linkedListElemID[t+1])}this.cmd(rt.step);const i=0===t?1:t;this.cmd(rt.delete,this.linkedListElemID[i]);for(let t=i;t<this.size;t++)this.linkedListElemID[t]=this.linkedListElemID[t+1]}else this.cmd(rt.delete,this.linkedListElemID[0]),this.cmd(rt.setNull,this.headID,1);for(let h=t;h<this.size;h++)this.arrayData[h]=this.arrayData[h+1];return this.size=this.size-1,this.resetNodePositions(),this.cmd(rt.setHighlight,this.linkedListElemID[t-1],0),this.cmd(rt.delete,e),this.cmd(rt.delete,i),this.cmd(rt.step),this.commands}resetNodePositions(){for(let t=0;t<this.size;t++){const i=t%9*100+100,e=100*Math.floor(t/9)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}clearAll(){this.commands=[];for(let t=0;t<this.size;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.size=0,this.cmd(rt.setNull,this.headID,1),this.commands}}],StackArray:["Stack (Array)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.setup()}addControls(){this.controls=[],this.pushField=xt("Text",""),this.pushField.onkeydown=this.returnSubmit(this.pushField,this.pushCallback.bind(this),4),this.pushButton=xt("Button","Push"),this.pushButton.onclick=this.pushCallback.bind(this),this.controls.push(this.pushField),this.controls.push(this.pushButton),Dt(),this.popButton=xt("Button","Pop"),this.popButton.onclick=this.popCallback.bind(this),this.controls.push(this.popButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.nextIndex=0,this.arrayID=new Array(7),this.arrayLabelID=new Array(7),this.arrayData=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.topID=this.nextIndex++,this.topLabelID=this.nextIndex++,this.top=0,this.leftoverLabelID=this.nextIndex++,this.commands=[];for(let t=0;t<7;t++){const i=t%14*50+100,e=130*Math.floor(t/14)+200;this.cmd(rt.createRectangle,this.arrayID[t],"",50,50,i,e),this.cmd(rt.createLabel,this.arrayLabelID[t],t,i,e+50),this.cmd(rt.setForegroundColor,this.arrayLabelID[t],"#0000FF")}this.cmd(rt.createLabel,this.topLabelID,"Size",130,100),this.cmd(rt.createRectangle,this.topID,0,50,50,180,100),this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.highlight1ID=this.nextIndex++,this.highlight2ID=this.nextIndex++,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.top=0,this.nextIndex=0,this.length=7,this.arrayID=new Array(7),this.arrayLabelID=new Array(7),this.arrayData=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.nextIndex=this.nextIndex+3,this.highlight1ID=this.nextIndex++,this.highlight2ID=this.nextIndex++}pushCallback(){if(this.top<this.arrayData.length&&""!==this.pushField.value){const t=this.pushField.value;this.pushField.value="",this.implementAction(this.push.bind(this),t)}else if(this.top===this.arrayData.length&&2*this.top<30){const t=this.pushField.value;this.pushField.value="",this.implementAction(this.resize.bind(this),t)}}popCallback(){this.top>0&&this.implementAction(this.pop.bind(this))}clearCallback(){this.implementAction(this.clearData.bind(this))}clearData(){return this.commands=[],this.clearAll(),this.commands}push(t){this.commands=[],this.arrayData[this.top]=t;const i=this.nextIndex++,e=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,i,"Pushing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.step),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.step);const s=this.top%14*50+100,h=130*Math.floor(this.top/14)+200;return this.cmd(rt.move,this.highlight1ID,s,h+50),this.cmd(rt.step),this.cmd(rt.move,e,s,h),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[this.top],t),this.cmd(rt.delete,e),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.setHighlight,this.topID,1),this.cmd(rt.step),this.top=this.top+1,this.cmd(rt.setText,this.topID,this.top),this.cmd(rt.delete,i),this.cmd(rt.step),this.cmd(rt.setHighlight,this.topID,0),null!=t&&(this.nextIndex=this.nextIndex-2),this.commands}pop(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,t,"Popped Value: ",50,30),this.cmd(rt.setHighlight,this.topID,1),this.cmd(rt.step),this.top=this.top-1;const e=this.arrayData[this.top];this.arrayData[this.top]="",this.cmd(rt.setText,this.topID,this.top),this.cmd(rt.step),this.cmd(rt.setHighlight,this.topID,0),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.step);const s=this.top%14*50+100,h=130*Math.floor(this.top/14)+200;return this.cmd(rt.move,this.highlight1ID,s,h+50),this.cmd(rt.step),this.cmd(rt.createLabel,i,e,s,h),this.cmd(rt.setText,this.arrayID[this.top],""),this.cmd(rt.move,i,120,30),this.cmd(rt.step),this.cmd(rt.delete,t),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.setText,this.leftoverLabelID,"Popped Value: "+e),this.cmd(rt.delete,i),this.nextIndex=this.nextIndex-2,this.commands}resize(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++;this.cmd(rt.createLabel,i,"Pushing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.createLabel,s,"(Resize Required)",60,60),this.cmd(rt.step),this.arrayIDNew=new Array(2*this.top),this.arrayLabelIDNew=new Array(2*this.top),this.arrayDataNew=new Array(2*this.top);for(let n=0;n<2*this.top;n++)this.arrayIDNew[n]=this.nextIndex++,this.arrayLabelIDNew[n]=this.nextIndex++,n<this.top&&(this.arrayDataNew[n]=this.arrayData[n]);this.arrayDataNew[this.top]=t,this.highlight1ID=this.nextIndex++;for(let n=0;n<2*this.top;n++){const t=n%14*50+100,i=130*Math.floor(n/14)+300;this.cmd(rt.createRectangle,this.arrayIDNew[n],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelIDNew[n],n,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelIDNew[n],"#0000FF")}this.cmd(rt.step),this.arrayMoveID=new Array(this.top);for(let n=0;n<this.top;n++){const t=n%14*50+100,i=130*Math.floor(n/14)+200,e=n%14*50+100,s=130*Math.floor(n/14)+300;this.arrayMoveID[n]=this.nextIndex++;const h=this.arrayData[n];this.cmd(rt.createLabel,this.arrayMoveID[n],h,t,i),this.cmd(rt.move,this.arrayMoveID[n],e,s)}this.cmd(rt.step);for(let n=0;n<this.top;n++){const t=this.arrayData[n];this.cmd(rt.setText,this.arrayIDNew[n],t),this.cmd(rt.delete,this.arrayMoveID[n])}this.cmd(rt.step),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",120,30),this.cmd(rt.step);const h=parseInt(this.top)%14*50+100,a=130*Math.floor(parseInt(this.top)/14)+300;this.cmd(rt.move,this.highlight1ID,h,a),this.cmd(rt.move,e,h,a),this.cmd(rt.step),this.cmd(rt.setText,this.arrayIDNew[this.top],t),this.cmd(rt.delete,e),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.step);for(let n=0;n<this.top;n++)this.cmd(rt.delete,this.arrayID[n]),this.cmd(rt.delete,this.arrayLabelID[n]);for(let n=0;n<2*this.top;n++){const t=n%14*50+100,i=130*Math.floor(n/14)+200;this.cmd(rt.move,this.arrayIDNew[n],t,i),this.cmd(rt.move,this.arrayLabelIDNew[n],t,i+50)}return this.cmd(rt.step),this.cmd(rt.setHighlight,this.topID,1),this.cmd(rt.step),this.top=this.top+1,this.cmd(rt.setText,this.topID,this.top),this.cmd(rt.delete,i),this.cmd(rt.delete,s),this.cmd(rt.step),this.cmd(rt.setHighlight,this.topID,0),this.arrayID=this.arrayIDNew,this.arrayLabelID=this.arrayLabelIDNew,this.arrayData=this.arrayDataNew,this.nextIndex=this.nextIndex-this.top+1,this.commands}clearAll(){this.commands=[];for(let t=0;t<this.top;t++)this.cmd(rt.setText,this.arrayID[t],"");return this.top=0,this.cmd(rt.setText,this.topID,"0"),this.commands}}],StackLL:["Stack (LinkedList)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[],this.pushField=xt("Text",""),this.pushField.onkeydown=this.returnSubmit(this.pushField,this.pushCallback.bind(this),4),this.pushButton=xt("Button","Push"),this.pushButton.onclick=this.pushCallback.bind(this),this.controls.push(this.pushField),this.controls.push(this.pushButton),Dt(),this.popButton=xt("Button","Pop"),this.popButton.onclick=this.popCallback.bind(this),this.controls.push(this.popButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(32);for(let e=0;e<32;e++)this.linkedListElemID[e]=this.nextIndex++;let t,i;for(this.topID=this.nextIndex++,this.topLabelID=this.nextIndex++,this.arrayData=new Array(32),this.top=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.topLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.topID,"",30,30,180,100),this.cmd(rt.setNull,this.topID,1),this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.code=[["procedure push(data)"],["     head = new node(data, head)"],["end procedure"],[],["procedure pop()"],["     result = head.data"],["     head = head.next"],["end procedure"]],this.codeID=Array(this.code.length),t=0;t<this.code.length;t++)for(this.codeID[t]=new Array(this.code[t].length),i=0;i<this.code[t].length;i++)this.codeID[t][i]=this.nextIndex++,this.cmd(rt.createLabel,this.codeID[t][i],this.code[t][i],400,25+14*t,0),this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000"),i>0&&this.cmd(rt.alignRight,this.codeID[t][i],this.codeID[t][i-1]);this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}resetLinkedListPositions(){for(let t=this.top-1;t>=0;t--){const i=(this.top-1-t)%8*100+100,e=100*Math.floor((this.top-1-t)/8)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}reset(){this.top=0,this.nextIndex=this.initialIndex}pushCallback(){if(this.top<32&&""!==this.pushField.value){const t=this.pushField.value;this.pushField.value="",this.implementAction(this.push.bind(this),t)}}popCallback(){this.top>0&&this.implementAction(this.pop.bind(this))}clearCallback(){this.implementAction(this.clearAll.bind(this))}push(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++;return this.arrayData[this.top]=t,this.cmd(rt.setText,this.leftoverLabelID,""),this.highlight(1,0),this.cmd(rt.createLinkedListNode,this.linkedListElemID[this.top],"",70,30,250,50,.25,0,1),this.cmd(rt.createLabel,i,"Pushing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.step),this.cmd(rt.move,e,250,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[this.top],t),this.cmd(rt.delete,e),0===this.top?(this.cmd(rt.setNull,this.topID,0),this.cmd(rt.setNull,this.linkedListElemID[this.top],1)):(this.cmd(rt.connect,this.linkedListElemID[this.top],this.linkedListElemID[this.top-1]),this.cmd(rt.step),this.cmd(rt.disconnect,this.topID,this.linkedListElemID[this.top-1])),this.cmd(rt.connect,this.topID,this.linkedListElemID[this.top]),this.cmd(rt.step),this.top=this.top+1,this.resetLinkedListPositions(),this.cmd(rt.delete,i),this.cmd(rt.step),this.unhighlight(1,0),this.commands}pop(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++;return this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,t,"Popped Value: ",50,30),this.cmd(rt.createLabel,i,this.arrayData[this.top-1],100,200),this.highlight(5,0),this.cmd(rt.move,i,120,30),this.cmd(rt.step),this.cmd(rt.disconnect,this.topID,this.linkedListElemID[this.top-1]),this.unhighlight(5,0),1===this.top?this.cmd(rt.setNull,this.topID,1):this.cmd(rt.connect,this.topID,this.linkedListElemID[this.top-2]),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),this.cmd(rt.delete,this.linkedListElemID[this.top-1]),this.highlight(7,0),this.top=this.top-1,this.resetLinkedListPositions(),this.unhighlight(7,0),this.cmd(rt.delete,i),this.cmd(rt.delete,t),this.cmd(rt.setText,this.leftoverLabelID,"Popped Value: "+this.arrayData[this.top]),this.commands}highlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#FF0000")}unhighlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000")}clearAll(){this.commands=[];for(let t=0;t<this.top;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.top=0,this.cmd(rt.setNull,this.topID,1),this.commands}}],QueueArray:["Queue (Array)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[],this.enqueueField=xt("Text",""),this.enqueueField.onkeydown=this.returnSubmit(this.enqueueField,this.enqueueCallback.bind(this),4),this.enqueueButton=xt("Button","Enqueue"),this.enqueueButton.onclick=this.enqueueCallback.bind(this),this.controls.push(this.enqueueField),this.controls.push(this.enqueueButton),Dt(),this.dequeueButton=xt("Button","Dequeue"),this.dequeueButton.onclick=this.dequeueCallback.bind(this),this.controls.push(this.dequeueButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.nextIndex=0,this.arrayID=new Array(7),this.arrayLabelID=new Array(7);for(let e=0;e<7;e++)this.arrayID[e]=this.nextIndex++,this.arrayLabelID[e]=this.nextIndex++;this.frontID=this.nextIndex++;const t=this.nextIndex++;this.sizeID=this.nextIndex++;const i=this.nextIndex++;this.frontPointerID=this.nextIndex++,this.arrayData=new Array(7),this.front=0,this.size=0,this.leftoverLabelID=this.nextIndex++;for(let e=0;e<7;e++){const t=e%14*50+100,i=130*Math.floor(e/14)+200;this.cmd(rt.createRectangle,this.arrayID[e],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelID[e],e,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelID[e],"#0000FF")}this.cmd(rt.createLabel,t,"Front",130,100),this.cmd(rt.createRectangle,this.frontID,0,50,50,180,100),this.cmd(rt.createLabel,i,"Size",230,100),this.cmd(rt.createRectangle,this.sizeID,0,50,50,280,100),this.cmd(rt.createLabel,this.frontPointerID,"Front",100,160),this.cmd(rt.createLabel,this.leftoverLabelID,"",60,30),this.highlight1ID=this.nextIndex++,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.top=0,this.front=0,this.size=0,this.arrayID=new Array(7),this.arrayLabelID=new Array(7),this.arrayData=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.nextIndex=this.nextIndex+7}enqueueCallback(){if(this.size<this.arrayData.length&&""!==this.enqueueField.value){const t=this.enqueueField.value;this.enqueueField.value="",this.implementAction(this.enqueue.bind(this),t)}else if(this.size===this.arrayData.length&&""!==this.enqueueField&&2*this.size<30){const t=this.enqueueField.value;this.enqueueField.value="",this.implementAction(this.resize.bind(this),t)}}dequeueCallback(){0!==this.size&&this.implementAction(this.dequeue.bind(this))}clearCallback(){this.implementAction(this.clearAll.bind(this))}enqueue(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++,h=this.nextIndex++,a=(this.front+this.size)%this.arrayData.length;this.arrayData[a]=t,this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,i,"Enqueuing Value: ",60,30),this.cmd(rt.createLabel,e,t,130,30),this.cmd(rt.createLabel,s,"Enqueueing at (front + size) % array.length: ",129,50),this.cmd(rt.createLabel,h,a,260,50),this.cmd(rt.step),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",280,100),this.cmd(rt.step);const n=a%14*50+100,l=130*Math.floor(a/14)+200;return this.cmd(rt.move,this.highlight1ID,260,50),this.cmd(rt.step),this.cmd(rt.move,this.highlight1ID,n,l+50),this.cmd(rt.move,h,n,l+50),this.cmd(rt.step),this.cmd(rt.move,e,n,l),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[a],t),this.cmd(rt.delete,e),this.cmd(rt.delete,h),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.size=this.size+1,this.cmd(rt.setText,this.sizeID,this.size),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.delete,i),this.cmd(rt.delete,s),this.nextIndex=this.nextIndex-4,this.commands}dequeue(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,t,"Dequeued Value: ",60,30),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.step);const e=this.front%14*50+100,s=130*Math.floor(this.front/14)+200;this.cmd(rt.move,this.highlight1ID,e,s+50),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID);const h=this.arrayData[this.front];this.cmd(rt.createLabel,i,h,e,s),this.cmd(rt.setText,this.arrayID[this.front],""),this.cmd(rt.move,i,130,30),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,1),this.cmd(rt.setHighlight,this.frontPointerID,1),this.cmd(rt.step),this.front=(this.front+1)%this.arrayData.length;const a=this.front%14*50+100,n=130*Math.floor(this.front/14)+200-40;return this.cmd(rt.move,this.frontPointerID,a,n),this.cmd(rt.setText,this.frontID,this.front),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,0),this.cmd(rt.setHighlight,this.frontPointerID,0),this.cmd(rt.setText,this.leftoverLabelID,"Dequeued Value: "+h),this.cmd(rt.delete,t),this.cmd(rt.delete,i),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.size=this.size-1,this.cmd(rt.setText,this.sizeID,this.size),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.nextIndex=this.nextIndex-2,this.commands}resize(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++;this.arrayIDNew=new Array(2*this.size),this.arrayLabelIDNew=new Array(2*this.size),this.arrayDataNew=new Array(2*this.size);for(let d=0;d<2*this.size;d++)this.arrayIDNew[d]=this.nextIndex++,this.arrayLabelIDNew[d]=this.nextIndex++,d<this.size&&(this.arrayDataNew[d]=this.arrayData[(this.front+d)%this.arrayData.length]);this.arrayDataNew[this.size]=t,this.cmd(rt.createLabel,i,"Enqueuing Value: ",60,30),this.cmd(rt.createLabel,e,t,130,30),this.cmd(rt.createLabel,s,"(Resize Required)",60,60),this.cmd(rt.step);for(let d=0;d<2*this.size;d++){const t=d%14*50+100,i=130*Math.floor(d/14)+300;this.cmd(rt.createRectangle,this.arrayIDNew[d],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelIDNew[d],d,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelIDNew[d],"#0000FF")}this.cmd(rt.step),this.highlight1ID=this.nextIndex++,this.arrayMoveID=new Array(this.size);for(let d=0;d<this.size;d++){const t=(this.front+d)%this.arrayData.length%14*50+100,i=130*Math.floor((this.front+d)%this.arrayData.length/14)+200,e=d%14*50+100,s=130*Math.floor(d/14)+300;this.arrayMoveID[d]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[d],this.arrayData[(this.front+d)%this.arrayData.length],t,i),this.cmd(rt.move,this.arrayMoveID[d],e,s),this.cmd(rt.step)}this.cmd(rt.step);for(let d=0;d<this.size;d++)this.cmd(rt.delete,this.arrayMoveID[d]),this.cmd(rt.setText,this.arrayIDNew[d],this.arrayDataNew[d]);this.cmd(rt.step);for(let d=0;d<this.size;d++)this.cmd(rt.delete,this.arrayID[d]),this.cmd(rt.delete,this.arrayLabelID[d]);for(let d=0;d<2*this.size;d++){const t=d%14*50+100,i=130*Math.floor(d/14)+200;this.cmd(rt.move,this.arrayIDNew[d],t,i),this.cmd(rt.move,this.arrayLabelIDNew[d],t,i+50)}this.cmd(rt.step),this.front=0,this.arrayID=this.arrayIDNew,this.arrayLabelID=this.arrayLabelIDNew,this.arrayData=this.arrayDataNew,this.cmd(rt.setHighlight,this.frontID,1),this.cmd(rt.setHighlight,this.frontPointerID,1),this.cmd(rt.step),this.cmd(rt.setText,this.frontID,this.front),this.cmd(rt.move,this.frontPointerID,100,160),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,0),this.cmd(rt.setHighlight,this.frontPointerID,0);const h=(this.front+this.size)%this.arrayData.length,a=this.nextIndex++,n=this.nextIndex++;this.cmd(rt.delete,s),this.cmd(rt.delete,e);const l=this.nextIndex++;this.cmd(rt.createLabel,l,t,130,30),this.cmd(rt.createLabel,a,"Enqueueing at (front + size) % array.length: ",129,50),this.cmd(rt.createLabel,n,h,260,50),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",280,100),this.cmd(rt.step);const r=h%14*50+100,o=130*Math.floor(h/14)+200;return this.cmd(rt.move,this.highlight1ID,260,50),this.cmd(rt.step),this.cmd(rt.move,this.highlight1ID,r,o+50),this.cmd(rt.move,n,r,o+50),this.cmd(rt.step),this.cmd(rt.move,l,r,o),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[h],t),this.cmd(rt.delete,l),this.cmd(rt.delete,n),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.size=this.size+1,this.cmd(rt.setText,this.sizeID,this.size),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.delete,i),this.cmd(rt.delete,a),this.nextIndex=this.nextIndex-this.size,this.commands}clearAll(){this.commands=[],this.cmd(rt.setText,this.leftoverLabelID,"");for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.setText,this.arrayID[t],"");return this.front=0,this.size=0,this.cmd(rt.setText,this.frontID,"0"),this.cmd(rt.setText,this.sizeID,"0"),this.cmd(rt.setPosition,this.frontPointerID,100,160),this.commands}}],QueueLL:["Queue (LinkedList)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.tail_pos_y=e-30,this.tail_label_y=this.tail_pos_y,this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[],this.enqueueField=xt("Text",""),this.enqueueField.onkeydown=this.returnSubmit(this.enqueueField,this.enqueueCallback.bind(this),4),this.enqueueButton=xt("Button","Enqueue"),this.enqueueButton.onclick=this.enqueueCallback.bind(this),this.controls.push(this.enqueueField),this.controls.push(this.enqueueButton),Dt(),this.dequeueButton=xt("Button","Dequeue"),this.dequeueButton.onclick=this.dequeueCallback.bind(this),this.controls.push(this.dequeueButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(32);for(let t=0;t<32;t++)this.linkedListElemID[t]=this.nextIndex++;this.headID=this.nextIndex++,this.headLabelID=this.nextIndex++,this.tailID=this.nextIndex++,this.tailLabelID=this.nextIndex++,this.arrayData=new Array(32),this.top=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.headLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.headID,"",30,30,180,100),this.cmd(rt.setNull,this.headID,1),this.cmd(rt.createLabel,this.tailLabelID,"Tail",130,this.tail_label_y),this.cmd(rt.createRectangle,this.tailID,"",30,30,180,this.tail_pos_y),this.cmd(rt.setNull,this.tailID,1),this.cmd(rt.createLabel,this.leftoverLabelID,"",5,30,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}resetLinkedListPositions(){for(let t=this.top-1;t>=0;t--){const i=(this.top-1-t)%8*100+100,e=100*Math.floor((this.top-1-t)/8)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}reset(){this.top=0,this.nextIndex=this.initialIndex}enqueueCallback(){if(this.top<32&&""!==this.enqueueField.value){const t=this.enqueueField.value;this.enqueueField.value="",this.implementAction(this.enqueue.bind(this),t)}}dequeueCallback(){this.top>0&&this.implementAction(this.dequeue.bind(this))}clearCallback(){this.implementAction(this.clearAll.bind(this))}enqueue(t){this.commands=[],this.arrayData[this.top]=t,this.cmd(rt.setText,this.leftoverLabelID,"");for(let s=this.top;s>0;s--)this.arrayData[s]=this.arrayData[s-1],this.linkedListElemID[s]=this.linkedListElemID[s-1];this.arrayData[0]=t,this.linkedListElemID[0]=this.nextIndex++;const i=this.nextIndex++,e=this.nextIndex++;return this.cmd(rt.createLinkedListNode,this.linkedListElemID[0],"",70,30,250,50,.25,0,1),this.cmd(rt.setNull,this.linkedListElemID[0],1),this.cmd(rt.createLabel,i,"Enqueuing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.step),this.cmd(rt.move,e,250,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[0],t),this.cmd(rt.delete,e),0===this.top?(this.cmd(rt.setNull,this.headID,0),this.cmd(rt.setNull,this.tailID,0),this.cmd(rt.connect,this.headID,this.linkedListElemID[this.top]),this.cmd(rt.connect,this.tailID,this.linkedListElemID[this.top])):(this.cmd(rt.setNull,this.linkedListElemID[1],0),this.cmd(rt.connect,this.linkedListElemID[1],this.linkedListElemID[0]),this.cmd(rt.step),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[1])),this.cmd(rt.connect,this.tailID,this.linkedListElemID[0]),this.cmd(rt.step),this.top=this.top+1,this.resetLinkedListPositions(),this.cmd(rt.delete,i),this.cmd(rt.step),this.commands}dequeue(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++;return this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,t,"Dequeued Value: ",50,30),this.cmd(rt.createLabel,i,this.arrayData[this.top-1],100,200),this.cmd(rt.move,i,120,30),this.cmd(rt.step),this.cmd(rt.disconnect,this.headID,this.linkedListElemID[this.top-1]),1===this.top?(this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[this.top-1])):this.cmd(rt.connect,this.headID,this.linkedListElemID[this.top-2]),this.cmd(rt.step),this.cmd(rt.delete,this.linkedListElemID[this.top-1]),this.top=this.top-1,this.resetLinkedListPositions(),this.cmd(rt.delete,i),this.cmd(rt.delete,t),this.cmd(rt.setText,this.leftoverLabelID,"Dequeued Value: "+this.arrayData[this.top]),this.commands}clearAll(){this.commands=[];for(let t=0;t<this.top;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.top=0,this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.commands}}],DequeArray:["Deque (Array)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[],this.addField=xt("Text",""),this.addField.onkeydown=this.returnSubmit(this.addField,null,4),this.controls.push(this.addField),this.addFirstButton=xt("Button","Add First"),this.addFirstButton.onclick=this.addFirstCallBack.bind(this),this.controls.push(this.addFirstButton),ut("or"),this.addLastButton=xt("Button","Add Last"),this.addLastButton.onclick=this.addLastCallback.bind(this),this.controls.push(this.addLastButton),Dt(),this.removeFirstButton=xt("Button","Remove First"),this.removeFirstButton.onclick=this.removeFirstCallback.bind(this),this.controls.push(this.removeFirstButton),ut("or"),this.removeLastButton=xt("Button","Remove Last"),this.removeLastButton.onclick=this.removeLastCallback.bind(this),this.controls.push(this.removeLastButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.nextIndex=0,this.arrayID=new Array(7),this.arrayLabelID=new Array(7);for(let e=0;e<7;e++)this.arrayID[e]=this.nextIndex++,this.arrayLabelID[e]=this.nextIndex++;this.frontID=this.nextIndex++;const t=this.nextIndex++;this.frontPointerID=this.nextIndex++,this.sizeID=this.nextIndex++;const i=this.nextIndex++;this.arrayData=new Array(7),this.front=0,this.size=0,this.leftoverLabelID=this.nextIndex++;for(let e=0;e<7;e++){const t=e%14*50+100,i=130*Math.floor(e/14)+200;this.cmd(rt.createRectangle,this.arrayID[e],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelID[e],e,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelID[e],"#0000FF")}this.cmd(rt.createLabel,t,"Front",130,100),this.cmd(rt.createRectangle,this.frontID,0,50,50,180,100),this.cmd(rt.createLabel,i,"Size",230,100),this.cmd(rt.createRectangle,this.sizeID,0,50,50,280,100),this.cmd(rt.createLabel,this.frontPointerID,"Front",100,160),this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30,!1),this.highlight1ID=this.nextIndex++,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.top=0,this.front=0,this.size=0,this.nextIndex=0,this.arrayData=new Array(7),this.arrayID=new Array(7),this.arrayLabelID=new Array(7);for(let t=0;t<7;t++)this.arrayID[t]=this.nextIndex++,this.arrayLabelID[t]=this.nextIndex++;this.nextIndex=this.nextIndex+7}addLastCallback(){if(this.size<this.arrayData.length&&""!==this.addField.value){const t=this.addField.value;this.addField.value="",this.implementAction(this.addLast.bind(this),t)}else if(this.size===this.arrayData.length&&""!==this.addField.value&&2*this.size<30){const t=this.addField.value;this.addField.value="",this.implementAction(this.resize.bind(this),t,!1)}}removeFirstCallback(){0!==this.size&&this.implementAction(this.removeFirst.bind(this))}removeLastCallback(){0!==this.size&&this.implementAction(this.removeLast.bind(this))}addFirstCallBack(){if(this.size<this.arrayData.length&&""!==this.addField.value){const t=this.addField.value;this.addField.value="",this.implementAction(this.addFirst.bind(this),t)}else if(this.size===this.arrayData.length&&""!==this.addField.value&&2*this.size<30){const t=this.addField.value;this.addField.value="",this.implementAction(this.resize.bind(this),t,!0)}}clearCallback(){this.implementAction(this.clearAll.bind(this))}addLast(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++,s=(this.front+this.size)%this.arrayData.length;this.arrayData[s]=t,this.cmd(rt.setPosition,this.leftoverLabelID,150,30),this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createLabel,i,"Enqueuing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.step),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",280,100),this.cmd(rt.step),this.cmd(rt.setText,this.leftoverLabelID,`Adding ${t} to back at index (${this.front} + ${this.size}) % ${this.arrayData.length}`);const h=s%14*50+100,a=130*Math.floor(s/14)+200;return this.cmd(rt.move,this.highlight1ID,h,a+50),this.cmd(rt.step),this.cmd(rt.move,e,h,a),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[s],t),this.cmd(rt.delete,e),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.size=this.size+1,this.cmd(rt.setText,this.sizeID,this.size),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.delete,i),this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,50,30),this.nextIndex=this.nextIndex-2,this.commands}addFirst(t){this.commands=[];const i=this.nextIndex++,e=this.nextIndex++,s=(this.front-1+this.arrayData.length)%this.arrayData.length,h=s%14*50+100,a=130*Math.floor(s/14)+200;this.arrayData[s]=t,this.cmd(rt.createLabel,i,"Enqueuing Value: ",50,30),this.cmd(rt.createLabel,e,t,120,30),this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,150,30),this.cmd(rt.step),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.setText,this.leftoverLabelID,`Adding ${t} to front at index (${this.front} - 1) % ${this.arrayData.length}`),this.cmd(rt.step),this.cmd(rt.move,this.highlight1ID,50*this.front+100,a+50),this.cmd(rt.step),this.cmd(rt.move,this.highlight1ID,h,a+50),this.cmd(rt.step),this.cmd(rt.move,e,h,a),this.cmd(rt.step),this.cmd(rt.delete,e),this.front=s;const n=s%14*50+100,l=130*Math.floor(s/14)+200-40;return this.cmd(rt.setText,this.arrayID[s],t),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,1),this.cmd(rt.setHighlight,this.frontPointerID,1),this.cmd(rt.step),this.cmd(rt.move,this.frontPointerID,n,l),this.cmd(rt.setText,this.frontID,this.front),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,0),this.cmd(rt.setHighlight,this.frontPointerID,0),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.cmd(rt.setText,this.sizeID,this.size+1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.delete,i),this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,50,30),this.size++,this.nextIndex=this.nextIndex-2,this.commands}removeFirst(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,50,30),this.cmd(rt.createLabel,t,"removeFirst Value: ",50,30),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.step);const e=this.front%14*50+100,s=130*Math.floor(this.front/14)+200;this.cmd(rt.move,this.highlight1ID,e,s+50),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID);const h=this.arrayData[this.front];this.cmd(rt.createLabel,i,h,e,s),this.cmd(rt.setText,this.arrayID[this.front],""),this.cmd(rt.move,i,120,30),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,1),this.cmd(rt.setHighlight,this.frontPointerID,1),this.cmd(rt.step),this.front=(this.front+1)%this.arrayData.length;const a=this.front%14*50+100,n=130*Math.floor(this.front/14)+200-40;return this.cmd(rt.setText,this.frontID,this.front),this.cmd(rt.move,this.frontPointerID,a,n),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,0),this.cmd(rt.setHighlight,this.frontPointerID,0),this.cmd(rt.setText,this.leftoverLabelID,"removeFirst Value: "+h),this.cmd(rt.delete,t),this.cmd(rt.delete,i),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.size--,this.cmd(rt.setText,this.sizeID,this.size),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.step),this.cmd(rt.setText,this.leftoverLabelID,""),this.nextIndex=this.nextIndex-2,this.commands}removeLast(){this.commands=[];const t=this.nextIndex++,i=this.nextIndex++,e=(this.front+this.size-1+this.arrayData.length)%this.arrayData.length;this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,50,30),this.cmd(rt.createLabel,t,"Removed Value: ",50,30),this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100),this.cmd(rt.createHighlightCircle,this.highlight2ID,"#0000FF",280,100),this.cmd(rt.step);const s=e%14*50+100,h=130*Math.floor(e/14)+200;this.cmd(rt.move,this.highlight1ID,s,h+50),this.cmd(rt.move,this.highlight2ID,s,h+50),this.cmd(rt.step),this.cmd(rt.delete,this.highlight1ID),this.cmd(rt.delete,this.highlight2ID);const a=this.arrayData[e];return this.cmd(rt.createLabel,i,a,s,h),this.cmd(rt.setText,this.arrayID[e],""),this.cmd(rt.move,i,120,30),this.cmd(rt.step),this.cmd(rt.setText,this.leftoverLabelID,"Removed Value: "+a),this.cmd(rt.delete,t),this.cmd(rt.delete,i),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.cmd(rt.setText,this.sizeID,this.size-1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.step),this.cmd(rt.setText,this.leftoverLabelID,""),this.size--,this.nextIndex=this.nextIndex-2,this.commands}resize(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++,h=this.nextIndex++;this.arrayIDNew=new Array(2*this.size),this.arrayLabelIDNew=new Array(2*this.size),this.arrayDataNew=new Array(2*this.size);const a=i?1:0;for(let c=0;c<2*this.size;c++)this.arrayIDNew[c]=this.nextIndex++,this.arrayLabelIDNew[c]=this.nextIndex++,c<this.size&&(this.arrayDataNew[c+a]=this.arrayData[(this.front+c)%this.arrayData.length]);const n=i?": elements shifted by 1":"";this.cmd(rt.createLabel,e,"Enqueuing Value:",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.createLabel,h,`(Resize Required${n})`,i?160:60,60),this.cmd(rt.step);for(let c=0;c<2*this.size;c++){const t=c%14*50+100,i=130*Math.floor(c/14)+300;this.cmd(rt.createRectangle,this.arrayIDNew[c],"",50,50,t,i),this.cmd(rt.createLabel,this.arrayLabelIDNew[c],c,t,i+50),this.cmd(rt.setForegroundColor,this.arrayLabelIDNew[c],"#0000FF")}this.cmd(rt.step),this.highlight1ID=this.nextIndex++,this.arrayMoveID=new Array(this.size);for(let c=0;c<this.size;c++){const t=(this.front+c)%this.arrayData.length%14*50+100,i=130*Math.floor((this.front+c)%this.arrayData.length/14)+200,e=(c+a)%14*50+100,s=130*Math.floor((c+a)/14)+300;this.arrayMoveID[c]=this.nextIndex++,this.cmd(rt.createLabel,this.arrayMoveID[c],this.arrayData[(this.front+c)%this.arrayData.length],t,i),this.cmd(rt.move,this.arrayMoveID[c],e,s),this.cmd(rt.step)}for(let c=0;c<this.size;c++)this.cmd(rt.delete,this.arrayMoveID[c]),this.cmd(rt.setText,this.arrayIDNew[c+a],this.arrayDataNew[c+a]);this.cmd(rt.step);for(let c=0;c<this.size;c++)this.cmd(rt.delete,this.arrayID[c]),this.cmd(rt.delete,this.arrayLabelID[c]);for(let c=0;c<2*this.size;c++){const t=c%14*50+100,i=130*Math.floor(c/14)+200;this.cmd(rt.move,this.arrayIDNew[c],t,i),this.cmd(rt.move,this.arrayLabelIDNew[c],t,i+50)}this.cmd(rt.step),this.front=0,this.arrayID=this.arrayIDNew,this.arrayLabelID=this.arrayLabelIDNew,this.arrayData=this.arrayDataNew,this.cmd(rt.setHighlight,this.frontID,1),this.cmd(rt.setHighlight,this.frontPointerID,1),this.cmd(rt.step),this.cmd(rt.setText,this.frontID,this.front),this.cmd(rt.move,this.frontPointerID,100,160),this.cmd(rt.step),this.cmd(rt.setHighlight,this.frontID,0),this.cmd(rt.setHighlight,this.frontPointerID,0);const l=i?this.front:(this.front+this.size)%this.arrayDataNew.length;this.cmd(rt.delete,h),this.cmd(rt.delete,s);const r=this.nextIndex++;this.cmd(rt.createLabel,r,t,120,30),this.cmd(rt.step),i?this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",180,100):this.cmd(rt.createHighlightCircle,this.highlight1ID,"#0000FF",280,100),this.cmd(rt.step);const o=l%14*50+100,d=130*Math.floor(l/14)+200;return this.cmd(rt.move,this.highlight1ID,50*this.front+100,d+50),this.cmd(rt.step),this.cmd(rt.move,this.highlight1ID,o,d+50),this.cmd(rt.step),this.cmd(rt.move,r,o,d),this.cmd(rt.step),this.cmd(rt.delete,r),this.cmd(rt.delete,this.highlight1ID),this.arrayData[l]=t,this.cmd(rt.setText,this.arrayID[l],t),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,1),this.cmd(rt.step),this.cmd(rt.setText,this.sizeID,this.size+1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.sizeID,0),this.cmd(rt.delete,e),this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.setPosition,this.leftoverLabelID,50,30),this.size++,this.nextIndex=this.nextIndex-this.size,this.commands}clearAll(){this.commands=[],this.cmd(rt.setText,this.leftoverLabelID,"");for(let t=0;t<this.arrayData.length;t++)this.cmd(rt.setText,this.arrayID[t],"");return this.front=0,this.size=0,this.cmd(rt.setText,this.frontID,"0"),this.cmd(rt.setText,this.sizeID,"0"),this.cmd(rt.setPosition,this.frontPointerID,100,160),this.commands}}],DequeLL:["Deque (LinkedList)",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.commands=[],this.tail_pos_y=e-30,this.tail_label_y=this.tail_pos_y,this.setup(),this.initialIndex=this.nextIndex}addControls(){this.controls=[],this.addField=xt("Text",""),this.addField.onkeydown=this.returnSubmit(this.addField,null,4),this.controls.push(this.addField),this.addFirstButton=xt("Button","Add First"),this.addFirstButton.onclick=this.addFirstCallback.bind(this),this.controls.push(this.addFirstButton),ut("or"),this.addLastButton=xt("Button","Add Last"),this.addLastButton.onclick=this.addLastCallback.bind(this),this.controls.push(this.addLastButton),Dt(),this.removeFirstButton=xt("Button","Remove First"),this.removeFirstButton.onclick=this.removeFirstCallback.bind(this),this.controls.push(this.removeFirstButton),ut("or"),this.removeLastButton=xt("Button","Remove Last"),this.removeLastButton.onclick=this.removeLastCallback.bind(this),this.controls.push(this.removeLastButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.linkedListElemID=new Array(32),this.headID=this.nextIndex++,this.headLabelID=this.nextIndex++,this.tailID=this.nextIndex++,this.tailLabelID=this.nextIndex++,this.arrayData=new Array(32),this.size=0,this.leftoverLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.headLabelID,"Head",130,100),this.cmd(rt.createRectangle,this.headID,"",30,30,180,100),this.cmd(rt.createLabel,this.tailLabelID,"Tail",130,this.tail_label_y),this.cmd(rt.createRectangle,this.tailID,"",30,30,180,this.tail_pos_y),this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.cmd(rt.createLabel,this.leftoverLabelID,"",50,30),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.size=0,this.nextIndex=this.initialIndex}addFirstCallback(){if(""!==this.addField.value){const t=parseInt(this.addField.value);this.addField.value="",this.implementAction(this.add.bind(this),t,0)}}addLastCallback(){if(""!==this.addField.value){const t=parseInt(this.addField.value);this.addField.value="",this.implementAction(this.add.bind(this),t,this.size)}}removeFirstCallback(){this.size>0&&this.implementAction(this.remove.bind(this),0)}removeLastCallback(){this.size>0&&this.implementAction(this.remove.bind(this),this.size-1)}clearCallback(){this.implementAction(this.clearAll.bind(this))}add(t,i){this.commands=[];const e=this.nextIndex++,s=this.nextIndex++;for(let h=this.size-1;h>=i;h--)this.arrayData[h+1]=this.arrayData[h],this.linkedListElemID[h+1]=this.linkedListElemID[h];return this.arrayData[i]=t,this.linkedListElemID[i]=this.nextIndex++,this.cmd(rt.setText,this.leftoverLabelID,""),this.cmd(rt.createDoublyLinkedListNode,this.linkedListElemID[i],"",100,30,200,50,.25),this.cmd(rt.createLabel,e,"Adding Value: ",50,30),this.cmd(rt.createLabel,s,t,120,30),this.cmd(rt.step),this.cmd(rt.move,s,200,50),this.cmd(rt.step),this.cmd(rt.setText,this.linkedListElemID[i],t),this.cmd(rt.delete,s),0===i&&(this.cmd(rt.setPrevNull,this.linkedListElemID[i],1),this.cmd(rt.connect,this.headID,this.linkedListElemID[i])),i===this.size&&(this.cmd(rt.setNextNull,this.linkedListElemID[i],1),this.cmd(rt.connect,this.tailID,this.linkedListElemID[i])),0!==this.size&&(0===i?(this.cmd(rt.setPrevNull,this.linkedListElemID[i+1],0),this.cmd(rt.connectNext,this.linkedListElemID[i],this.linkedListElemID[i+1]),this.cmd(rt.connectPrev,this.linkedListElemID[i+1],this.linkedListElemID[i]),this.cmd(rt.disconnect,this.headID,this.linkedListElemID[i+1])):i===this.size?(this.cmd(rt.setNextNull,this.linkedListElemID[i-1],0),this.cmd(rt.connectNext,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connectPrev,this.linkedListElemID[i],this.linkedListElemID[i-1]),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[i-1])):(this.cmd(rt.disconnect,this.linkedListElemID[i-1],this.linkedListElemID[i+1]),this.cmd(rt.disconnect,this.linkedListElemID[i+1],this.linkedListElemID[i-1]),this.cmd(rt.connectNext,this.linkedListElemID[i-1],this.linkedListElemID[i]),this.cmd(rt.connectPrev,this.linkedListElemID[i],this.linkedListElemID[i-1]),this.cmd(rt.connectNext,this.linkedListElemID[i],this.linkedListElemID[i+1]),this.cmd(rt.connectPrev,this.linkedListElemID[i+1],this.linkedListElemID[i]))),this.cmd(rt.step),this.size=this.size+1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.step),this.commands}remove(t){this.commands=[],t=parseInt(t);const i=this.nextIndex++,e=this.nextIndex++;this.cmd(rt.setText,this.leftoverLabelID,"");const s=100+150*t;if(this.cmd(rt.createLabel,i,"Removing Value: ",50,30),this.cmd(rt.createLabel,e,this.arrayData[t],s,200),this.cmd(rt.move,e,120,30),this.cmd(rt.step),1!==this.size)if(0===t)this.cmd(rt.disconnect,this.linkedListElemID[t+1],this.linkedListElemID[t]),this.cmd(rt.setPrevNull,this.linkedListElemID[t+1],1),this.cmd(rt.disconnect,this.headID,this.linkedListElemID[t]),this.cmd(rt.connect,this.headID,this.linkedListElemID[t+1]);else if(t===this.size-1)this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.setNextNull,this.linkedListElemID[t-1],1),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[t]),this.cmd(rt.connect,this.tailID,this.linkedListElemID[t-1]);else{const i=t%8*150+100,e=140;this.cmd(rt.move,this.linkedListElemID[t],i,e),this.cmd(rt.step),this.cmd(rt.disconnect,this.linkedListElemID[t-1],this.linkedListElemID[t]),this.cmd(rt.disconnect,this.linkedListElemID[t+1],this.linkedListElemID[t]),this.cmd(rt.connectNext,this.linkedListElemID[t-1],this.linkedListElemID[t+1]),this.cmd(rt.connectPrev,this.linkedListElemID[t+1],this.linkedListElemID[t-1])}else this.cmd(rt.disconnect,this.headID,this.linkedListElemID[t]),this.cmd(rt.disconnect,this.tailID,this.linkedListElemID[t]);this.cmd(rt.step),this.cmd(rt.delete,this.linkedListElemID[t]);for(let h=t;h<this.size;h++)this.arrayData[h]=this.arrayData[h+1],this.linkedListElemID[h]=this.linkedListElemID[h+1];return this.size=this.size-1,this.resetNodePositions(),this.cmd(rt.delete,e),this.cmd(rt.delete,i),this.commands}resetNodePositions(){for(let t=0;t<this.size;t++){const i=t%8*150+100,e=100*Math.floor(t/8)+200;this.cmd(rt.move,this.linkedListElemID[t],i,e)}}clearAll(){this.commands=[];for(let t=0;t<this.size;t++)this.cmd(rt.delete,this.linkedListElemID[t]);return this.size=0,this.cmd(rt.setNull,this.headID,1),this.cmd(rt.setNull,this.tailID,1),this.commands}}],BST:["Binary Search Tree",Ot],Heap:["Heaps / PQs",class extends ft{constructor(t){super(t),this.addControls(),this.nextIndex=0,this.array_size=8,this.order="smaller",this.setup()}addControls(){this.controls=[],this.insertField=xt("Text",""),this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4,!0),this.controls.push(this.insertField),this.insertButton=xt("Button","Enqueue"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.removeButton=xt("Button","Dequeue"),this.removeButton.onclick=this.removeCallback.bind(this),this.controls.push(this.removeButton),Dt();const t=bt(!1);ut('Comma separated list (e.g. "3,1,2"). Max 31 elements & no elements > 999',t);const i=bt(!0,t);this.buildHeapField=xt("Text","",i),this.buildHeapField.onkeydown=this.returnSubmit(this.buildHeapField,this.buildHeapCallback.bind(this),60,!1),this.controls.push(this.buildHeapField),this.buildHeapButton=xt("Button","BuildHeap",i),this.buildHeapButton.onclick=this.buildHeapCallback.bind(this),this.controls.push(this.buildHeapButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const e=It(["MinHeap","MaxHeap"],"MinHeap/MaxHeap");this.minHeapButton=e[0],this.minHeapButton.onclick=this.minHeapCallback.bind(this),this.minHeapButton.checked=!0,this.maxHeapButton=e[1],this.maxHeapButton.onclick=this.maxHeapCallback.bind(this),this.isMinHeap=!0,this.controls.push(this.minHeapButton),this.controls.push(this.maxHeapButton)}createArray(){this.commands=[],this.arrayData=new Array(this.array_size),this.arrayLabels=new Array(this.array_size),this.arrayRects=new Array(this.array_size),this.circleObjs=new Array(this.array_size),this.arrayXPositions=new Array(this.array_size),this.currentHeapSize=0;for(let t=0;t<this.array_size;t++)this.arrayXPositions[t]=30+40*t,this.arrayLabels[t]=this.nextIndex++,this.arrayRects[t]=this.nextIndex++,this.circleObjs[t]=this.nextIndex++,this.cmd(rt.createRectangle,this.arrayRects[t],"",40,25,this.arrayXPositions[t],50),this.cmd(rt.createLabel,this.arrayLabels[t],t,this.arrayXPositions[t],75),this.cmd(rt.setForegroundColor,this.arrayLabels[t],"#0000FF");return this.cmd(rt.setText,this.arrayRects[0],"null"),this.commands}setup(){this.swapLabel1=this.nextIndex++,this.swapLabel2=this.nextIndex++,this.swapLabel3=this.nextIndex++,this.swapLabel4=this.nextIndex++,this.descriptLabel1=this.nextIndex++,this.descriptLabel2=this.nextIndex++,this.descriptLabel3=this.nextIndex++,this.resetIndex=this.nextIndex,this.createArray(),this.cmd(rt.createLabel,this.descriptLabel1,"",20,10,0),this.cmd(rt.createLabel,this.descriptLabel3,"",300,10,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}insertCallback(){const t=this.normalizeNumber(this.insertField.value,4);""!==t&&(this.insertField.value="",this.implementAction(this.insertElement.bind(this),parseInt(t)))}removeCallback(){this.implementAction(this.remove.bind(this))}clearCallback(){this.implementAction(this.clear.bind(this)),this.implementAction(this.resize.bind(this),8,!1)}buildHeapCallback(){const t=this.buildHeapField.value.split(",").filter(t=>""!==t);""!==this.buildHeapField.value&&t.length<=31&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.buildHeapField.value="",this.implementAction(this.clear.bind(this)),this.implementAction(this.buildHeap.bind(this),t))}minHeapCallback(){this.isMinHeap||(this.clearCallback(),this.isMinHeap=!0,this.order="smaller")}maxHeapCallback(){this.isMinHeap&&(this.clearCallback(),this.isMinHeap=!1,this.order="larger")}clear(){for(this.commands=[];this.currentHeapSize>0;)this.cmd(rt.delete,this.circleObjs[this.currentHeapSize]),this.cmd(rt.setText,this.arrayRects[this.currentHeapSize],""),this.currentHeapSize--;return this.cmd(rt.setText,this.descriptLabel1,""),this.commands}reset(){this.currentHeapSize=0,this.array_size=8,this.nextIndex=this.resetIndex,this.arrayData=new Array(this.array_size),this.arrayLabels=new Array(this.array_size),this.arrayRects=new Array(this.array_size),this.circleObjs=new Array(this.array_size),this.arrayXPositions=new Array(this.array_size);for(let t=0;t<this.array_size;t++)this.arrayXPositions[t]=30+40*t,this.arrayLabels[t]=this.nextIndex++,this.arrayRects[t]=this.nextIndex++,this.circleObjs[t]=this.nextIndex++}swap(t,i){this.cmd(rt.setText,this.arrayRects[t],""),this.cmd(rt.setText,this.arrayRects[i],""),this.cmd(rt.setText,this.circleObjs[t],""),this.cmd(rt.setText,this.circleObjs[i],""),this.cmd(rt.createLabel,this.swapLabel1,this.arrayData[t],this.arrayXPositions[t],50),this.cmd(rt.createLabel,this.swapLabel2,this.arrayData[i],this.arrayXPositions[i],50),this.cmd(rt.createLabel,this.swapLabel3,this.arrayData[t],$t[t],Qt[t]),this.cmd(rt.createLabel,this.swapLabel4,this.arrayData[i],$t[i],Qt[i]),this.cmd(rt.move,this.swapLabel1,this.arrayXPositions[i],50),this.cmd(rt.move,this.swapLabel2,this.arrayXPositions[t],50),this.cmd(rt.move,this.swapLabel3,$t[i],Qt[i]),this.cmd(rt.move,this.swapLabel4,$t[t],Qt[t]);const e=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=e,this.cmd(rt.step),this.cmd(rt.setText,this.arrayRects[t],this.arrayData[t]),this.cmd(rt.setText,this.arrayRects[i],this.arrayData[i]),this.cmd(rt.setText,this.circleObjs[t],this.arrayData[t]),this.cmd(rt.setText,this.circleObjs[i],this.arrayData[i]),this.cmd(rt.delete,this.swapLabel1),this.cmd(rt.delete,this.swapLabel2),this.cmd(rt.delete,this.swapLabel3),this.cmd(rt.delete,this.swapLabel4)}setIndexHighlight(t,i){this.cmd(rt.setHighlight,this.circleObjs[t],i),this.cmd(rt.setHighlight,this.arrayRects[t],i)}pushDown(t){let i;for(;2*t<=this.currentHeapSize;){if(i=2*t,2*t+1<=this.currentHeapSize&&(this.cmd(rt.setText,this.descriptLabel3,`Finding ${this.order} of two children`),this.setIndexHighlight(2*t,1),this.setIndexHighlight(2*t+1,1),this.cmd(rt.step),this.setIndexHighlight(2*t,0),this.setIndexHighlight(2*t+1,0),this.downheapCheckRightChild(t)&&(i=2*t+1)),this.cmd(rt.setText,this.descriptLabel3,"Comparing child to parent"),this.setIndexHighlight(t,1),this.setIndexHighlight(i,1),this.cmd(rt.step),this.setIndexHighlight(t,0),this.setIndexHighlight(i,0),this.cmd(rt.setText,this.descriptLabel3,""),!this.downheapCompare(i,t))return;this.swap(i,t),t=i}}downheapCheckRightChild(t){if(this.isMinHeap){if(this.arrayData[2*t+1]<this.arrayData[2*t])return!0}else if(this.arrayData[2*t+1]>this.arrayData[2*t])return!0}downheapCompare(t,i){if(this.isMinHeap){if(this.arrayData[t]<this.arrayData[i])return!0}else if(this.arrayData[t]>this.arrayData[i])return!0}remove(){return this.commands=[],this.cmd(rt.setText,this.descriptLabel1,""),0===this.currentHeapSize?(this.cmd(rt.setText,this.descriptLabel1,"Heap is empty, cannot dequeue"),this.commands):(this.cmd(rt.setText,this.descriptLabel1,"Removing element:"),this.cmd(rt.createLabel,this.descriptLabel2,this.arrayData[1],$t[1],Qt[1],0),this.cmd(rt.setText,this.circleObjs[1],""),this.cmd(rt.move,this.descriptLabel2,120,40),this.cmd(rt.step),this.cmd(rt.delete,this.descriptLabel2),this.cmd(rt.setText,this.descriptLabel1,"Removing element: "+this.arrayData[1]),this.arrayData[1]="",this.currentHeapSize>1?(this.cmd(rt.setText,this.arrayRects[1],""),this.cmd(rt.setText,this.arrayRects[this.currentHeapSize],""),this.swap(1,this.currentHeapSize),this.cmd(rt.delete,this.circleObjs[this.currentHeapSize]),this.currentHeapSize--,this.pushDown(1)):(this.cmd(rt.setText,this.arrayRects[1],""),this.cmd(rt.delete,this.circleObjs[this.currentHeapSize]),this.currentHeapSize--),this.commands)}buildHeap(t){this.commands=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,31),this.arrayData.unshift(0),this.currentHeapSize=this.arrayData.length-1;const i=Math.min(32,2*this.currentHeapSize+1);this.array_size!==i&&(this.commands=this.resize(i,!1)),this.cmd(rt.setText,this.descriptLabel1,"Adding data to array"),this.cmd(rt.step);for(let s=1;s<=this.currentHeapSize;s++)this.cmd(rt.createCircle,this.circleObjs[s],this.arrayData[s],$t[s],Qt[s]),this.cmd(rt.setText,this.arrayRects[s],this.arrayData[s]),s>1&&this.cmd(rt.connect,this.circleObjs[Math.floor(s/2)],this.circleObjs[s]);this.cmd(rt.step),this.cmd(rt.setText,this.descriptLabel1,"Enforcing order property using downheap");let e=this.currentHeapSize;for(;e>0;)this.pushDown(e),e-=1;return this.cmd(rt.step),this.cmd(rt.setText,this.descriptLabel1,"Buildheap complete!"),this.commands}insertElement(t){if(this.commands=[],this.cmd(rt.setText,this.descriptLabel1,""),this.currentHeapSize===this.array_size-1){if(this.currentHeapSize>=31)return this.cmd(rt.setText,this.descriptLabel1,"Array would normally resize here, but there's not enough space on the screen for a larger heap. So here's a cute emoji of jack instead: V\u2022\u1d25\u2022V"),this.commands;{const t=Math.min(32,2*this.array_size);this.commands=this.resize(t,!0)}}this.cmd(rt.setText,this.descriptLabel1,"Enqueueing Element: "+t),this.cmd(rt.step),this.cmd(rt.setText,this.descriptLabel1,"Enqueueing Element: "),this.currentHeapSize++,this.arrayData[this.currentHeapSize]=t,this.cmd(rt.createCircle,this.circleObjs[this.currentHeapSize],"",$t[this.currentHeapSize],Qt[this.currentHeapSize]),this.cmd(rt.createLabel,this.descriptLabel2,t,120,45,1),this.currentHeapSize>1&&this.cmd(rt.connect,this.circleObjs[Math.floor(this.currentHeapSize/2)],this.circleObjs[this.currentHeapSize]),this.cmd(rt.move,this.descriptLabel2,$t[this.currentHeapSize],Qt[this.currentHeapSize]),this.cmd(rt.step),this.cmd(rt.setText,this.circleObjs[this.currentHeapSize],t),this.cmd(rt.delete,this.descriptLabel2),this.cmd(rt.setText,this.arrayRects[this.currentHeapSize],t);let i=this.currentHeapSize,e=Math.floor(i/2);for(i>1&&(this.setIndexHighlight(i,1),this.setIndexHighlight(e,1),this.cmd(rt.setText,this.descriptLabel3,"Comparing child to parent"),this.cmd(rt.step),this.setIndexHighlight(i,0),this.setIndexHighlight(e,0));i>1&&this.upheapCompare(i,e);)this.swap(i,e),i=e,e=Math.floor(e/2),i>1&&(this.setIndexHighlight(i,1),this.setIndexHighlight(e,1),this.cmd(rt.setText,this.descriptLabel3,"Comparing child to parent"),this.cmd(rt.step),this.setIndexHighlight(i,0),this.setIndexHighlight(e,0));return this.cmd(rt.setText,this.descriptLabel1,""),this.cmd(rt.setText,this.descriptLabel3,""),this.commands}resize(t,i){this.commands=[];const e=this.nextIndex++;i&&(this.cmd(rt.createLabel,e,"Resize Required: size == array.length - 1",400,20),this.cmd(rt.step),32===t?this.cmd(rt.setText,e,"Resizing to 32 (Max array size)"):this.cmd(rt.setText,e,"Resizing to 2 * array.length"));const s=this.array_size;this.array_size=t,this.newArrayData=new Array(this.array_size),this.newArrayLabels=new Array(this.array_size),this.newArrayRects=new Array(this.array_size),this.newCircleObjs=new Array(this.array_size),this.newArrayXPositions=new Array(this.array_size);for(let h=0;h<this.array_size;h++)this.newArrayLabels[h]=this.nextIndex++,this.newArrayRects[h]=this.nextIndex++,this.newArrayXPositions[h]=30+40*h,this.newCircleObjs[h]=h<s?this.circleObjs[h]:this.nextIndex++,this.newArrayData[h]=this.arrayData[h];if(i){for(let t=0;t<this.array_size;t++)this.cmd(rt.createRectangle,this.newArrayRects[t],"",40,25,this.newArrayXPositions[t],100),this.cmd(rt.createLabel,this.newArrayLabels[t],t,this.newArrayXPositions[t],125),this.cmd(rt.setForegroundColor,this.newArrayLabels[t],"#0000FF");this.cmd(rt.step),this.arrayMoveID=new Array(this.oldSize);for(let t=0;t<=this.currentHeapSize;t++)this.arrayMoveID[t]=this.nextIndex++,0===t?this.cmd(rt.createLabel,this.arrayMoveID[t],"null",this.arrayXPositions[t],50):this.cmd(rt.createLabel,this.arrayMoveID[t],this.arrayData[t],this.arrayXPositions[t],50),this.cmd(rt.move,this.arrayMoveID[t],this.newArrayXPositions[t],100);this.cmd(rt.step);for(let t=0;t<s;t++)this.cmd(rt.delete,this.arrayMoveID[t]),this.cmd(rt.setText,this.newArrayRects[t],this.newArrayData[t]);this.cmd(rt.setText,this.newArrayRects[0],"null"),this.cmd(rt.step)}for(let h=0;h<s;h++)this.cmd(rt.delete,this.arrayLabels[h]),this.cmd(rt.delete,this.arrayRects[h]);if(this.cmd(rt.step),this.arrayData=this.newArrayData,this.arrayLabels=this.newArrayLabels,this.arrayXPositions=this.newArrayXPositions,this.arrayRects=this.newArrayRects,this.circleObjs=this.newCircleObjs,i){for(let t=0;t<this.array_size;t++)this.cmd(rt.move,this.arrayRects[t],this.arrayXPositions[t],50),this.cmd(rt.move,this.arrayLabels[t],this.arrayXPositions[t],75);this.cmd(rt.delete,e)}else{for(let t=0;t<this.array_size;t++)this.cmd(rt.createRectangle,this.arrayRects[t],"",40,25,this.arrayXPositions[t],50),this.cmd(rt.createLabel,this.arrayLabels[t],t,this.arrayXPositions[t],75),this.cmd(rt.setForegroundColor,this.newArrayLabels[t],"#0000FF");this.cmd(rt.setText,this.arrayRects[0],"null")}return this.commands}upheapCompare(t,i){if(this.isMinHeap){if(this.arrayData[t]<this.arrayData[i])return!0}else if(this.arrayData[t]>this.arrayData[i])return!0}disableUI(){this.controls.forEach(t=>t.disabled=!0)}enableUI(){this.controls.forEach(t=>t.disabled=!1)}}],SkipList:["SkipList",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1),i=bt(!0,t),e=bt(!0,t);Dt();const s=bt(!1),h=bt(!0,s),a=bt(!0,s);ut("Add",i),this.addValueField=xt("Text","",i),this.addValueField.setAttribute("placeholder","Value"),this.addValueField.onkeydown=this.returnSubmit(this.addValueField,this.addWithHeadsCallback.bind(this),4,!0),this.controls.push(this.addValueField),ut("with",i),this.headsField=xt("Text","",i),this.headsField.setAttribute("placeholder","#"),this.headsField.onkeydown=this.returnSubmit(this.headsField,this.addWithHeadsCallback.bind(this),4,!0),this.controls.push(this.headsField),ut("heads (Max 4)",i),this.addWithHeadsButton=xt("Button","Add",e),this.addWithHeadsButton.onclick=this.addWithHeadsCallback.bind(this),this.controls.push(this.addWithHeadsButton),ut("Add",h),this.addValueFieldRandom=xt("Text","",h),this.addValueFieldRandom.setAttribute("placeholder","Value"),this.addValueFieldRandom.onkeydown=this.returnSubmit(this.addValueFieldRandom,this.addRandomlyCallback.bind(this),4,!0),this.controls.push(this.addValueFieldRandom),ut("with random coin flip",h),this.addRandomlyButton=xt("Button","Add",a),this.addRandomlyButton.onclick=this.addRandomlyCallback.bind(this),this.controls.push(this.addRandomlyButton),Dt(),this.removeField=xt("Text",""),this.removeField.onkeydown=this.returnSubmit(this.removeField,this.removeCallback.bind(this),4,!0),this.controls.push(this.removeField),this.removeButton=xt("Button","Remove"),this.removeButton.onclick=this.removeCallback.bind(this),this.controls.push(this.removeButton),Dt(),this.getField=xt("Text",""),this.getField.onkeydown=this.returnSubmit(this.getField,this.getCallback.bind(this),4,!0),this.controls.push(this.getField),this.getButton=xt("Button","Get"),this.getButton.onclick=this.getCallback.bind(this),this.controls.push(this.getButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}setup(){this.commands=[],this.nodeID=[[this.nextIndex++],[this.nextIndex++]],this.data=[[Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY]],this.size=0,this.cmd(rt.createSkipListNode,this.nodeID[0][0],"\u2212\u221e",40,40,100,400),this.cmd(rt.createSkipListNode,this.nodeID[1][0],"\u221e",40,40,180,400),this.cmd(rt.connectSkipList,this.nodeID[0][0],this.nodeID[1][0],3),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.nodeID=[[this.nextIndex++],[this.nextIndex++]],this.data=[[Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY]],this.size=0}addRandomlyCallback(){if(""!==this.addValueFieldRandom.value){const t=parseInt(this.addValueFieldRandom.value);this.addValueFieldRandom.value="",this.headsField.value="",this.implementAction(this.add.bind(this),t)}}addWithHeadsCallback(){if(""!==this.addValueField.value&&""!==this.headsField.value){const t=parseInt(this.addValueField.value);this.addValueField.value="";const i=parseInt(this.headsField.value);this.headsField.value="",this.implementAction(this.add.bind(this),t,i)}}removeCallback(){if(""!==this.removeField.value){const t=parseInt(this.removeField.value);this.removeField.value="",this.implementAction(this.remove.bind(this),t)}}getCallback(){if(""!==this.getField.value){const t=parseInt(this.getField.value);this.getField.value="",this.implementAction(this.get.bind(this),t)}}clearCallback(){this.implementAction(this.clearAll.bind(this))}add(t,i){this.commands=[],void 0===i&&(i=Math.floor(5*Math.random())),i=Math.min(i,4);const e=this.nextIndex++,s=this.nextIndex++,h=this.nextIndex++,a=this.nextIndex++,n=this.nextIndex++;let l="";for(let g=0;g<i;g++)l+="H";l+="T",this.cmd(rt.createLabel,e,"Value to add:",50,23),this.cmd(rt.createLabel,s,t,120,23),this.cmd(rt.createLabel,h,"Coin Flipper:",50,37),this.cmd(rt.createLabel,a,l,120,37),this.cmd(rt.createLabel,n,"",250,30),this.cmd(rt.step);for(let g=this.nodeID[0].length;g<=i;g++){const t=this.nodeID.length-1;this.data[0][g]=Number.NEGATIVE_INFINITY,this.nodeID[0][g]=this.nextIndex++,this.cmd(rt.createSkipListNode,this.nodeID[0][g],"\u2212\u221e",40,40,100,400-80*g),this.data[t][g]=Number.POSITIVE_INFINITY,this.nodeID[t][g]=this.nextIndex++,this.cmd(rt.createSkipListNode,this.nodeID[t][g],"\u221e",40,40,100+80*t,400-80*g),this.cmd(rt.connectSkipList,this.nodeID[0][g],this.nodeID[t][g],3),this.cmd(rt.connectSkipList,this.nodeID[0][g-1],this.nodeID[0][g],0),this.cmd(rt.connectSkipList,this.nodeID[t][g-1],this.nodeID[t][g],0),this.cmd(rt.step)}let r=1;for(;t>this.data[r][0];)r++;if(t!==this.data[r][0]){for(let t=this.nodeID.length-1;t>=r;t--)this.nodeID[t+1]=this.nodeID[t],this.data[t+1]=this.data[t];this.nodeID[r]=[],this.data[r]=[]}let o=0,d=this.nodeID[0].length-1;const c=this.nextIndex++;this.cmd(rt.createHighlightCircle,c,"#FF0000",100,400-80*d),this.cmd(rt.setHighlight,c,1),this.cmd(rt.step);let m=!1;for(;d>=0;){let i=this.getNextCol(o,d);if(t===this.data[i][d]){o=i,m=!0;break}for(;t>this.data[i][d];)this.cmd(rt.move,c,100+80*i,400-80*d),this.cmd(rt.step),o=i,i=this.getNextCol(o,d);if(t===this.data[i][d]){o=i,m=!0;break}d--,d>=0&&(this.cmd(rt.move,c,100+80*o,400-80*d),this.cmd(rt.step))}for(m?(this.cmd(rt.move,c,100+80*o,400-80*d),this.cmd(rt.step),this.cmd(rt.setText,n,"Duplicate found!"),this.cmd(rt.step)):this.shiftColumns(r),d++,this.cmd(rt.createCircle,this.nextIndex++,"",-100,-100,0);d<=i;){this.cmd(rt.setText,n,"Adding data"),this.cmd(rt.step),this.data[r][d]=t,this.nodeID[r][d]=this.nextIndex++,this.cmd(rt.createSkipListNode,this.nodeID[r][d],t,40,40,100+80*r,400-80*d);const i=this.getPrevCol(r,d),e=this.getNextCol(r,d);this.cmd(rt.disconnect,this.nodeID[i][d],this.nodeID[e][d]),this.cmd(rt.connectSkipList,this.nodeID[i][d],this.nodeID[r][d],3),this.cmd(rt.connectSkipList,this.nodeID[r][d],this.nodeID[e][d],3),0!==d&&this.cmd(rt.connectSkipList,this.nodeID[r][d-1],this.nodeID[r][d],0),this.cmd(rt.step),this.cmd(rt.move,c,100+80*r,400-80*d),this.cmd(rt.step),d++}return this.cmd(rt.delete,e),this.cmd(rt.delete,s),this.cmd(rt.delete,h),this.cmd(rt.delete,a),this.cmd(rt.delete,c),this.cmd(rt.delete,n),this.size++,this.commands}remove(t){this.commands=[];const i=parseInt(t),e=this.nextIndex++,s=this.nextIndex++;this.cmd(rt.createLabel,e,"Value to remove:",50,23),this.cmd(rt.createLabel,s,i,120,23),this.cmd(rt.step);let h=0,a=this.nodeID[0].length-1,n=-1;const l=this.nextIndex++;for(this.cmd(rt.createHighlightCircle,l,"#FF0000",100,400-80*a),this.cmd(rt.step);a>=0;){let t=this.getNextCol(h,a);for(;i>this.data[t][a];)this.cmd(rt.move,l,100+80*t,400-80*a),this.cmd(rt.step),h=t,t=this.getNextCol(h,a);if(i===this.data[t][a])for(n=t,h=t,this.cmd(rt.move,l,100+80*h,400-80*a),this.cmd(rt.step);a>=0;){t=this.getNextCol(h,a);const i=this.getPrevCol(h,a);this.cmd(rt.disconnect,this.nodeID[i][a],this.nodeID[h][a]),this.cmd(rt.disconnect,this.nodeID[h][a],this.nodeID[t][a]),null!=this.nodeID[h][a+1]&&this.cmd(rt.disconnect,this.nodeID[h][a+1],this.nodeID[h][a]),this.cmd(rt.connectSkipList,this.nodeID[i][a],this.nodeID[t][a],3),this.cmd(rt.delete,this.nodeID[h][a]),this.cmd(rt.step),a--,-1!==a&&(this.cmd(rt.move,l,100+80*h,400-80*a),this.cmd(rt.step))}else a--,-1!==a&&(this.cmd(rt.move,l,100+80*h,400-80*a),this.cmd(rt.step))}if(this.cmd(rt.delete,e),this.cmd(rt.delete,s),this.cmd(rt.delete,l),-1!==n){for(let t=n;t<this.nodeID.length-1;t++)this.nodeID[t]=this.nodeID[t+1],this.data[t]=this.data[t+1];this.nodeID.pop(),this.data.pop(),this.shiftColumns(n)}let r=1;for(let o=1;o<this.nodeID.length-1;o++)r=Math.max(r,this.nodeID[o].length);for(let o=this.nodeID[0].length-1;o>=r;o--){this.data[0].pop();const t=this.nodeID[0].pop();this.cmd(rt.delete,t);const i=this.nodeID.length-1;this.data[i].pop();const e=this.nodeID[i].pop();this.cmd(rt.delete,e)}return this.cmd(rt.step),this.size--,this.commands}get(t){this.commands=[];const i=parseInt(t);let e=0,s=this.nodeID[0].length-1;const h=this.nextIndex++;for(this.cmd(rt.createHighlightCircle,h,"#FF0000",100,400-80*s),this.cmd(rt.setHighlight,h,1),this.cmd(rt.step);s>=0&&i!==this.data[e][s];){let t=this.getNextCol(e,s);for(;i>=this.data[t][s];)this.cmd(rt.move,h,100+80*t,400-80*s),this.cmd(rt.step),e=t,t=this.getNextCol(e,s);i!==this.data[e][s]&&(s--,this.cmd(rt.move,h,100+80*e,400-80*s),this.cmd(rt.step))}return this.cmd(rt.delete,h),this.commands}shiftColumns(t){for(;t<this.nodeID.length;t++)for(let i=0;i<this.nodeID[t].length;i++)null!=this.nodeID[t][i]&&this.cmd(rt.move,this.nodeID[t][i],100+80*t,400-80*i);this.cmd(rt.step)}getNextCol(t,i){for(t++;null==this.data[t][i];)t++;return t}getPrevCol(t,i){for(t--;null==this.data[t][i];)t--;return t}clearAll(){this.commands=[];for(let t=0;t<this.nodeID.length;t++)for(let i=0;i<this.nodeID[t].length;i++)this.cmd(rt.delete,this.nodeID[t][i]);return this.nodeID=[[this.nextIndex++],[this.nextIndex++]],this.data=[[Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY]],this.size=0,this.cmd(rt.createSkipListNode,this.nodeID[0][0],"\u2212\u221e",40,40,100,400),this.cmd(rt.createSkipListNode,this.nodeID[1][0],"\u221e",40,40,180,400),this.cmd(rt.connectSkipList,this.nodeID[0][0],this.nodeID[1][0],3),this.cmd(rt.step),this.commands}}],ClosedHash:["HashMap (Probing)",class extends Wt{constructor(t,i,e){super(t,i,e),this.elements_per_row=14,this.setup()}addControls(){super.addControls(),Dt();const t=It(["Linear Probing: f(i) = i","Quadratic Probing: f(i) = i * i","Double Hashing: f(i) = i * hash2(elem)"],"Collision Strategy: h(elem) + f(i)");this.linearProblingButton=t[0],this.linearProblingButton.onclick=this.linearProbeCallback.bind(this),this.quadraticProbingButton=t[1],this.quadraticProbingButton.onclick=this.quadraticProbeCallback.bind(this),this.doubleHashingButton=t[2],this.doubleHashingButton.onclick=this.doubleHashingCallback.bind(this),this.linearProblingButton.checked=!0,this.currentHashingTypeButtonState=this.linearProblingButton}changeProbeType(t){if(t===this.linearProblingButton){this.linearProblingButton.checked=!0,this.currentHashingTypeButtonState=this.linearProblingButton;for(let t=0;t<this.table_size;t++)this.skipDist[t]=t+1}else if(t===this.quadraticProbingButton){this.quadraticProbingButton.checked=!0,this.currentHashingTypeButtonState=this.quadraticProbingButton;for(let t=0;t<this.table_size;t++)this.skipDist[t]=(t+1)*(t+1)}else t===this.doubleHashingButton&&(this.doubleHashingButton.checked=!0,this.currentHashingTypeButtonState=this.doubleHashingButton);return this.commands=this.resetAll(),this.commands}quadraticProbeCallback(){this.currentHashingTypeButtonState!==this.quadraticProbingButton&&this.implementAction(this.changeProbeType.bind(this),this.quadraticProbingButton)}doubleHashingCallback(){this.currentHashingTypeButtonState!==this.doubleHashingButton&&this.implementAction(this.changeProbeType.bind(this),this.doubleHashingButton)}linearProbeCallback(){this.currentHashingTypeButtonState!==this.linearProblingButton&&this.implementAction(this.changeProbeType.bind(this),this.linearProblingButton)}insertElement(t,i){const e=new Gt(t,i),s=e.elem;this.commands=[],(this.size+1)/this.table_size>this.load_factor&&2*this.table_size+1<70&&this.resize(!1),this.cmd(rt.setText,this.ExplainLabel,"Inserting element: "+s),this.cmd(rt.step);let h=this.doHash(t);if(h=this.getEmptyIndex(h,t),-2===h&&2*this.table_size<70)this.resize(!0);else if(-2===h)return this.cmd(rt.setText,this.ExplainLabel,"Array would normally resize after length number of probes,\n\t\t\t\thowever there just isn't enough space on the screen to resize. \n\t\t\t\tSo here's a cute emoji of jack instead: V\u2022\u1d25\u2022V"),this.commands;this.hashTableValues[h]&&this.hashTableValues[h].key===t&&!this.deleted[h]&&(this.cmd(rt.setText,this.ExplainLabel,"Key "+t+" is already in HashMap, updating value.",""),this.size--);const a=this.nextIndex++;return this.cmd(rt.createLabel,a,s,20,25),this.cmd(rt.move,a,this.indexXPos[h],this.indexYPos[h]-30),this.cmd(rt.step),this.cmd(rt.delete,a),this.cmd(rt.setText,this.hashTableVisual[h],s),this.cmd(rt.setHighlight,this.hashTableVisual[h],0),this.hashTableValues[h]=e,this.empty[h]=!1,this.deleted[h]=!1,this.size++,this.cmd(rt.setText,this.ExplainLabel,""),this.cmd(rt.setText,this.DelIndexLabel,""),this.commands}resetSkipDist(t,i){const e=this.nextLowestPrime-this.currHash%this.nextLowestPrime;this.cmd(rt.createLabel,i,`hash2(${String(t)}) = ${this.nextLowestPrime} - ${String(this.currHash)} % ${this.nextLowestPrime} = ${String(e)}`,270,70,0),this.skipDist[0]=e;for(let s=1;s<this.table_size;s++)this.skipDist[s]=this.skipDist[s-1]+e;return e}getEmptyIndex(t,i){let e=-1,s=1;this.currentHashingTypeButtonState===this.doubleHashingButton&&(e=this.nextIndex++,s=this.resetSkipDist(i,e));let h=0,a=-1;const n=t;for(this.cmd(rt.setHighlight,this.hashTableVisual[t],1);h<this.table_size&&!this.empty[t]&&this.hashTableValues[t].key!==i;)this.cmd(rt.setText,this.ExplainLabel,"Entry occupied, so probe forward"),this.cmd(rt.step),-1===a&&this.deleted[t]&&(this.cmd(rt.setText,this.ExplainLabel,"Storing index of first deleted element"),this.cmd(rt.setText,this.DelIndexLabel,"First Deleted Index: "+t),a=t,this.cmd(rt.step)),this.cmd(rt.setHighlight,this.hashTableVisual[t],0),this.cmd(rt.setText,this.ExplainLabel,""),t=(n+this.skipDist[h])%this.table_size,this.currentHashingTypeButtonState===this.quadraticProbingButton&&(s=h+1),this.cmd(rt.setText,this.HashIndexID,`Index to probe: (${n} + ${h+1}*${s}) % ${this.table_size} = `+(n+this.skipDist[h])%this.table_size),this.cmd(rt.setHighlight,this.hashTableVisual[t],1),this.empty[t]?this.cmd(rt.setText,this.ExplainLabel,"Encountered null spot, so terminate loop"):this.hashTableValues[t].key===i&&this.cmd(rt.setText,this.ExplainLabel,"Encountered matching key, so terminate loop"),h++,this.cmd(rt.step);return this.cmd(rt.setText,this.HashIndexID,""),-1!==e&&(this.cmd(rt.delete,e),this.nextIndex--),this.empty[t]||this.hashTableValues[t].key!==i||this.deleted[t]?h===this.table_size&&-1===a?(this.cmd(rt.setHighlight,this.hashTableVisual[t],0),-2):(-1!==a?(this.cmd(rt.setHighlight,this.hashTableVisual[t],0),this.cmd(rt.setText,this.ExplainLabel,"Inserting at earlier DEL spot"),t=a):null==this.hashTableValues[t]?this.cmd(rt.setText,this.ExplainLabel,"Inserting at null spot"):this.hashTableValues[t].key===i&&this.cmd(rt.setText,this.ExplainLabel,"Inserting at DEL spot with same key"),this.cmd(rt.setHighlight,this.hashTableVisual[t],1),this.cmd(rt.step),-1!==a?a:t):(this.cmd(rt.setHighlight,this.hashTableVisual[t],0),t)}getElemIndex(t,i){let e=-1,s=1;this.currentHashingTypeButtonState===this.doubleHashingButton&&(e=this.nextIndex++,s=this.resetSkipDist(i,e));const h=t;let a=-1,n=t;for(let l=0;l<this.table_size;l++){if(this.cmd(rt.setHighlight,this.hashTableVisual[n],1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.hashTableVisual[n],0),!this.empty[n]&&!this.deleted[n]&&this.hashTableValues[n].key===i){a=n;break}if(this.empty[n]||this.deleted[n]&&this.hashTableValues[n].key===i)break;this.currentHashingTypeButtonState===this.quadraticProbingButton&&(s=l+1),this.cmd(rt.setText,this.HashIndexID,`Index to probe: (${h} + ${l+1}*${s}) % ${this.table_size} = `+(h+this.skipDist[l])%this.table_size),n=(t+this.skipDist[l])%this.table_size}return this.cmd(rt.setText,this.HashIndexID,""),-1!==e&&(this.cmd(rt.delete,e),this.nextIndex--),a}deleteElement(t){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,"Deleting element with key: "+t);let i=this.doHash(t);if(i=this.getElemIndex(i,t),i>=0){const t=this.hashTableValues[i].elem;this.cmd(rt.setText,this.ExplainLabel,"Deleting element: "+t+"  Element deleted"),this.deleted[i]=!0,this.cmd(rt.setText,this.hashTableVisual[i],"DEL"),this.size--}else this.cmd(rt.setText,this.ExplainLabel,"Deleting element with key: "+t+"  Key not in table");return this.commands}findElement(t){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,"Finding Key: "+t);const i=this.doHash(t);return-1!==this.getElemIndex(i,t)?this.cmd(rt.setText,this.ExplainLabel,"Found Key: "+t+"  Value: "+this.hashTableValues[i].val):this.cmd(rt.setText,this.ExplainLabel,"Finding Key: "+t+"  Not Found!"),this.commands}resize(t){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,""),this.cmd(rt.setText,this.DelIndexLabel,"");const i=this.nextIndex++;if(t?this.cmd(rt.createLabel,i,`(Resize Required): ${this.table_size} elements probed`,400,20):this.cmd(rt.createLabel,i,`(Resize Required): (Size + 1 / length) > Load Factor --\x3e (${this.size} + 1 / ${this.table_size}) > ${this.load_factor}`,400,20),this.table_size=2*this.table_size+1,2*this.table_size+1>70&&(this.load_factor=.99,this.cmd(rt.setText,this.loadFactorID,"Load Factor: "+this.load_factor)),this.cmd(rt.step),this.oldHashTableVisual=this.hashTableVisual,this.oldHashTableValues=this.hashTableValues,this.oldskipDist=this.skipDist,this.oldempty=this.empty,this.olddeleted=this.deleted,this.oldIndexXPos=this.indexXPos,this.oldIndexYPos=this.indexYPos,this.oldindexLabelID=this.indexLabelID,this.hashTableValues=new Array(this.table_size),this.hashTableVisual=new Array(this.table_size),this.skipDist=new Array(this.table_size),this.empty=new Array(this.table_size),this.deleted=new Array(this.table_size),this.indexXPos=new Array(this.table_size),this.indexYPos=new Array(this.table_size),this.indexLabelID=new Array(this.table_size),this.currentHashingTypeButtonState===this.linearProblingButton)for(let s=0;s<this.table_size;s++)this.skipDist[s]=s+1;else if(this.currentHashingTypeButtonState===this.quadraticProbingButton)for(let s=0;s<this.table_size;s++)this.skipDist[s]=(s+1)*(s+1);for(let s=0;s<this.table_size;s++){this.hashTableVisual[s]=this.nextIndex++,this.empty[s]=!0,this.deleted[s]=!1;const t=100+s%this.elements_per_row*60,i=240+70*Math.floor(s/this.elements_per_row);this.cmd(rt.createRectangle,this.hashTableVisual[s],"",60,30,t,i),this.indexLabelID[s]=this.nextIndex++,this.indexXPos[s]=t,this.indexYPos[s]=i+30,this.cmd(rt.createLabel,this.indexLabelID[s],s,this.indexXPos[s],this.indexYPos[s]),this.cmd(rt.setForegroundColor,this.indexLabelID[s],"#0000FF")}this.cmd(rt.step);let e=0;for(let s=0;s<this.table_size/2&&e<this.size;s++){if(this.cmd(rt.setHighlight,this.oldHashTableVisual[s],1),this.cmd(rt.step),!this.oldempty[s]&&!this.olddeleted[s]){const t=this.oldHashTableValues[s];let i=this.doHash(t.key);if(i=this.getEmptyIndex(i,t.key),-1!==i){const h=this.nextIndex++;this.cmd(rt.createLabel,h,t.elem,this.oldIndexXPos[s],this.oldIndexYPos[s]-30),this.cmd(rt.move,h,this.indexXPos[i],this.indexYPos[i]-30),this.cmd(rt.step),this.cmd(rt.delete,h),this.cmd(rt.setText,this.hashTableVisual[i],t.elem),this.cmd(rt.setHighlight,this.hashTableVisual[i],0),this.hashTableValues[i]=t,this.empty[i]=!1,this.deleted[i]=!1,e++}}this.cmd(rt.setHighlight,this.oldHashTableVisual[s],0)}this.cmd(rt.delete,i);for(let s=0;s<this.table_size;s++){const t=100+s%this.elements_per_row*60,i=110+70*Math.floor(s/this.elements_per_row);s<(this.table_size-1)/2&&(this.cmd(rt.delete,this.oldHashTableVisual[s]),this.cmd(rt.delete,this.oldindexLabelID[s])),this.cmd(rt.move,this.hashTableVisual[s],t,i),this.cmd(rt.move,this.indexLabelID[s],t,i+30),this.indexYPos[s]=i+30}return this.commands}changeLoadFactor(t){return this.commands=[],2*this.table_size+1<=70?(this.load_factor=t,this.cmd(rt.setText,this.loadFactorID,"Load Factor: "+this.load_factor)):this.cmd(rt.setText,this.loadFactorID,`Load Factor: ${this.load_factor}\n\t\t\t(Max Array Length)`),this.cmd(rt.step),this.commands}setup(){this.resetIndex=this.nextIndex,this.table_size=13,this.nextLowestPrime=11,this.load_factor=.67,this.skipDist=new Array(this.table_size),this.hashTableVisual=new Array(this.table_size),this.hashTableValues=new Array(this.table_size),this.size=0,this.indexLabelID=new Array(this.table_size),this.indexXPos=new Array(this.table_size),this.indexYPos=new Array(this.table_size),this.empty=new Array(this.table_size),this.deleted=new Array(this.table_size),this.ExplainLabel=this.nextIndex++,this.HashIndexID=this.nextIndex++,this.DelIndexLabel=this.nextIndex++,this.loadFactorID=this.nextIndex++,this.commands=[];for(let t=0;t<this.table_size;t++){this.skipDist[t]=t+1,this.hashTableVisual[t]=this.nextIndex++,this.empty[t]=!0,this.deleted[t]=!1;const i=100+t%this.elements_per_row*60,e=110+70*Math.floor(t/this.elements_per_row);this.cmd(rt.createRectangle,this.hashTableVisual[t],"",60,30,i,e),this.indexLabelID[t]=this.nextIndex++,this.indexXPos[t]=i,this.indexYPos[t]=e+30,this.cmd(rt.createLabel,this.indexLabelID[t],t,this.indexXPos[t],this.indexYPos[t]),this.cmd(rt.setForegroundColor,this.indexLabelID[t],"#0000FF")}this.cmd(rt.createLabel,this.ExplainLabel,"",10,40,0),this.cmd(rt.createLabel,this.HashIndexID,"",570,75),this.cmd(rt.createLabel,this.DelIndexLabel,"",10,60,0),this.cmd(rt.createLabel,this.loadFactorID,"Load Factor: "+this.load_factor,60,20),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}resetAll(){this.commands=super.resetAll(),this.size=0;for(let t=0;t<this.table_size;t++)this.empty[t]=!0,this.deleted[t]=!1,this.hashTableValues[t]=void 0,this.cmd(rt.setText,this.hashTableVisual[t],"");return this.commands}reset(){this.nextIndex=this.resetIndex,this.table_size=13,this.load_factor=.67,this.size=0,this.empty=new Array(this.table_size),this.deleted=new Array(this.table_size),this.hashTableVisual=new Array(this.table_size),this.hashTableValues=new Array(this.table_size),this.indexLabelID=new Array(this.table_size),this.ExplainLabel=this.nextIndex++,this.HashIndexID=this.nextIndex++,this.DelIndexLabel=this.nextIndex++,this.loadFactorID=this.nextIndex++;for(let t=0;t<this.table_size;t++)this.empty[t]=!0,this.deleted[t]=!1,this.hashTableVisual[t]=this.nextIndex++,this.indexLabelID[t]=this.nextIndex++;super.reset()}clear(){this.commands=[];for(let e=0;e<this.table_size;e++)this.cmd(rt.delete,this.hashTableVisual[e]),this.cmd(rt.delete,this.indexLabelID[e]);this.table_size=13,this.empty=Array(this.table_size),this.deleted=Array(this.table_size);const t=Array(this.table_size),i=Array(this.table_size);this.hashTableValues=Array(this.table_size);for(let e=0;e<this.table_size;e++){t[e]=this.nextIndex++;const s=100+e%this.elements_per_row*60,h=110+70*Math.floor(e/this.elements_per_row);this.cmd(rt.createRectangle,t[e],"",60,30,s,h),i[e]=this.nextIndex++,this.indexXPos[e]=s,this.indexYPos[e]=h+30,this.cmd(rt.createLabel,i[e],e,this.indexXPos[e],this.indexYPos[e]),this.cmd(rt.setForegroundColor,i[e],"#0000FF"),this.empty[e]=!0,this.deleted[e]=!1,this.hashTableValues[e]=void 0}return this.size=0,this.hashTableVisual=t,this.indexLabelID=i,this.commands}resetCallback(){}disableUI(){super.disableUI(),this.linearProblingButton.disabled=!0,this.quadraticProbingButton.disabled=!0,this.doubleHashingButton.disabled=!0}enableUI(){super.enableUI(),this.linearProblingButton.disabled=!1,this.quadraticProbingButton.disabled=!1,this.doubleHashingButton.disabled=!1}}],OpenHash:["HashMap (Chaining)",class extends Wt{constructor(t,i,e){super(t,i,e),this.nextIndex=0,this.POINTER_ARRAY_ELEM_Y=e-50,this.setup()}addControls(){super.addControls()}setup(){this.hashTableVisual=new Array(7),this.hashTableIndices=new Array(7),this.hashTableValues=new Array(7),this.indexXPos=new Array(7),this.indexYPos=new Array(7),this.ExplainLabel=this.nextIndex++,this.loadFactorID=this.nextIndex++,this.size=0,this.table_size=7,this.load_factor=.67,this.resetIndex=this.nextIndex,this.commands=[];for(let t=0;t<7;t++){let i=this.nextIndex++;this.cmd(rt.createRectangle,i,"",50,25,70,100+25*t),this.hashTableVisual[t]=i,this.cmd(rt.setNull,this.hashTableVisual[t],1),i=this.nextIndex++,this.hashTableIndices[t]=i,this.hashTableValues[t]=null,this.indexXPos[t]=20,this.indexYPos[t]=100+25*t,this.cmd(rt.createLabel,i,t,this.indexXPos[t],this.indexYPos[t]),this.cmd(rt.setForegroundColor,i,"#0000FF")}this.cmd(rt.createLabel,this.loadFactorID,"Load Factor: "+this.load_factor,60,20),this.cmd(rt.createLabel,this.ExplainLabel,"",550,15,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}insertElement(t,i){const e=`<${t}, ${i}>`;this.commands=[],this.cmd(rt.setText,this.loadFactorID,"Load Factor: "+this.load_factor),(this.size+1)/this.table_size>this.load_factor&&2*this.table_size+1<30&&this.resize(),this.cmd(rt.setText,this.ExplainLabel,"Inserting element "+e);const s=new Jt(t,i,this.nextIndex++,60,40);this.cmd(rt.createLinkedListNode,s.graphicID,e,70,20,60,40,.25,0,1);const h=this.doHash(t);let a,n=!1,l=null;if(null!=this.hashTableValues[h]){this.cmd(rt.setText,this.ExplainLabel,"Searching for duplicates of "+t);const i=this.nextIndex++;let e=this.hashTableValues[h];for(this.cmd(rt.createLabel,i,"",550,45,0);null!=e&&!n;){if(this.cmd(rt.setHighlight,e.graphicID,1),e.key===t){this.cmd(rt.setText,i,e.key+"=="+t),a=e,n=!0,this.cmd(rt.step),this.cmd(rt.setHighlight,e.graphicID,0);break}this.cmd(rt.setText,i,e.key+"!="+t),this.cmd(rt.step),this.cmd(rt.setHighlight,e.graphicID,0),l=e,e=e.next}this.cmd(rt.delete,i),this.nextIndex--}else this.cmd(rt.setNull,s.graphicID,1),this.cmd(rt.setNull,this.hashTableVisual[h],0);return n?(this.cmd(rt.setText,this.ExplainLabel,"Key "+t+" is already in HashMap, updating value."),this.cmd(rt.delete,a.graphicID),s.next=a.next,null!=l?(l.next=s,this.cmd(rt.connect,l.graphicID,s.graphicID)):(this.cmd(rt.disconnect,this.hashTableVisual[h],this.hashTableValues[h].graphicID),this.cmd(rt.connect,this.hashTableVisual[h],s.graphicID),this.hashTableValues[h]=s),null!=s.next?this.cmd(rt.connect,s.graphicID,s.next.graphicID):this.cmd(rt.setNull,s.graphicID,1),this.repositionList(h,this.hashTableValues[h]),this.cmd(rt.step)):(this.cmd(rt.setText,this.ExplainLabel,"Duplicate of  "+t+"  not found!"),this.cmd(rt.step),null!=this.hashTableValues[h]&&(this.cmd(rt.connect,s.graphicID,this.hashTableValues[h].graphicID),this.cmd(rt.disconnect,this.hashTableVisual[h],this.hashTableValues[h].graphicID)),this.cmd(rt.connect,this.hashTableVisual[h],s.graphicID),s.next=this.hashTableValues[h],this.hashTableValues[h]=s,this.repositionList(h,this.hashTableValues[h]),this.size++),this.cmd(rt.setText,this.ExplainLabel,""),this.commands}repositionList(t,i){let e=140;const s=100+25*t;for(;null!=i;)i.x=e,i.y=s,this.cmd(rt.move,i.graphicID,i.x,i.y),e+=90,i=i.next}repositionResizeList(t){let i=740;const e=50+25*t;let s=this.hashTableValues[t];for(;null!=s;)s.x=i,s.y=e,this.cmd(rt.move,s.graphicID,s.x,s.y),i+=90,s=s.next}deleteElement(t){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,"Deleting entry with key: "+t);const i=this.doHash(t);if(null==this.hashTableValues[i])return this.cmd(rt.setText,this.ExplainLabel,"Deleting entry with key: "+t+"  Key not in table"),this.commands;if(this.cmd(rt.setHighlight,this.hashTableValues[i].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.hashTableValues[i].graphicID,0),this.hashTableValues[i].key===t)return null!=this.hashTableValues[i].next?this.cmd(rt.connect,this.hashTableVisual[i],this.hashTableValues[i].next.graphicID):this.cmd(rt.setNull,this.hashTableVisual[i],1),this.cmd(rt.delete,this.hashTableValues[i].graphicID),this.hashTableValues[i]=this.hashTableValues[i].next,this.repositionList(i,this.hashTableValues[i]),this.size--,this.commands;let e=this.hashTableValues[i],s=this.hashTableValues[i].next,h=!1;for(;null!=s&&!h;)this.cmd(rt.setHighlight,s.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,s.graphicID,0),s.key===t?(h=!0,this.cmd(rt.setText,this.ExplainLabel,"Deleting entry with key: "+t+"  Entry deleted"),null!=s.next?this.cmd(rt.connect,e.graphicID,s.next.graphicID):this.cmd(rt.setNull,e.graphicID,1),e.next=e.next.next,this.cmd(rt.delete,s.graphicID),this.repositionList(i,this.hashTableValues[i]),this.size--):(e=s,s=s.next);return h||this.cmd(rt.setText,this.ExplainLabel,"Deleting entry with key: "+t+"  Key not in table"),this.commands}findElement(t){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,"Finding entry with key: "+t);const i=this.doHash(t),e=this.nextIndex++;let s=!1,h=this.hashTableValues[i],a=null;for(this.cmd(rt.createLabel,e,"",10,40,0);null!=h&&!s;)this.cmd(rt.setHighlight,h.graphicID,1),h.key===t?(this.cmd(rt.setText,e,h.key+"=="+t),s=!0,a=h.val):this.cmd(rt.setText,e,h.key+"!="+t),this.cmd(rt.step),this.cmd(rt.setHighlight,h.graphicID,0),h=h.next;return s?this.cmd(rt.setText,this.ExplainLabel,"Found entry with key: "+t+"  Value: "+a):this.cmd(rt.setText,this.ExplainLabel,"Finding entry with key: "+t+"  Not Found!"),this.cmd(rt.delete,e),this.nextIndex--,this.commands}resize(){this.commands=[],this.cmd(rt.setText,this.ExplainLabel,"");const t=this.nextIndex++;this.cmd(rt.createLabel,t,`(Resize Required): (Size + 1 / length) > Load Factor --\x3e (${this.size} + 1 / ${this.table_size}) > ${this.load_factor}`,800,20),this.table_size=2*this.table_size+1,2*this.table_size+1>30&&(this.load_factor=.99,this.cmd(rt.setText,this.loadFactorID,"Load Factor: "+this.load_factor)),this.cmd(rt.step),this.oldHashTableVisual=this.hashTableVisual,this.oldHashTableValues=this.hashTableValues,this.oldHashTableIndices=this.hashTableIndices,this.oldIndexXPos=this.indexXPos,this.oldIndexYPos=this.indexYPos,this.hashTableValues=new Array(this.table_size),this.hashTableVisual=new Array(this.table_size),this.hashTableIndices=new Array(this.table_size),this.indexXPos=new Array(this.table_size),this.indexYPos=new Array(this.table_size);for(let i=0;i<this.table_size;i++){let t=this.nextIndex++;this.cmd(rt.createRectangle,t,"",50,25,670,50+25*i),this.hashTableVisual[i]=t,this.cmd(rt.setNull,this.hashTableVisual[i],1),t=this.nextIndex++,this.hashTableIndices[i]=t,this.hashTableValues[i]=null,this.indexXPos[i]=620,this.indexYPos[i]=50+25*i,this.cmd(rt.createLabel,t,i,this.indexXPos[i],this.indexYPos[i]),this.cmd(rt.setForegroundColor,t,"#0000FF")}for(let i=0;i<(this.table_size-1)/2;i++){for(this.cmd(rt.setHighlight,this.oldHashTableVisual[i],1),this.cmd(rt.step);null!=this.oldHashTableValues[i];){this.cmd(rt.setHighlight,this.oldHashTableVisual[i],0);const t=this.oldHashTableValues[i];this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),this.cmd(rt.move,t.graphicID,60,40),this.oldHashTableValues[i]=this.oldHashTableValues[i].next,this.cmd(rt.disconnect,this.oldHashTableVisual[i],t.graphicID),null!=this.oldHashTableValues[i]?(this.cmd(rt.connect,this.oldHashTableVisual[i],this.oldHashTableValues[i].graphicID),this.cmd(rt.disconnect,t.graphicID,this.oldHashTableValues[i].graphicID),this.repositionList(i,this.oldHashTableValues[i])):this.cmd(rt.setNull,this.oldHashTableVisual[i],1),this.cmd(rt.step);const e=this.doHash(t.key);t.next=this.hashTableValues[e],this.cmd(rt.setNull,t.graphicID,1),this.cmd(rt.setNull,this.hashTableVisual[e],0),null!=t.next&&(this.cmd(rt.disconnect,this.hashTableVisual[e],t.next.graphicID),this.cmd(rt.connect,t.graphicID,t.next.graphicID)),this.cmd(rt.connect,this.hashTableVisual[e],t.graphicID),this.hashTableValues[e]=t,this.repositionResizeList(e),this.cmd(rt.setHighlight,t.graphicID,0)}this.cmd(rt.setHighlight,this.oldHashTableVisual[i],0)}this.cmd(rt.step);for(let i=0;i<(this.table_size-1)/2;i++)this.cmd(rt.setNull,this.oldHashTableVisual[i],1),this.cmd(rt.delete,this.oldHashTableVisual[i]),this.cmd(rt.delete,this.oldHashTableIndices[i]);for(let i=0;i<this.table_size;i++){const t=70,e=100+25*i;this.indexXPos[i]=20,this.indexYPos[i]=100+25*i,this.cmd(rt.move,this.hashTableVisual[i],t,e),this.cmd(rt.move,this.hashTableIndices[i],t-50,e);let s=0,h=this.hashTableValues[i];for(;null!=h;)this.cmd(rt.move,h.graphicID,t+70+90*s,e),s++,h=h.next}this.cmd(rt.delete,t),this.cmd(rt.step)}changeLoadFactor(t){return this.commands=[],2*this.table_size+1<=30?(this.load_factor=t,this.cmd(rt.setText,this.loadFactorID,"Load Factor: "+this.load_factor)):this.cmd(rt.setText,this.loadFactorID,`Load Factor: ${this.load_factor}\n\t\t\t(Max Array Length)`),this.cmd(rt.step),this.commands}resetAll(){let t;this.commands=super.resetAll(),this.size=0;for(let i=0;i<this.hashTableValues.length;i++)if(t=this.hashTableValues[i],null!=t){for(;null!=t;)this.cmd(rt.delete,t.graphicID),t=t.next;this.hashTableValues[i]=null,this.cmd(rt.setNull,this.hashTableVisual[i],1)}return this.commands}reset(){this.nextIndex=this.resetIndex,this.table_size=7,this.load_factor=.67,this.size=0,this.hashTableVisual=new Array(this.table_size),this.hashTableValues=new Array(this.table_size),this.hashTableIndices=new Array(7),this.indexXPos=new Array(7),this.indexYPos=new Array(7);for(let t=0;t<this.table_size;t++)this.hashTableValues[t]=null,this.hashTableVisual[t]=this.nextIndex++,this.hashTableIndices[t]=this.nextIndex++;super.reset()}clear(){this.commands=[];for(let t=0;t<this.hashTableValues.length;t++){let i=this.hashTableValues[t];null!=i&&this.cmd(rt.delete,i.graphicID),t>=7?(this.cmd(rt.delete,this.hashTableVisual[t],1),this.cmd(rt.delete,this.hashTableIndices[t])):this.cmd(rt.setNull,this.hashTableVisual[t],1)}return this.hashTableValues=new Array(7),this.size=0,this.commands}disableUI(){super.disableUI()}enableUI(){super.enableUI()}}],SplayTree:["SplayTree",class extends ft{constructor(t,i,e){super(t,i,e),this.startingX=i/2,this.first_print_pos_y=e-40,this.print_max=i-10,this.addControls(),this.nextIndex=0,this.commands=[],this.cmd(rt.createLabel,0,"",20,10,0),this.nextIndex=1,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}addControls(){this.controls=[],this.insertField=xt("Text",""),this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4,!0),this.controls.push(this.insertField),this.insertButton=xt("Button","Insert"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.deleteField=xt("Text",""),this.deleteField.onkeydown=this.returnSubmit(this.deleteField,this.deleteCallback.bind(this),4,!0),this.controls.push(this.deleteField),this.deleteButton=xt("Button","Delete"),this.deleteButton.onclick=this.deleteCallback.bind(this),this.controls.push(this.deleteButton),Dt(),this.findField=xt("Text",""),this.findField.onkeydown=this.returnSubmit(this.findField,this.findCallback.bind(this),4,!0),this.controls.push(this.findField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt(),this.printButton=xt("Button","Print"),this.printButton.onclick=this.printCallback.bind(this),this.controls.push(this.printButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}reset(){this.nextIndex=1,this.treeRoot=null}insertCallback(){let t=this.insertField.value;t=this.normalizeNumber(t,4),""!==t&&(this.insertField.value="",this.implementAction(this.insertElement.bind(this),parseInt(t)))}deleteCallback(){let t=this.deleteField.value;""!==t&&(t=this.normalizeNumber(t,4),this.deleteField.value="",this.implementAction(this.deleteElement.bind(this),parseInt(t)))}splay(t){return null!=this.treeRoot&&(this.treeRoot.data===t||(t<this.treeRoot.data?null!=this.treeRoot.left&&(this.treeRoot.left.data===t?(this.singleRotateRight(this.treeRoot),!0):t<this.treeRoot.left.data?null==this.treeRoot.left.left?(this.singleRotateRight(this.treeRoot),this.splay(t)):(this.zigZigRight(this.treeRoot),this.splay(t)):null==this.treeRoot.left.right?(this.singleRotateRight(this.treeRoot),this.splay(t)):(this.doubleRotateRight(this.treeRoot),this.splay(t))):null!=this.treeRoot.right&&(this.treeRoot.right.data===t?(this.singleRotateLeft(this.treeRoot),!0):t>this.treeRoot.right.data?null==this.treeRoot.right.right?(this.singleRotateLeft(this.treeRoot),this.splay(t)):(this.zigZigLeft(this.treeRoot),this.splay(t)):null==this.treeRoot.right.left?(this.singleRotateLeft(this.treeRoot),this.splay(t)):(this.doubleRotateLeft(this.treeRot),this.splay(t)))))}printCallback(){this.implementAction(this.printTree.bind(this))}printTree(){if(this.commands=[],null!=this.treeRoot){this.highlightID=this.nextIndex++;const t=this.nextIndex;this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",this.treeRoot.x,this.treeRoot.y),this.xPosOfNextLabel=50,this.yPosOfNextLabel=this.first_print_pos_y,this.printTreeRec(this.treeRoot),this.cmd(rt.delete,this.highlightID),this.cmd(rt.step);for(let i=t;i<this.nextIndex;i++)this.cmd(rt.delete,i);this.nextIndex=this.highlightID}return this.commands}printTreeRec(t){this.cmd(rt.step),null!=t.left&&(this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.printTreeRec(t.left),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step));const i=this.nextIndex++;this.cmd(rt.createLabel,i,t.data,t.x,t.y),this.cmd(rt.setForegroundColor,i,"#007700"),this.cmd(rt.move,i,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=50,this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=50,this.yPosOfNextLabel+=20),null!=t.right&&(this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.printTreeRec(t.right),this.cmd(rt.move,this.highlightID,t.x,t.y),this.cmd(rt.step))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){return this.commands=[],this.recClear(this.treeRoot),this.treeRoot=null,this.commands}recClear(t){null!=t&&(this.cmd(rt.delete,t.graphicID),this.recClear(t.left),this.recClear(t.right))}findCallback(){const t=this.normalizeNumber(this.findField.value,4);this.findField.value="",this.implementAction(this.findElement.bind(this),parseInt(t))}findElement(t){this.commands=[],this.highlightID=this.nextIndex++;return this.doFind(this.treeRoot,t)?this.cmd(rt.setText,0,"Element "+t+" found."):this.cmd(rt.setText,0,"Element "+t+" not found."),this.commands}doFind(t,i){return this.cmd(rt.setText,0,"Searching for "+i),null!=t?(this.cmd(rt.setHighlight,t.graphicID,1),t.data===i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" = "+i+" (Element found!)"),this.cmd(rt.step),this.cmd(rt.setText,0,"Splaying found node to root of tree"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.splayUp(t),!0):t.data>i?(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" < "+t.data+" (look to left subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.left?(this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",t.x,t.y),this.cmd(rt.move,this.highlightID,t.left.x,t.left.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID),this.doFind(t.left,i)):(this.splayUp(t),!1)):(this.cmd(rt.setText,0,"Searching for "+i+" : "+i+" > "+t.data+" (look to right subtree)"),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),null!=t.right?(this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",t.x,t.y),this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID),this.doFind(t.right,i)):(this.splayUp(t),!1))):(this.cmd(rt.setText,0,"Searching for "+i+" : < Empty Tree > (Element not found)"),this.cmd(rt.step),this.cmd(rt.setText,0,"Searching for "+i+" :  (Element not found)"),!1)}insertElement(t){if(this.commands=[],this.cmd(rt.setText,0,"Inserting "+t),this.highlightID=this.nextIndex++,null==this.treeRoot)this.cmd(rt.createCircle,this.nextIndex,t,this.startingX,50),this.cmd(rt.setForegroundColor,this.nextIndex,"#007700"),this.cmd(rt.setBackgroundColor,this.nextIndex,"#EEFFEE"),this.cmd(rt.step),this.treeRoot=new Zt(t,this.nextIndex,this.startingX,50),this.nextIndex+=1;else{this.cmd(rt.createCircle,this.nextIndex,t,100,100),this.cmd(rt.setForegroundColor,this.nextIndex,"#007700"),this.cmd(rt.setBackgroundColor,this.nextIndex,"#EEFFEE"),this.cmd(rt.step);const i=new Zt(t,this.nextIndex,100,100);this.nextIndex+=1,this.cmd(rt.setHighlight,i.graphicID,1),this.insert(i,this.treeRoot),this.resizeTree(),this.cmd(rt.setText,0,"Splay inserted element to root of tree"),this.cmd(rt.step),this.splayUp(i)}return this.cmd(rt.setText,0,""),this.commands}insert(t,i){let e=!1;this.cmd(rt.setHighlight,i.graphicID,1),this.cmd(rt.setHighlight,t.graphicID,1),t.data<i.data?this.cmd(rt.setText,0,t.data+" < "+i.data+".  Looking at left subtree"):t.data>i.data?this.cmd(rt.setText,0,t.data+" >= "+i.data+".  Looking at right subtree"):(this.cmd(rt.setText,0,t.data+" = "+i.data+". Ignoring duplicate"),e=!0),this.cmd(rt.step),this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),e?this.cmd(rt.delete,t.graphicID,0):t.data<i.data?null==i.left?(this.cmd(rt.setText,0,"Found null tree, inserting element"),this.cmd(rt.setHighlight,t.graphicID,0),i.left=t,t.parent=i,this.cmd(rt.connect,i.graphicID,t.graphicID,"#007700")):(this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",i.x,i.y),this.cmd(rt.move,this.highlightID,i.left.x,i.left.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID),this.insert(t,i.left)):null==i.right?(this.cmd(rt.setText,0,"Found null tree, inserting element"),this.cmd(rt.setHighlight,t.graphicID,0),i.right=t,t.parent=i,this.cmd(rt.connect,i.graphicID,t.graphicID,"#007700"),t.x=i.x+25,t.y=i.y+50,this.cmd(rt.move,t.graphicID,t.x,t.y)):(this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",i.x,i.y),this.cmd(rt.move,this.highlightID,i.right.x,i.right.y),this.cmd(rt.step),this.cmd(rt.delete,this.highlightID),this.insert(t,i.right))}deleteElement(t){return this.commands=[],this.cmd(rt.setText,0,"Deleting "+t),this.cmd(rt.step),this.cmd(rt.setText,0,""),this.highlightID=this.nextIndex++,this.treeDelete(this.treeRoot,t),this.cmd(rt.setText,0,""),this.commands}treeDelete(t,i){this.cmd(rt.setText,0,"Finding "+i+" and splaying to rooot"),this.cmd(rt.step);const e=this.doFind(this.treeRoot,i);if(this.cmd(rt.setText,0,"Removing root, leaving left and right trees"),this.cmd(rt.step),e)if(null==this.treeRoot.right)this.cmd(rt.delete,this.treeRoot.graphicID),this.cmd(rt.setText,0,"No right tree, make left tree the root."),this.cmd(rt.step),this.treeRoot=this.treeRoot.left,this.treeRoot.parent=null,this.resizeTree();else if(null==this.treeRoot.left)this.cmd(rt.delete,this.treeRoot.graphicID),this.cmd(rt.setText,0,"No left tree, make right tree the root."),this.cmd(rt.step),this.treeRoot=this.treeRoot.right,this.treeRoot.parent=null,this.resizeTree();else{const t=this.treeRoot.right,i=this.treeRoot.left,e=this.treeRoot.graphicID;this.cmd(rt.disconnect,this.treeRoot.graphicID,i.graphicID),this.cmd(rt.disconnect,this.treeRoot.graphicID,t.graphicID),this.cmd(rt.setAlpha,this.treeRoot.graphicID,0),this.cmd(rt.setText,0,"Splay largest element in left tree to root"),this.cmd(rt.step),i.parent=null;const s=this.findMax(i);this.splayUp(s),this.cmd(rt.setText,0,"Left tree now has no right subtree, connect left and right trees"),this.cmd(rt.step),this.cmd(rt.connect,s.graphicID,t.graphicID,"#007700"),s.parent=null,s.right=t,t.parent=s,this.treeRoot=s,this.cmd(rt.delete,e),this.resizeTree()}}singleRotateRight(t){const i=t,e=t.left,s=e.right;this.cmd(rt.setText,0,"Zig Right"),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.step),null!=s&&(this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,i.graphicID,s.graphicID,"#007700"),s.parent=i),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),e.parent=i.parent,null==i.parent?this.treeRoot=e:(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID,"#007700"),this.cmd(rt.connect,i.parent.graphicID,e.graphicID,"#007700"),i.isLeftChild()?i.parent.left=e:i.parent.right=e),e.right=i,i.parent=e,i.left=s,this.resizeTree()}zigZigRight(t){const i=t,e=t.left,s=t.left.left,h=s.right,a=e.right;this.cmd(rt.setText,0,"Zig-Zig Right"),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.setEdgeHighlight,e.graphicID,s.graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,0),this.cmd(rt.setEdgeHighlight,e.graphicID,s.graphicID,0),null!=i.parent?(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID),this.cmd(rt.connect,i.parent.graphicID,s.graphicID,"#007700"),i.isLeftChild()?i.parent.left=s:i.parent.right=s):this.treeRoot=s,null!=h&&(this.cmd(rt.disconnect,s.graphicID,h.graphicID),this.cmd(rt.connect,e.graphicID,h.graphicID,"#007700"),h.parent=e),null!=a&&(this.cmd(rt.disconnect,e.graphicID,a.graphicID),this.cmd(rt.connect,i.graphicID,a.graphicID,"#007700"),a.parent=i),this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,s.graphicID,e.graphicID,"#007700"),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),s.right=e,s.parent=i.parent,e.parent=s,e.left=h,e.right=i,i.parent=e,i.left=a,this.resizeTree()}zigZigLeft(t){const i=t,e=t.right,s=t.right.right,h=e.left,a=s.left;this.cmd(rt.setText,0,"Zig-Zig Left"),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.setEdgeHighlight,e.graphicID,s.graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,0),this.cmd(rt.setEdgeHighlight,e.graphicID,s.graphicID,0),null!=i.parent?(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID),this.cmd(rt.connect,i.parent.graphicID,s.graphicID,"#007700"),i.isLeftChild()?i.parent.left=s:i.parent.right=s):this.treeRoot=s,null!=h&&(this.cmd(rt.disconnect,e.graphicID,h.graphicID),this.cmd(rt.connect,i.graphicID,h.graphicID,"#007700"),h.parent=i),null!=a&&(this.cmd(rt.disconnect,s.graphicID,a.graphicID),this.cmd(rt.connect,e.graphicID,a.graphicID,"#007700"),a.parent=e),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,s.graphicID,e.graphicID,"#007700"),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),s.parent=i.parent,i.right=h,e.left=i,i.parent=e,e.right=a,s.left=e,e.parent=s,this.resizeTree()}singleRotateLeft(t){const i=t,e=t.right,s=e.left;this.cmd(rt.setText,0,"Zig Left"),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.step),null!=s&&(this.cmd(rt.disconnect,e.graphicID,s.graphicID),this.cmd(rt.connect,i.graphicID,s.graphicID,"#007700"),s.parent=i),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),e.parent=i.parent,null==i.parent?this.treeRoot=e:(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID,"#007700"),this.cmd(rt.connect,i.parent.graphicID,e.graphicID,"#007700"),i.isLeftChild()?i.parent.left=e:i.parent.right=e),e.left=i,i.parent=e,i.right=s,this.resizeTree()}splayUp(t){null!=t.parent&&(null==t.parent.parent?t.isLeftChild()?this.singleRotateRight(t.parent):this.singleRotateLeft(t.parent):t.isLeftChild()&&!t.parent.isLeftChild()?(this.doubleRotateLeft(t.parent.parent),this.splayUp(t)):!t.isLeftChild()&&t.parent.isLeftChild()?(this.doubleRotateRight(t.parent.parent),this.splayUp(t)):t.isLeftChild()?(this.zigZigRight(t.parent.parent),this.splayUp(t)):(this.zigZigLeft(t.parent.parent),this.splayUp(t)))}findMax(t){if(null!=t.right){for(this.highlightID=this.nextIndex++,this.cmd(rt.createHighlightCircle,this.highlightID,"#007700",t.x,t.y),this.cmd(rt.step);null!=t.right;)this.cmd(rt.move,this.highlightID,t.right.x,t.right.y),this.cmd(rt.step),t=t.right;return this.cmd(rt.delete,this.highlightID),t}return t}doubleRotateRight(t){this.cmd(rt.setText,0,"Zig-Zag Right");const i=t.left,e=t.left.right,s=t,h=e.left,a=e.right;this.cmd(rt.setEdgeHighlight,s.graphicID,i.graphicID,1),this.cmd(rt.setEdgeHighlight,i.graphicID,e.graphicID,1),this.cmd(rt.step),null!=h&&(this.cmd(rt.disconnect,e.graphicID,h.graphicID),h.parent=i,i.right=h,this.cmd(rt.connect,i.graphicID,h.graphicID,"#007700")),null!=a&&(this.cmd(rt.disconnect,e.graphicID,a.graphicID),a.parent=s,s.left=h,this.cmd(rt.connect,s.graphicID,a.graphicID,"#007700")),null==s.parent?(e.parent=null,this.treeRoot=e):(this.cmd(rt.disconnect,s.parent.graphicID,s.graphicID),this.cmd(rt.connect,s.parent.graphicID,e.graphicID,"#007700"),s.isLeftChild()?s.parent.left=e:s.parent.right=e,e.parent=s.parent,s.parent=e),this.cmd(rt.disconnect,s.graphicID,i.graphicID),this.cmd(rt.disconnect,i.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),this.cmd(rt.connect,e.graphicID,s.graphicID,"#007700"),e.left=i,i.parent=e,e.right=s,s.parent=e,i.right=h,s.left=a,this.resizeTree()}doubleRotateLeft(t){this.cmd(rt.setText,0,"Zig-Zag Left");const i=t,e=t.right.left,s=t.right,h=e.left,a=e.right;this.cmd(rt.setEdgeHighlight,i.graphicID,s.graphicID,1),this.cmd(rt.setEdgeHighlight,s.graphicID,e.graphicID,1),this.cmd(rt.step),null!=h&&(this.cmd(rt.disconnect,e.graphicID,h.graphicID),h.parent=i,i.right=h,this.cmd(rt.connect,i.graphicID,h.graphicID,"#007700")),null!=a&&(this.cmd(rt.disconnect,e.graphicID,a.graphicID),a.parent=s,s.left=h,this.cmd(rt.connect,s.graphicID,a.graphicID,"#007700")),null==i.parent?(e.parent=null,this.treeRoot=e):(this.cmd(rt.disconnect,i.parent.graphicID,i.graphicID),this.cmd(rt.connect,i.parent.graphicID,e.graphicID,"#007700"),i.isLeftChild()?i.parent.left=e:i.parent.right=e,e.parent=i.parent,i.parent=e),this.cmd(rt.disconnect,i.graphicID,s.graphicID),this.cmd(rt.disconnect,s.graphicID,e.graphicID),this.cmd(rt.connect,e.graphicID,i.graphicID,"#007700"),this.cmd(rt.connect,e.graphicID,s.graphicID,"#007700"),e.left=i,i.parent=e,e.right=s,s.parent=e,i.right=h,s.left=a,this.resizeTree()}resizeTree(){let t=this.startingX;this.resizeWidths(this.treeRoot),null!=this.treeRoot&&(this.treeRoot.leftWidth>t?t=this.treeRoot.leftWidth:this.treeRoot.rightWidth>t&&(t=Math.max(this.treeRoot.leftWidth,2*t-this.treeRoot.rightWidth)),this.setNewPositions(this.treeRoot,t,50,0),this.animateNewPositions(this.treeRoot),this.cmd(rt.step))}setNewPositions(t,i,e,s){null!=t&&(t.y=e,-1===s?i-=t.rightWidth:1===s&&(i+=t.leftWidth),t.x=i,this.setNewPositions(t.left,i,e+50,-1),this.setNewPositions(t.right,i,e+50,1))}animateNewPositions(t){null!=t&&(this.cmd(rt.move,t.graphicID,t.x,t.y),this.animateNewPositions(t.left),this.animateNewPositions(t.right))}resizeWidths(t){return null==t?0:(t.leftWidth=Math.max(this.resizeWidths(t.left),25),t.rightWidth=Math.max(this.resizeWidths(t.right),25),t.leftWidth+t.rightWidth)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],AVL:["AVL",kt],BTree:["2-4 Tree",class extends ft{constructor(t,i,e){super(t,i,e),this.nextIndex=0,this.starting_x=i/2,this.preemptiveSplit=!1,this.addControls(),this.max_keys=3,this.min_keys=1,this.split_index=1,this.max_degree=4,this.messageID=this.nextIndex++,this.cmd(rt.createLabel,this.messageID,"",5,10,0),this.moveLabel1ID=this.nextIndex++,this.moveLabel2ID=this.nextIndex++,this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.commands=[],this.first_print_pos_y=e-60,this.xPosOfNextLabel=100,this.yPosOfNextLabel=200}addControls(){this.controls=[],this.insertField=xt("Text",""),this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4,!0),this.controls.push(this.insertField),this.insertButton=xt("Button","Insert"),this.insertButton.onclick=this.insertCallback.bind(this),this.controls.push(this.insertButton),Dt(),this.deleteField=xt("Text",""),this.deleteField.onkeydown=this.returnSubmit(this.deleteField,this.deleteCallback.bind(this),4,!0),this.controls.push(this.deleteField),this.deleteButton=xt("Button","Delete"),this.deleteButton.onclick=this.deleteCallback.bind(this),this.controls.push(this.deleteButton),Dt(),this.findField=xt("Text",""),this.findField.onkeydown=this.returnSubmit(this.findField,this.findCallback.bind(this),4,!0),this.controls.push(this.findField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt(),this.printButton=xt("Button","Print"),this.printButton.onclick=this.printCallback.bind(this),this.controls.push(this.printButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt(),ut("Promote with");const t=It(["second data","third data"],"Split Index");this.splitSecondSelect=t[0],this.splitThirdSelect=t[1],this.splitSecondSelect.onclick=()=>this.split_index=1,this.splitThirdSelect.onclick=()=>this.split_index=2,this.splitSecondSelect.checked=!0,this.split_index=1,Dt();const i=It(["Predecessor","Successor"],"Predecessor/Successor");this.predButton=i[0],this.succButton=i[1],this.predButton.onclick=this.predCallback.bind(this),this.succButton.onclick=this.succCallback.bind(this),this.succButton.checked=!0,this.predSucc="succ"}reset(){this.nextIndex=3,this.max_degree=4,this.max_keys=3,this.min_keys=1,this.split_index=1,this.treeRoot=null,this.ignoreInputs=!0,this.ignoreInputs=!1}enableUI(){let t;for(t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}maxDegreeChangedHandler(t){this.max_degree!==t&&(this.implementAction(this.changeDegree.bind(this),t),this.animationManager.skipForward(),this.animationManager.clearHistory())}predCallback(){"pred"!==this.predSucc&&(this.predSucc="pred")}succCallback(){"succ"!==this.predSucc&&(this.predSucc="succ")}insertCallback(){const t=this.normalizeNumber(this.insertField.value,4);""!==t&&(this.insertField.value="",this.implementAction(this.insertElement.bind(this),parseInt(t)))}deleteCallback(){let t=this.deleteField.value;""!==t&&(t=this.normalizeNumber(this.deleteField.value,4),this.deleteField.value="",this.implementAction(this.deleteElement.bind(this),parseInt(t)))}clearCallback(){this.implementAction(this.clearTree.bind(this))}premtiveSplitCallback(){this.preemptiveSplit!==this.premptiveSplitBox.checked&&this.implementAction(this.changePreemtiveSplit.bind(this),this.premptiveSplitBox.checked)}changePreemtiveSplit(t){return this.commands=[],this.cmd(rt.step),this.preemptiveSplit=t,this.premptiveSplitBox.checked!==this.preemptiveSplit&&(this.premptiveSplitBox.checked=this.preemptiveSplit),this.commands}printCallback(){this.implementAction(this.printTree.bind(this))}printTree(){this.commands=[],this.cmd(rt.setText,this.messageID,"Printing tree");const t=this.nextIndex;this.xPosOfNextLabel=50,this.yPosOfNextLabel=this.first_print_pos_y,this.printTreeRec(this.treeRoot),this.cmd(rt.step);for(let i=t;i<this.nextIndex;i++)this.cmd(rt.delete,i);return this.nextIndex=t,this.cmd(rt.setText,this.messageID,""),this.commands}printTreeRec(t){let i;if(this.cmd(rt.setHighlight,t.graphicID,1),t.isLeaf){for(let e=0;e<t.numKeys;e++)i=this.nextIndex++,this.cmd(rt.createLabel,i,t.keys[e],this.getLabelX(t,e),t.y),this.cmd(rt.setForegroundColor,i,"#007700"),this.cmd(rt.move,i,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=50,this.xPosOfNextLabel>990&&(this.xPosOfNextLabel=50,this.yPosOfNextLabel+=20);this.cmd(rt.setHighlight,t.graphicID,0)}else{this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[0].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[0].graphicID,0),this.printTreeRec(t.children[0]);for(let e=0;e<t.numKeys;e++)this.cmd(rt.setHighlight,t.graphicID,1),i=this.nextIndex++,this.cmd(rt.createLabel,i,t.keys[e],this.getLabelX(t,e),t.y),this.cmd(rt.setForegroundColor,i,"#007700"),this.cmd(rt.move,i,this.xPosOfNextLabel,this.yPosOfNextLabel),this.cmd(rt.step),this.xPosOfNextLabel+=50,this.xPosOfNextLabel>990&&(this.xPosOfNextLabel=50,this.yPosOfNextLabel+=20),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e+1].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e+1].graphicID,0),this.printTreeRec(t.children[e+1]);this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0)}}clearTree(){return this.commands=[],this.deleteTree(this.treeRoot),this.treeRoot=null,this.nextIndex=3,this.commands}deleteTree(t){if(null!=t){if(!t.isLeaf)for(let i=0;i<=t.numKeys;i++)this.cmd(rt.disconnect,t.graphicID,t.children[i].graphicID),this.deleteTree(t.children[i]);this.cmd(rt.delete,t.graphicID)}}changeDegree(t){this.commands=[],this.deleteTree(this.treeRoot),this.treeRoot=null,this.nextIndex=3;const i=t;return this.ignoreInputs=!0,this.maxDegreeRadioButtons[i-4].checked=!0,this.ignoreInputs=!1,this.max_degree=i,this.max_keys=i-1,this.min_keys=Math.floor((i+1)/2)-1,this.split_index=Math.floor((i-1)/2),0===this.commands.length&&this.cmd(rt.step),i%2!==0&&this.preemptiveSplit&&(this.preemptiveSplit=!1,this.premptiveSplitBox.checked=!1),this.commands}findCallback(){const t=this.normalizeNumber(this.findField.value,4);this.findField.value="",this.implementAction(this.findElement.bind(this),parseInt(t))}findElement(t){return this.commands=[],this.cmd(rt.setText,this.messageID,"Finding "+t),this.findInTree(this.treeRoot,t),this.commands}findInTree(t,i){if(null!=t){let e;for(this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),e=0;e<t.numKeys&&t.keys[e]<i;e++);e===t.numKeys?t.isLeaf?(this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setText,this.messageID,"Element "+i+" is not in the tree")):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,0),this.findInTree(t.children[t.numKeys],i)):t.keys[e]>i?t.isLeaf?(this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setText,this.messageID,"Element "+i+" is not in the tree")):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,0),this.findInTree(t.children[e],i)):(this.cmd(rt.setTextColor,t.graphicID,"#FF0000",e),this.cmd(rt.setText,this.messageID,"Element "+i+" found"),this.cmd(rt.step),this.cmd(rt.setTextColor,t.graphicID,"#007700",e),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.step))}else this.cmd(rt.setText,this.messageID,"Element "+i+" is not in the tree")}insertElement(t){return this.commands=[],this.cmd(rt.setText,this.messageID,"Inserting "+t),this.cmd(rt.step),null==this.treeRoot?(this.treeRoot=new Xt(this.nextIndex++,this.starting_x,30),this.cmd(rt.createBTreeNode,this.treeRoot.graphicID,40,20,1,this.starting_x,30,"#EEFFEE","#007700"),this.treeRoot.keys[0]=t,this.cmd(rt.setText,this.treeRoot.graphicID,t,0)):(this.preemptiveSplit?(this.treeRoot.numKeys===this.max_keys&&(this.split(this.treeRoot),this.resizeTree(),this.cmd(rt.step)),this.insertNotFull(this.treeRoot,t)):this.insert(this.treeRoot,t),this.treeRoot.isLeaf||this.resizeTree()),this.cmd(rt.setText,this.messageID,""),this.commands}insertNotFull(t,i){if(t.keys.includes(i)&&t.keys.findIndex(t=>t===i)<t.numKeys)return this.cmd(rt.setText,0,`${i} == ${i}. Ignoring duplicate!`),this.cmd(rt.step),void this.cmd(rt.setHighlight,t.graphicID,0);if(this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),t.isLeaf){this.cmd(rt.setText,this.messageID,"Inserting "+i+".  Inserting into a leaf"),t.numKeys++,this.cmd(rt.setNumElements,t.graphicID,t.numKeys);let e=t.numKeys-1;for(;e>0&&t.keys[e-1]>i;)t.keys[e]=t.keys[e-1],this.cmd(rt.setText,t.graphicID,t.keys[e],e),e--;t.keys[e]=i,this.cmd(rt.setText,t.graphicID,t.keys[e],e),this.cmd(rt.setHighlight,t.graphicID,0),this.resizeTree()}else{let e=0;for(;e<t.numKeys&&t.keys[e]<i;)e++;if(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),t.children[e].numKeys===this.max_keys){const s=this.split(t.children[e]);this.resizeTree(),this.cmd(rt.step),this.insertNotFull(s,i)}else this.insertNotFull(t.children[e],i)}}insert(t,i){if(this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),t.keys.includes(i)&&t.keys.findIndex(t=>t===i)<t.numKeys)return this.cmd(rt.setText,0,`${i} == ${i}. Ignoring duplicate!`),this.cmd(rt.step),void this.cmd(rt.setHighlight,t.graphicID,0);if(t.isLeaf){this.cmd(rt.setText,this.messageID,"Inserting "+i+".  Inserting into a leaf"),t.numKeys++,this.cmd(rt.setNumElements,t.graphicID,t.numKeys);let e=t.numKeys-1;for(;e>0&&t.keys[e-1]>i;)t.keys[e]=t.keys[e-1],this.cmd(rt.setText,t.graphicID,t.keys[e],e),e--;t.keys[e]=i,this.cmd(rt.setText,t.graphicID,t.keys[e],e),this.cmd(rt.setHighlight,t.graphicID,0),this.resizeTree(),this.insertRepair(t)}else{let e=0;for(;e<t.numKeys&&t.keys[e]<i;)e++;this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),this.insert(t.children[e],i)}}insertRepair(t){if(!(t.numKeys<=this.max_keys))if(null!=t.parent){const i=this.split(t);this.insertRepair(i)}else this.treeRoot=this.split(t)}split(t){this.cmd(rt.setText,this.messageID,"Node now contains too many keys.  Splittig ..."),this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0);const i=new Xt(this.nextIndex++,t.x+100,t.y);i.numKeys=t.numKeys-this.split_index-1;const e=t.keys[this.split_index];let s,h;if(null!=t.parent){for(s=t.parent,h=0;h<s.numKeys+1&&s.children[h]!==t;h++);if(h===s.numKeys+1)throw new Error("Couldn't find which child we were!");this.cmd(rt.setNumElements,s.graphicID,s.numKeys+1);for(let t=s.numKeys;t>h;t--)s.children[t+1]=s.children[t],this.cmd(rt.disconnect,s.graphicID,s.children[t].graphicID),this.cmd(rt.connect,s.graphicID,s.children[t].graphicID,"#007700",0,0,"",t+1),s.keys[t]=s.keys[t-1],this.cmd(rt.setText,s.graphicID,s.keys[t],t);s.numKeys++,s.keys[h]=e,this.cmd(rt.setText,s.graphicID,"",h),this.moveLabel1ID=this.nextIndex++,this.cmd(rt.createLabel,this.moveLabel1ID,e,this.getLabelX(t,this.split_index),t.y),this.cmd(rt.setForegroundColor,this.moveLabel1ID,"#007700"),this.cmd(rt.move,this.moveLabel1ID,this.getLabelX(s,h),s.y),s.children[h+1]=i,i.parent=s}this.cmd(rt.createBTreeNode,i.graphicID,40,20,t.numKeys-this.split_index-1,t.x,t.y,"#EEFFEE","#007700");for(let n=this.split_index+1;n<t.numKeys+1;n++)i.children[n-this.split_index-1]=t.children[n],null!=t.children[n]&&(i.isLeaf=!1,this.cmd(rt.disconnect,t.graphicID,t.children[n].graphicID),this.cmd(rt.connect,i.graphicID,i.children[n-this.split_index-1].graphicID,"#007700",0,0,"",n-this.split_index-1),null!=t.children[n]&&(t.children[n].parent=i),t.children[n]=null);for(let n=this.split_index+1;n<t.numKeys;n++)i.keys[n-this.split_index-1]=t.keys[n],this.cmd(rt.setText,i.graphicID,i.keys[n-this.split_index-1],n-this.split_index-1);const a=t;a.numKeys=this.split_index;for(let n=this.split_index;n<t.numKeys;n++)this.cmd(rt.setText,t.graphicID,"",n);return this.cmd(rt.setNumElements,t.graphicID,this.split_index),null!=t.parent?(this.cmd(rt.connect,s.graphicID,i.graphicID,"#007700",0,0,"",h+1),this.resizeTree(),this.cmd(rt.step),this.cmd(rt.delete,this.moveLabel1ID),this.cmd(rt.setText,s.graphicID,e,h),t.parent):(this.treeRoot=new Xt(this.nextIndex++,this.starting_x,30),this.cmd(rt.createBTreeNode,this.treeRoot.graphicID,40,20,1,this.starting_x,30,"#EEFFEE","#007700"),this.treeRoot.keys[0]=e,this.cmd(rt.setText,this.treeRoot.graphicID,e,0),this.treeRoot.children[0]=a,this.treeRoot.children[1]=i,a.parent=this.treeRoot,i.parent=this.treeRoot,this.cmd(rt.connect,this.treeRoot.graphicID,a.graphicID,"#007700",0,0,"",0),this.cmd(rt.connect,this.treeRoot.graphicID,i.graphicID,"#007700",0,0,"",1),this.treeRoot.isLeaf=!1,this.treeRoot)}deleteElement(t){return this.commands=[],this.cmd(rt.setText,0,"Deleting "+t),this.cmd(rt.step),this.cmd(rt.setText,0,""),this.highlightID=this.nextIndex++,this.cmd(rt.setText,0,""),this.preemptiveSplit?this.doDeleteNotEmpty(this.treeRoot,t):this.doDelete(this.treeRoot,t),this.treeRoot&&0===this.treeRoot.numKeys&&(this.cmd(rt.step),this.cmd(rt.delete,this.treeRoot.graphicID),this.treeRoot=this.treeRoot.children[0],this.treeRoot.parent=null,this.resizeTree()),this.commands}doDeleteNotEmpty(t,i){if(null!=t){let e,s;for(this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),s=0;s<t.numKeys&&t.keys[s]<i;s++);if(s===t.numKeys)t.isLeaf?this.cmd(rt.setHighlight,t.graphicID,0):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,0),t.children[t.numKeys].numKeys===this.min_keys?t.children[t.numKeys-1].numKeys>this.min_keys?(e=this.stealFromLeft(t.children[t.numKeys],t.numKeys),this.doDeleteNotEmpty(e,i)):(e=this.mergeRight(t.children[t.numKeys-1]),this.doDeleteNotEmpty(e,i)):this.doDeleteNotEmpty(t.children[t.numKeys],i));else if(t.keys[s]>i)t.isLeaf?this.cmd(rt.setHighlight,t.graphicID,0):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s].graphicID,0),t.children[s].numKeys>this.min_keys?this.doDeleteNotEmpty(t.children[s],i):t.children[s+1].numKeys>this.min_keys?(e=this.stealFromRight(t.children[s],s),this.doDeleteNotEmpty(e,i)):(e=this.mergeRight(t.children[s]),this.doDeleteNotEmpty(e,i)));else if(this.cmd(rt.setTextColor,t.graphicID,"FF0000",s),this.cmd(rt.step),t.isLeaf){this.cmd(rt.setTextColor,t.graphicID,"#007700",s);for(let i=s;i<t.numKeys-1;i++)t.keys[i]=t.keys[i+1],this.cmd(rt.setText,t.graphicID,t.keys[i],i);t.numKeys--,this.cmd(rt.setText,t.graphicID,"",t.numKeys),this.cmd(rt.setNumElements,t.graphicID,t.numKeys),this.cmd(rt.setHighlight,t.graphicID,0),this.resizeTree(),this.cmd(rt.setText,this.messageID,"")}else{this.cmd(rt.setText,this.messageID,"Checking to see if tree to left of element to delete \nhas an extra key"),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s].graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s].graphicID,0);let h=t.children[s];if(t.children[s].numKeys===this.min_keys){if(this.cmd(rt.setText,this.messageID,"Tree to left of element to delete does not have an extra key.  \nLooking to the right ..."),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s+1].graphicID,1),this.cmd(rt.step),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[s+1].graphicID,0),t.children[s+1].numKeys===this.min_keys)return this.cmd(rt.setText,this.messageID,"Neither subtree has extra nodes.  Mergeing around the key to delete, \nand recursively deleting ..."),this.cmd(rt.step),this.cmd(rt.setTextColor,t.graphicID,"#007700",s),e=this.mergeRight(t.children[s]),void this.doDeleteNotEmpty(e,i);{this.cmd(rt.setText,this.messageID,"Tree to right of element to delete does have an extra key. \nFinding the smallest key in that subtree ..."),this.cmd(rt.step);let i=t.children[s+1];for(;!i.isLeaf;)this.cmd(rt.setHighlight,i.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,i.graphicID,0),i=i.children[0].numKeys===this.min_keys?i.children[1].numKeys===this.min_keys?this.mergeRight(i.children[0]):this.stealFromRight(i.children[0],0):i.children[0];for(this.cmd(rt.setHighlight,i.graphicID,1),t.keys[s]=i.keys[0],this.cmd(rt.setTextColor,t.graphicID,"#007700",s),this.cmd(rt.setText,t.graphicID,"",s),this.cmd(rt.setText,i.graphicID,"",0),this.cmd(rt.createLabel,this.moveLabel1ID,i.keys[0],this.getLabelX(i,0),i.y),this.cmd(rt.move,this.moveLabel1ID,this.getLabelX(t,s),t.y),this.cmd(rt.step),this.cmd(rt.delete,this.moveLabel1ID),this.cmd(rt.setText,t.graphicID,t.keys[s],s),s=1;s<i.numKeys;s++)i.keys[s-1]=i.keys[s],this.cmd(rt.setText,i.graphicID,i.keys[s-1],s-1);this.cmd(rt.setText,i.graphicID,"",i.numKeys-1),i.numKeys--,this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setNumElements,i.graphicID,i.numKeys),this.resizeTree(),this.cmd(rt.setText,this.messageID,"")}}else{for(this.cmd(rt.setText,this.messageID,"Tree to left of element to delete does have \nan extra key. Finding the largest key in that subtree ..."),this.cmd(rt.step);!h.isLeaf;)this.cmd(rt.setHighlight,h.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,h.graphicID,0),h.children[h.numKeys].numKeys===this.min_keys?(h.children[h.numKeys-1]>this.min_keys&&(h=this.stealFromLeft(h.children[h.numKeys],h.numKeys)),h=this.mergeRight(h.children[h.numKeys-1])):h=h.children[h.numKeys];this.cmd(rt.setHighlight,h.graphicID,1),t.keys[s]=h.keys[h.numKeys-1],this.cmd(rt.setTextColor,t.graphicID,"#007700",s),this.cmd(rt.setText,t.graphicID,"",s),this.cmd(rt.setText,h.graphicID,"",h.numKeys-1),this.cmd(rt.createLabel,this.moveLabel1ID,t.keys[s],this.getLabelX(h,h.numKeys-1),h.y),this.cmd(rt.move,this.moveLabel1ID,this.getLabelX(t,s),t.y),this.cmd(rt.step),this.cmd(rt.delete,this.moveLabel1ID),this.cmd(rt.setText,t.graphicID,t.keys[s],s),h.numKeys--,this.cmd(rt.setHighlight,h.graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setNumElements,h.graphicID,h.numKeys),this.resizeTree(),this.cmd(rt.setText,this.messageID,"")}}}}doDelete(t,i){if(null!=t){let e;for(this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.step),e=0;e<t.numKeys&&t.keys[e]<i;e++);if(e===t.numKeys)t.isLeaf?this.cmd(rt.setHighlight,t.graphicID,0):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[t.numKeys].graphicID,0),this.doDelete(t.children[t.numKeys],i));else if(t.keys[e]>i)t.isLeaf?this.cmd(rt.setHighlight,t.graphicID,0):(this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setEdgeHighlight,t.graphicID,t.children[e].graphicID,0),this.doDelete(t.children[e],i));else if(this.cmd(rt.setTextColor,t.graphicID,"#FF0000",e),this.cmd(rt.step),t.isLeaf){this.cmd(rt.setTextColor,t.graphicID,"#007700",e);for(let i=e;i<t.numKeys-1;i++)t.keys[i]=t.keys[i+1],this.cmd(rt.setText,t.graphicID,t.keys[i],i);t.numKeys--,this.cmd(rt.setText,t.graphicID,"",t.numKeys),this.cmd(rt.setNumElements,t.graphicID,t.numKeys),this.cmd(rt.setHighlight,t.graphicID,0),this.repairAfterDelete(t)}else{let i;if("pred"===this.predSucc){for(i=t.children[e];!i.isLeaf;)this.cmd(rt.setHighlight,i.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,i.graphicID,0),i=i.children[i.numKeys];this.cmd(rt.setHighlight,i.graphicID,1),t.keys[e]=i.keys[i.numKeys-1],this.cmd(rt.setTextColor,t.graphicID,"#007700",e),this.cmd(rt.setText,t.graphicID,"",e),this.cmd(rt.setText,i.graphicID,"",i.numKeys-1),this.cmd(rt.createLabel,this.moveLabel1ID,t.keys[e],this.getLabelX(i,i.numKeys-1),i.y)}else{for(i=t.children[e+1];!i.isLeaf;)this.cmd(rt.setHighlight,i.graphicID,1),this.cmd(rt.step),this.cmd(rt.setHighlight,i.graphicID,0),i=i.children[0];this.cmd(rt.setHighlight,i.graphicID,1),t.keys[e]=i.keys[0],this.cmd(rt.setTextColor,t.graphicID,"#007700",e),this.cmd(rt.setText,t.graphicID,"",e),this.cmd(rt.setText,i.graphicID,"",0),this.cmd(rt.createLabel,this.moveLabel1ID,t.keys[e],this.getLabelX(i,0),i.y)}if(this.cmd(rt.move,this.moveLabel1ID,this.getLabelX(t,e),t.y),this.cmd(rt.step),this.cmd(rt.delete,this.moveLabel1ID),this.cmd(rt.setText,t.graphicID,t.keys[e],e),i.numKeys--,this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.setHighlight,t.graphicID,0),"succ"===this.predSucc)for(let t=0;t<i.numKeys;t++)i.keys[t]=i.keys[t+1],this.cmd(rt.setText,i.graphicID,i.keys[t],t);this.cmd(rt.setNumElements,i.graphicID,i.numKeys),this.repairAfterDelete(i)}}}mergeRight(t){this.cmd(rt.setText,this.messageID,"Merging node");const i=t.parent;let e=0;for(e=0;i.children[e]!==t;e++);const s=i.children[e+1];this.cmd(rt.setHighlight,t.graphicID,1),this.cmd(rt.setHighlight,i.graphicID,1),this.cmd(rt.setHighlight,s.graphicID,1),this.cmd(rt.step),this.cmd(rt.setNumElements,t.graphicID,t.numKeys+s.numKeys+1),t.x=(t.x+s.x)/2,this.cmd(rt.setPosition,t.graphicID,t.x,t.y),t.keys[t.numKeys]=i.keys[e];const h=t.numKeys;this.cmd(rt.setText,t.graphicID,"",t.numKeys),this.cmd(rt.createLabel,this.moveLabel1ID,i.keys[e],this.getLabelX(i,e),i.y);for(let a=0;a<s.numKeys;a++)t.keys[t.numKeys+1+a]=s.keys[a],this.cmd(rt.setText,t.graphicID,t.keys[t.numKeys+1+a],t.numKeys+1+a),this.cmd(rt.setText,s.graphicID,"",a);if(!t.isLeaf)for(let a=0;a<=s.numKeys;a++)this.cmd(rt.disconnect,s.graphicID,s.children[a].graphicID),t.children[t.numKeys+1+a]=s.children[a],t.children[t.numKeys+1+a].parent=t,this.cmd(rt.connect,t.graphicID,t.children[t.numKeys+1+a].graphicID,"#007700",0,0,"",t.numKeys+1+a);this.cmd(rt.disconnect,i.graphicID,s.graphicID);for(let a=e+1;a<i.numKeys;a++)this.cmd(rt.disconnect,i.graphicID,i.children[a+1].graphicID),i.children[a]=i.children[a+1],this.cmd(rt.connect,i.graphicID,i.children[a].graphicID,"#007700",0,0,"",a),i.keys[a-1]=i.keys[a],this.cmd(rt.setText,i.graphicID,i.keys[a-1],a-1);return this.cmd(rt.setText,i.graphicID,"",i.numKeys-1),i.numKeys--,this.cmd(rt.setNumElements,i.graphicID,i.numKeys),this.cmd(rt.setHighlight,t.graphicID,0),this.cmd(rt.setHighlight,i.graphicID,0),this.cmd(rt.delete,s.graphicID),t.numKeys=t.numKeys+s.numKeys+1,this.cmd(rt.move,this.moveLabel1ID,this.getLabelX(t,h),t.y),this.cmd(rt.step),this.cmd(rt.delete,this.moveLabel1ID),this.cmd(rt.setText,t.graphicID,t.keys[h],h),this.cmd(rt.setText,this.messageID,""),t}stealFromRight(t,i){const e=t.parent;this.cmd(rt.setNumElements,t.graphicID,t.numKeys+1),this.cmd(rt.setText,this.messageID,"Stealing from right sibling");const s=e.children[i+1];t.numKeys++,this.cmd(rt.setNumElements,t.graphicID,t.numKeys),this.cmd(rt.setText,t.graphicID,"",t.numKeys-1),this.cmd(rt.setText,e.graphicID,"",i),this.cmd(rt.setText,s.graphicID,"",0);const h=this.nextIndex++,a=this.nextIndex++;if(this.cmd(rt.createLabel,h,s.keys[0],this.getLabelX(s,0),s.y),this.cmd(rt.createLabel,a,e.keys[i],this.getLabelX(e,i),e.y),this.cmd(rt.setForegroundColor,h,"#007700"),this.cmd(rt.setForegroundColor,a,"#007700"),this.cmd(rt.move,h,this.getLabelX(e,i),e.y),this.cmd(rt.move,a,this.getLabelX(t,t.numKeys-1),t.y),this.cmd(rt.step),this.cmd(rt.delete,h),this.cmd(rt.delete,a),t.keys[t.numKeys-1]=e.keys[i],e.keys[i]=s.keys[0],this.cmd(rt.setText,t.graphicID,t.keys[t.numKeys-1],t.numKeys-1),this.cmd(rt.setText,e.graphicID,e.keys[i],i),!t.isLeaf){t.children[t.numKeys]=s.children[0],t.children[t.numKeys].parent=t,this.cmd(rt.disconnect,s.graphicID,s.children[0].graphicID),this.cmd(rt.connect,t.graphicID,t.children[t.numKeys].graphicID,"#007700",0,0,"",t.numKeys);for(let t=1;t<s.numKeys+1;t++)this.cmd(rt.disconnect,s.graphicID,s.children[t].graphicID),s.children[t-1]=s.children[t],this.cmd(rt.connect,s.graphicID,s.children[t-1].graphicID,"#007700",0,0,"",t-1)}for(let n=1;n<s.numKeys;n++)s.keys[n-1]=s.keys[n],this.cmd(rt.setText,s.graphicID,s.keys[n-1],n-1);return this.cmd(rt.setText,s.graphicID,"",s.numKeys-1),s.numKeys--,this.cmd(rt.setNumElements,s.graphicID,s.numKeys),this.resizeTree(),this.cmd(rt.setText,this.messageID,""),t}stealFromLeft(t,i){const e=t.parent;t.numKeys++,this.cmd(rt.setNumElements,t.graphicID,t.numKeys),this.cmd(rt.setText,this.messageID,"Node has too few keys.  Stealing from left sibling.");for(let n=t.numKeys-1;n>0;n--)t.keys[n]=t.keys[n-1],this.cmd(rt.setText,t.graphicID,t.keys[n],n);const s=e.children[i-1];this.cmd(rt.setText,t.graphicID,"",0),this.cmd(rt.setText,e.graphicID,"",i-1),this.cmd(rt.setText,s.graphicID,"",s.numKeys-1);const h=this.nextIndex++,a=this.nextIndex++;if(this.cmd(rt.createLabel,h,s.keys[s.numKeys-1],this.getLabelX(s,s.numKeys-1),s.y),this.cmd(rt.createLabel,a,e.keys[i-1],this.getLabelX(e,i-1),e.y),this.cmd(rt.setForegroundColor,h,"#007700"),this.cmd(rt.setForegroundColor,a,"#007700"),this.cmd(rt.move,h,this.getLabelX(e,i-1),e.y),this.cmd(rt.move,a,this.getLabelX(t,0),t.y),this.cmd(rt.step),this.cmd(rt.delete,h),this.cmd(rt.delete,a),!t.isLeaf){for(let i=t.numKeys;i>0;i--)this.cmd(rt.disconnect,t.graphicID,t.children[i-1].graphicID),t.children[i]=t.children[i-1],this.cmd(rt.connect,t.graphicID,t.children[i].graphicID,"#007700",0,0,"",i);t.children[0]=s.children[s.numKeys],this.cmd(rt.disconnect,s.graphicID,s.children[s.numKeys].graphicID),this.cmd(rt.connect,t.graphicID,t.children[0].graphicID,"#007700",0,0,"",0),s.children[s.numKeys]=null,t.children[0].parent=t}return t.keys[0]=e.keys[i-1],this.cmd(rt.setText,t.graphicID,t.keys[0],0),e.keys[i-1]=s.keys[s.numKeys-1],this.cmd(rt.setText,e.graphicID,e.keys[i-1],i-1),this.cmd(rt.setText,s.graphicID,"",s.numKeys-1),s.numKeys--,this.cmd(rt.setNumElements,s.graphicID,s.numKeys),this.resizeTree(),this.cmd(rt.setText,this.messageID,""),t}repairAfterDelete(t){if(t.numKeys<this.min_keys)if(null==t.parent)0===t.numKeys&&(this.cmd(rt.step),this.cmd(rt.delete,t.graphicID),this.treeRoot=t.children[0],null!=this.treeRoot&&(this.treeRoot.parent=null),this.resizeTree());else{const i=t.parent;let e,s;for(e=0;i.children[e]!==t;e++);e>0&&i.children[e-1].numKeys>this.min_keys?this.stealFromLeft(t,e):e<i.numKeys&&i.children[e+1].numKeys>this.min_keys?this.stealFromRight(t,e):0===e?(s=this.mergeRight(t),this.repairAfterDelete(s.parent)):(s=this.mergeRight(i.children[e-1]),this.repairAfterDelete(s.parent))}}getLabelX(t,i){return t.x-40*t.numKeys/2+20+40*i}resizeTree(){this.resizeWidths(this.treeRoot),this.setNewPositions(this.treeRoot,this.starting_x,30),this.animateNewPositions(this.treeRoot)}setNewPositions(t,i,e){if(null!=t&&(t.y=e,t.x=i,!t.isLeaf)){const s=i-t.width/2;let h=0;for(let i=0;i<t.numKeys+1;i++)this.setNewPositions(t.children[i],s+h+t.widths[i]/2,e+50),h+=t.widths[i]}}animateNewPositions(t){if(null==t)return;let i;for(i=0;i<t.numKeys+1;i++)this.animateNewPositions(t.children[i]);this.cmd(rt.move,t.graphicID,t.x,t.y)}resizeWidths(t){if(null==t)return 0;if(t.isLeaf){for(let i=0;i<t.numKeys+1;i++)t.widths[i]=0;return t.width=40*t.numKeys+3,t.width}{let i=0;for(let e=0;e<t.numKeys+1;e++)t.widths[e]=this.resizeWidths(t.children[e]),i+=t.widths[e];return i=Math.max(i,40*t.numKeys+3),t.width=i,i}}}],BubbleSort:["Bubble Sort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt(),this.lastSwapCheckbox=pt("Enable last swap optimization",!0),this.lastSwapCheckbox.onclick=this.toggleLastSwap.bind(this),this.controls.push(this.lastSwapCheckbox)}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.displayData=[],this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure BubbleSort(array):"],["     end <- length of array"],["     start <- 0"],["     swapped <- start"],["     while start < end"],["          swapped <- start"],["          for j <- 0, end do"],["               if arr[j] > arr[j + 1]"],["                    swap arr[j], arr[j + 1]"],["                    swapped <- j"],["               end if"],["          end for"],["          end <- swapped"],["     end while"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,200),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.arrayID=[],this.displayData=[],this.removeCode(this.codeID),this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.codeID=this.addCodeToCanvasBase(this.code,50,200),qt||(this.cmd(rt.setText,this.codeID[3][0],"     sorted <- false"),this.cmd(rt.setText,this.codeID[4][0],"     while start < end and sorted is false"),this.cmd(rt.setText,this.codeID[5][0],"          sorted <- true"),this.cmd(rt.setText,this.codeID[9][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[12][0],"          end <- end - 1")),this.compCount=0}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);console.log(t),""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}toggleLastSwap(){this.implementAction(this.clear.bind(this)),qt?(this.cmd(rt.setText,this.codeID[3][0],"     sorted <- false"),this.cmd(rt.setText,this.codeID[4][0],"     while start < end and sorted is false"),this.cmd(rt.setText,this.codeID[5][0],"          sorted <- true"),this.cmd(rt.setText,this.codeID[9][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[12][0],"          end <- end - 1")):(this.cmd(rt.setText,this.codeID[3][0],"     swapped <- start"),this.cmd(rt.setText,this.codeID[4][0],"     while start < end"),this.cmd(rt.setText,this.codeID[5][0],"          swapped <- start"),this.cmd(rt.setText,this.codeID[9][0],"                    swapped <- j"),this.cmd(rt.setText,this.codeID[12][0],"          end <- swapped")),qt=!qt}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.compCount=0,this.displayData=[],this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.highlight(0,0),this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18);const i=this.arrayData.length,e=new Map,s=new Map;for(let l=0;l<i;l++){const t=e.has(this.arrayData[l])?e.get(this.arrayData[l]):0;t>0&&s.set(this.arrayData[l],"a"),e.set(this.arrayData[l],t+1)}for(let l=0;l<i;l++){this.arrayID[l]=this.nextIndex++;const t=50*l+100,i=130;let e=this.arrayData[l].toString();if(s.has(this.arrayData[l])){const t=s.get(this.arrayData[l]);e+=t,s.set(this.arrayData[l],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[l]=e,this.cmd(rt.createRectangle,this.arrayID[l],e,50,50,t,i)}this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",100,130),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",150,130),this.cmd(rt.setHighlight,this.jPointerID,1),this.cmd(rt.step),this.unhighlight(0,0);let h=!0,a=this.arrayData.length-1,n=0;this.highlight(4,0),this.cmd(rt.step);do{this.unhighlight(4,0),this.highlight(5,0),this.cmd(rt.step),this.unhighlight(5,0),h=!0,this.highlight(6,0);for(let t=0;t<a;t++)this.movePointers(t,t+1),this.highlight(7,0),this.unhighlight(6,0),this.cmd(rt.step),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.unhighlight(7,0),this.arrayData[t]>this.arrayData[t+1]&&(this.swap(t,t+1),h=!1,n=t);if(this.unhighlight(6,0),this.highlight(12,0),qt?a=n:a--,!h)for(let t=a+1;t<this.arrayData.length;t++)this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71");this.cmd(rt.step),this.unhighlight(12,0)}while(!h);this.highlight(4,0),this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.step),this.unhighlight(4,0);for(let l=0;l<this.arrayData.length;l++)this.cmd(rt.setBackgroundColor,this.arrayID[l],"#2ECC71");return this.cmd(rt.step),this.commands}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,130);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,130),this.cmd(rt.step)}swap(t,i){this.highlight(8,0),this.highlight(9,0),this.cmd(rt.setForegroundColor,this.iPointerID,"#FF0000"),this.cmd(rt.setForegroundColor,this.jPointerID,"#FF0000");const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,130);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,130),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,130),this.cmd(rt.move,h,s,130),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.cmd(rt.setForegroundColor,this.iPointerID,"#0000FF"),this.cmd(rt.setForegroundColor,this.jPointerID,"#0000FF"),this.unhighlight(8,0),this.unhighlight(9,0),this.cmd(rt.step)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],CocktailSort:["Cocktail Shaker Sort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt(),this.lastSwapCheckbox=pt("Enable last swap optimization",!0),this.lastSwapCheckbox.onclick=this.toggleLastSwap.bind(this),this.controls.push(this.lastSwapCheckbox)}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.displayData=[],this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure CocktailSort(array):"],["     start <- 0, end <- length of array - 1"],["     swapped <- start"],["     while end > start"],["          swapped <- start"],["          for i <- start, end do"],["               if array[i] > array[i + 1]"],["                    swap array[i], array[i + 1]"],["                    swapped <- i"],["               end if"],["          end for"],["          end <- swapped"],["          for i <- end, start do"],["               if array[i] < array[i - 1]"],["                    swap array[i], array[i - 1]"],["                    swapped <- i"],["               end if"],["          end for"],["          start <- swapped"],["     end while"],["end procedure"]],console.log(this.nextIndex),this.codeID=this.addCodeToCanvasBase(this.code,50,180),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.compCount=0,this.arrayData=[],this.arrayID=[],this.displayData=[],this.removeCode(this.codeID),this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.codeID=this.addCodeToCanvasBase(this.code,50,180),Yt||(this.cmd(rt.setText,this.codeID[2][0],"     sorted <- false"),this.cmd(rt.setText,this.codeID[3][0],"     while start < end and sorted is false"),this.cmd(rt.setText,this.codeID[4][0],"          sorted <- true"),this.cmd(rt.setText,this.codeID[8][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[11][0],"          end <- end - 1"),this.cmd(rt.setText,this.codeID[15][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[18][0],"          start <- start + 1"))}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}toggleLastSwap(){Yt?(this.implementAction(this.clear.bind(this)),this.cmd(rt.setText,this.codeID[2][0],"     sorted <- false"),this.cmd(rt.setText,this.codeID[3][0],"     while start < end and sorted is false"),this.cmd(rt.setText,this.codeID[4][0],"          sorted <- true"),this.cmd(rt.setText,this.codeID[8][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[11][0],"          end <- end - 1"),this.cmd(rt.setText,this.codeID[15][0],"                    sorted <- false"),this.cmd(rt.setText,this.codeID[18][0],"          start <- start + 1")):(this.implementAction(this.clear.bind(this)),this.cmd(rt.setText,this.codeID[2][0],"     swapped <- start"),this.cmd(rt.setText,this.codeID[3][0],"     while start < end"),this.cmd(rt.setText,this.codeID[4][0],"          swapped <- start"),this.cmd(rt.setText,this.codeID[8][0],"                    swapped <- i"),this.cmd(rt.setText,this.codeID[11][0],"          end <- swapped"),this.cmd(rt.setText,this.codeID[15][0],"                    swapped <- i"),this.cmd(rt.setText,this.codeID[18][0],"          start <- swapped")),Yt=!Yt}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.compCount=0,this.displayData=[],this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.highlight(0,0),this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18),this.displayData=new Array(this.arrayData.length);const i=this.arrayData.length,e=new Map,s=new Map;for(let r=0;r<i;r++){const t=e.has(this.arrayData[r])?e.get(this.arrayData[r]):0;t>0&&s.set(this.arrayData[r],"a"),e.set(this.arrayData[r],t+1)}for(let r=0;r<i;r++){this.arrayID[r]=this.nextIndex++;const t=50*r+100,i=120;let e=this.arrayData[r].toString();if(s.has(this.arrayData[r])){const t=s.get(this.arrayData[r]);e+=t,s.set(this.arrayData[r],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[r]=e,this.cmd(rt.createRectangle,this.arrayID[r],e,50,50,t,i)}this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",100,120),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",150,120),this.cmd(rt.setHighlight,this.jPointerID,1),this.cmd(rt.step),this.unhighlight(0,0);let h=!0,a=0,n=this.arrayData.length-1,l=0;this.highlight(3,0),this.cmd(rt.step);do{this.unhighlight(3,0),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(4,0),this.highlight(5,0),h=!0;for(let t=a;t<n;t++)this.movePointers(t,t+1),this.unhighlight(5,0),this.highlight(6,0),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.step),this.unhighlight(6,0),this.arrayData[t]>this.arrayData[t+1]&&(this.highlight(7,0),this.highlight(8,0),this.swap(t,t+1),h=!1,l=t),this.cmd(rt.step),this.unhighlight(7,0),this.unhighlight(8,0);if(this.cmd(rt.step),this.unhighlight(5,0),this.highlight(11,0),Yt?n=l:n--,this.cmd(rt.step),this.unhighlight(11,0),!h){for(let t=n+1;t<this.arrayData.length;t++)this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71");this.cmd(rt.step)}if(this.highlight(12,0),this.cmd(rt.step),!h){h=!0;for(let t=n;t>a;t--)this.movePointers(t-1,t),this.unhighlight(12,0),this.highlight(13,0),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.step),this.unhighlight(13,0),+this.arrayData[t]<+this.arrayData[t-1]&&(this.highlight(14,0),this.highlight(15,0),this.swap(t,t-1),h=!1,l=t),this.cmd(rt.step),this.unhighlight(14,0),this.unhighlight(15,0);if(this.highlight(18,0),Yt?a=l:a++,this.cmd(rt.step),this.unhighlight(18,0),!h){for(let t=a-1;t>=0;t--)this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71");this.cmd(rt.step)}}this.unhighlight(12,0),this.highlight(3,0),this.cmd(rt.step)}while(!h);this.unhighlight(3,0),this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.step);for(let r=0;r<this.arrayData.length;r++)this.cmd(rt.setBackgroundColor,this.arrayID[r],"#2ECC71");return this.cmd(rt.step),this.commands}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,120);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,120),this.cmd(rt.step)}swap(t,i){this.cmd(rt.setForegroundColor,this.iPointerID,"#FF0000"),this.cmd(rt.setForegroundColor,this.jPointerID,"#FF0000");const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,120);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,120),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,120),this.cmd(rt.move,h,s,120),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.cmd(rt.setForegroundColor,this.iPointerID,"#0000FF"),this.cmd(rt.setForegroundColor,this.jPointerID,"#0000FF"),this.cmd(rt.step)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],InsertionSort:["Insertion Sort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.displayData=[],this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure InsertionSort(array):"],["     length <- length of array"],["     for i <- 1, length - 1 do"],["          j <- i"],["          while ","j > 0, ","array[j - 1] > array[j]"," do"],["               swap array[j-1], array[j] "],["               j <- j - 1"],["          end while"],["     end for"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,200),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.arrayID=[],this.displayData=[],this.removeCode(this.codeID),this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.addCodeToCanvasBase(this.code,50,200)}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.displayData=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18),this.displayData=new Array(this.arrayData.length);const i=this.arrayData.length,e=new Map,s=new Map;for(let h=0;h<i;h++){const t=e.has(this.arrayData[h])?e.get(this.arrayData[h]):0;t>0&&s.set(this.arrayData[h],"a"),e.set(this.arrayData[h],t+1)}for(let h=0;h<i;h++){this.arrayID[h]=this.nextIndex++;const t=50*h+100,i=130;let e=this.arrayData[h].toString();if(s.has(this.arrayData[h])){const t=s.get(this.arrayData[h]);e+=t,s.set(this.arrayData[h],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[h]=e,this.cmd(rt.createRectangle,this.arrayID[h],e,50,50,t,i)}this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",100,130),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",150,130),this.cmd(rt.setHighlight,this.jPointerID,1),this.highlight(0,0),this.cmd(rt.step),this.unhighlight(0,0),this.highlight(2,0);for(let h=1;h<this.arrayData.length;h++){this.cmd(rt.step),this.unhighlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(4,0);for(let t=h;t>=1&&(this.movePointers(t-1,t),this.unhighlight(3,0),this.unhighlight(4,0),this.unhighlight(6,0),this.highlight(4,1),this.cmd(rt.step),this.unhighlight(4,1),this.highlight(4,2),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.step),this.unhighlight(4,2),this.arrayData[t]<this.arrayData[t-1]);t--)this.highlight(5,0),this.swap(t,t-1),this.cmd(rt.step),this.unhighlight(5,0),this.highlight(6,0),this.cmd(rt.step);this.cmd(rt.step),this.unhighlight(3,0),this.unhighlight(4,0),this.unhighlight(6,0),1===h&&this.cmd(rt.setBackgroundColor,this.arrayID[0],"#2ECC71"),this.cmd(rt.setBackgroundColor,this.arrayID[h],"#2ECC71"),this.cmd(rt.step)}return this.unhighlight(2,0),this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.step),this.commands}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,130);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,130),this.cmd(rt.step)}swap(t,i){this.cmd(rt.setForegroundColor,this.iPointerID,"#FF0000"),this.cmd(rt.setForegroundColor,this.jPointerID,"#FF0000");const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,130);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,130),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,130),this.cmd(rt.move,h,s,130),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.cmd(rt.setForegroundColor,this.iPointerID,"#0000FF"),this.cmd(rt.setForegroundColor,this.jPointerID,"#0000FF"),this.cmd(rt.step)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],SelectionSort:["Selection Sort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const e=It(["Min","Max"],"Min/Max");this.minButton=e[0],this.minButton.onclick=this.minCallback.bind(this),this.controls.push(this.minButton),this.minButton.checked=!0,this.maxButton=e[1],this.maxButton.onclick=this.maxCallback.bind(this),this.controls.push(this.maxButton),this.isMin=!0}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.displayData=[],this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure SelectionSort(array):"],["     length <- length of array"],["     for i <- 0, length do"],["          min <- i"],["          for j <- i + 1, length do"],["               if array[j] < array[min]"],["                    min <- j"],["               end if"],["          end for"],["          swap array[min], array[i]"],["     end for"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,200),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.arrayID=[],this.displayData=[],this.removeCode(this.codeID),this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.codeID=this.addCodeToCanvasBase(this.code,50,200),this.isMin||(this.cmd(rt.setText,this.codeID[2][0],"     for i <- length - 1, 0 do"),this.cmd(rt.setText,this.codeID[3][0],"          max <- i"),this.cmd(rt.setText,this.codeID[4][0],"          for j <- i - 1, 0 do"),this.cmd(rt.setText,this.codeID[5][0],"               if array[j] > array[max]"),this.cmd(rt.setText,this.codeID[5][0],"                    max <- j"),this.cmd(rt.setText,this.codeID[9][0],"          swap array[max], array[i]"))}minCallback(){this.isMin||(this.implementAction(this.clear.bind(this)),this.cmd(rt.setText,this.codeID[2][0],"     for i <- 0, length do"),this.cmd(rt.setText,this.codeID[3][0],"          min <- i"),this.cmd(rt.setText,this.codeID[4][0],"          for j <- i + 1, length do"),this.cmd(rt.setText,this.codeID[5][0],"               if array[j] < array[min]"),this.cmd(rt.setText,this.codeID[6][0],"                    min <- j"),this.cmd(rt.setText,this.codeID[9][0],"          swap array[min], array[i]"),this.isMin=!0)}maxCallback(){this.isMin&&(this.implementAction(this.clear.bind(this)),this.cmd(rt.setText,this.codeID[2][0],"     for i <- length - 1, 0 do"),this.cmd(rt.setText,this.codeID[3][0],"          max <- i"),this.cmd(rt.setText,this.codeID[4][0],"          for j <- i - 1, 0 do"),this.cmd(rt.setText,this.codeID[5][0],"               if array[j] > array[max]"),this.cmd(rt.setText,this.codeID[6][0],"                    max <- j"),this.cmd(rt.setText,this.codeID[9][0],"          swap array[max], array[i]"),this.isMin=!1)}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.compCount=0,this.displayData=[],this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.highlight(0,0),this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18);const i=this.arrayData.length;this.displayData=new Array(i);const e=new Map,s=new Map;for(let n=0;n<i;n++){const t=e.has(this.arrayData[n])?e.get(this.arrayData[n]):0;t>0&&s.set(this.arrayData[n],"a"),e.set(this.arrayData[n],t+1)}for(let n=0;n<i;n++){this.arrayID[n]=this.nextIndex++;const t=50*n+100,i=130;let e=this.arrayData[n].toString();if(s.has(this.arrayData[n])){const t=s.get(this.arrayData[n]);e+=t,s.set(this.arrayData[n],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[n]=e,this.cmd(rt.createRectangle,this.arrayID[n],e,50,50,t,i)}let h=0;this.isMin||(h=50*(this.arrayData.length-1)),this.cmd(rt.createHighlightCircle,this.iPointerID,"#FF0000",100+h,130),h=50,this.isMin||(h=50*(this.arrayData.length-2)),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",100+h,130),this.cmd(rt.step),this.unhighlight(0,0),this.cmd(rt.setHighlight,this.jPointerID,1),this.highlight(2,0),this.cmd(rt.step),this.unhighlight(2,0);for(let n=0;n<this.arrayData.length-1;n++){this.highlight(3,0);let t=n;this.isMin||(t=this.arrayData.length-1-n);let i=t;this.cmd(rt.setBackgroundColor,this.arrayID[i],"#FFFF00"),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(4,0),this.cmd(rt.step);for(let e=n+1;e<this.arrayData.length;e++){this.unhighlight(4,0);let t=e;this.isMin||(t=this.arrayData.length-1-e),this.movePointers(i,t),this.compare(this.arrayData[t],this.arrayData[i])&&(this.cmd(rt.setBackgroundColor,this.arrayID[i],"#FFFFFF"),this.highlight(6,0),this.cmd(rt.step),i=t,this.movePointers(i,t),this.cmd(rt.setBackgroundColor,this.arrayID[i],"#FFFF00"),this.cmd(rt.step),this.unhighlight(6,0))}this.swap(t,i),this.cmd(rt.setBackgroundColor,this.arrayID[i],"#FFFFFF"),this.cmd(rt.step),this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71"),this.cmd(rt.step)}this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.step);let a=this.arrayID.length-1;return this.isMin||(a=0),this.cmd(rt.setBackgroundColor,this.arrayID[a],"#2ECC71"),this.commands}compare(t,i){return this.highlight(5,0),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.step),this.unhighlight(5,0),this.isMin?t<i:t>i}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,130);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,130),this.cmd(rt.step)}swap(t,i){this.highlight(9,0);const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,130);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,130),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,130),this.cmd(rt.move,h,s,130),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.unhighlight(9,0)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],QuickSort:["QuickSort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const e=It(["Random pivot","Min element","First element","Perfect pivot"],"Traversals");this.randomPivotSelect=e[0],this.minPivotSelect=e[1],this.firstPivotSelect=e[2],this.perfectPivotSelect=e[3],this.randomPivotSelect.onclick=()=>this.pivotType="random",this.minPivotSelect.onclick=()=>this.pivotType="min",this.firstPivotSelect.onclick=()=>this.pivotType="first",this.perfectPivotSelect.onclick=()=>this.pivotType="perfect",this.randomPivotSelect.checked=!0,this.pivotType="random",this.controls.push(this.randomPivotSelect),this.controls.push(this.perfectPivotSelect),this.controls.push(this.firstPivotSelect),this.controls.push(this.minPivotSelect),Dt()}setup(){this.commands=[],this.arrayData=[],this.displayData=[],this.arrayID=[],this.iPointerID=0,this.jPointerID=0,this.pPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure QuickSort(array, left, right):"],["     pivotIdx <- random index within region being sorted"],["     pivot <- array[pivotIdx]"],["     swap array[left] and array[pivotIdx]"],["     i <- left + 1, j <- right - 1"],["     while i <= j do"],["          while ","i <= j"," and ","array[i] <= pivot"],["               i <- i + 1"],["          end while"],["          while ","i <= j"," and ","array[j] >= pivot"],["               j <- j - 1"],["          end while"],["          if i <= j then"],["               swap array[i] and array[j]"],["               i <- i + 1, j <- j - 1"],["          end if"],["     end while"],["     swap pivot and array[j]"],["     QuickSort on array, left, j"],["     QuickSort on array, j + 1, right"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,180),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.displayData=[],this.arrayID=[],this.removeCode(this.codeID),this.iPointerID=0,this.jPointerID=0,this.pPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.codeID=this.addCodeToCanvasBase(this.code,50,180)}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.displayData=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18),this.displayData=new Array(this.arrayData.length);const i=new Map,e=new Map;for(let s=0;s<this.arrayData.length;s++){const t=i.has(this.arrayData[s])?i.get(this.arrayData[s]):0;t>0&&e.set(this.arrayData[s],"a"),i.set(this.arrayData[s],t+1)}for(let s=0;s<this.arrayData.length;s++){this.arrayData[s]=parseInt(this.arrayData[s]),this.arrayID[s]=this.nextIndex++;const t=50*s+100,i=120;let h=this.arrayData[s].toString();if(e.has(this.arrayData[s])){const t=e.get(this.arrayData[s]);h+=t,e.set(this.arrayData[s],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[s]=h,this.cmd(rt.createRectangle,this.arrayID[s],h,50,50,t,i)}return this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.pPointerID=this.nextIndex++,this.helper(0,this.arrayData.length-1),this.commands}helper(t,i){if(t>i)return;this.highlight(0,0);for(let r=t;r<=i;r++)this.cmd(rt.setBackgroundColor,this.arrayID[r],"#99CCFF");if(this.cmd(rt.step),this.unhighlight(0,0),t===i)return this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71"),this.cmd(rt.step),void this.unhighlight(0,0);let e;if(this.highlight(1,0),this.highlight(2,0),"min"===this.pivotType){let s=t;for(let e=t+1;e<=i;e++)this.arrayData[e]<this.arrayData[s]&&(s=e);e=s}else if("first"===this.pivotType)e=t;else if("perfect"===this.pivotType){const s=this.arrayData.slice(t,i+1);s.sort((t,i)=>t-i);const h=Math.floor(s.length/2);e=this.arrayData.indexOf(s[h])}else"random"===this.pivotType&&(e=Math.floor(Math.random()*(i-t))+t+1);const s=50*e+100;this.cmd(rt.createHighlightCircle,this.pPointerID,"#FFFF00",s,120),this.cmd(rt.step),this.unhighlight(1,0),this.unhighlight(2,0),this.highlight(3,0),this.swapPivot(e,t),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(4,0);let h=t+1,a=i;const n=50*h+100,l=50*a+100;for(this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",n,120),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",l,120),this.cmd(rt.step),this.unhighlight(4,0),this.highlight(5,0);h<=a;){for(this.cmd(rt.step),this.highlight(6,0),this.unhighlight(5,0),this.highlight(6,1),this.cmd(rt.step),this.unhighlight(6,0),this.unhighlight(6,1),this.highlight(6,3),this.cmd(rt.step);h<=a&&this.arrayData[t]>=this.arrayData[h];)this.unhighlight(6,3),this.highlight(7,0),h++,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.movePointers(h,a),this.unhighlight(7,0),this.highlight(6,1),h<=a&&(this.cmd(rt.step),this.unhighlight(6,1),this.highlight(6,3)),this.cmd(rt.step);for(this.unhighlight(6,1),this.unhighlight(6,3),h<=a&&(this.cmd(rt.setForegroundColor,this.iPointerID,"#FF0000"),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount)),this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(9,1),h<=a&&(this.cmd(rt.step),this.unhighlight(9,1),this.highlight(9,3)),this.cmd(rt.step);h<=a&&this.arrayData[t]<=this.arrayData[a];)this.unhighlight(9,3),this.highlight(10,0),a--,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.movePointers(h,a),this.unhighlight(10,0),this.highlight(9,1),h<=a&&(this.cmd(rt.step),this.unhighlight(9,1),this.highlight(9,3)),this.cmd(rt.step);this.unhighlight(9,1),this.unhighlight(9,3),h<=a&&(this.cmd(rt.setForegroundColor,this.jPointerID,"#FF0000"),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.step)),h<=a&&(this.highlight(13,0),this.swap(h,a),this.unhighlight(13,0),this.highlight(14,0),h++,a--,this.movePointers(h,a),this.unhighlight(14,0))}this.highlight(17,0),this.swapPivot(t,a,!0),this.unhighlight(17,0),this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.delete,this.pPointerID),this.cmd(rt.step);for(let r=t;r<=i;r++)this.cmd(rt.setBackgroundColor,this.arrayID[r],"#FFFFFF");this.cmd(rt.setBackgroundColor,this.arrayID[a],"#2ECC71"),this.cmd(rt.step),this.highlight(18,0),this.cmd(rt.step),this.unhighlight(18,0),this.helper(t,a-1),this.highlight(19,0),this.cmd(rt.step),this.unhighlight(19,0),this.helper(a+1,i)}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,120);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,120),this.cmd(rt.step)}swapPivot(t,i,e){if(t===i)return;const s=this.nextIndex++,h=50*i+100;this.cmd(rt.createLabel,s,this.displayData[i],h,120);const a=this.nextIndex++,n=50*t+100;this.cmd(rt.createLabel,a,this.displayData[t],n,120),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.move,a,h,120),this.cmd(rt.move,this.pPointerID,h,120),this.cmd(rt.move,s,n,120),e&&this.cmd(rt.move,this.jPointerID,n,120),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.delete,a),this.cmd(rt.delete,s);let l=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=l,l=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=l}swap(t,i){const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,120);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,120),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,120),this.cmd(rt.move,h,s,120),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.cmd(rt.setForegroundColor,this.iPointerID,"#0000FF"),this.cmd(rt.setForegroundColor,this.jPointerID,"#0000FF"),this.cmd(rt.step)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],QuickSelect:["QuickSelect / k\u1d57\u02b0 Select",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.runCallback.bind(this),60,!1),this.controls.push(this.listField),ut("k\u1d57\u02b0 element (1 indexed)",i),this.kField=xt("Text","",i),this.kField.onkeydown=this.returnSubmit(this.kField,this.runCallback.bind(this),2,!0),this.controls.push(this.kField),this.findButton=xt("Button","Run",i),this.findButton.onclick=this.runCallback.bind(this),this.controls.push(this.findButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt();const e=It(["Random pivot","Min element","First element","Perfect pivot"],"Traversals");this.randomPivotSelect=e[0],this.minPivotSelect=e[1],this.firstPivotSelect=e[2],this.perfectPivotSelect=e[3],this.randomPivotSelect.onclick=()=>this.pivotType="random",this.minPivotSelect.onclick=()=>this.pivotType="min",this.firstPivotSelect.onclick=()=>this.pivotType="first",this.perfectPivotSelect.onclick=()=>this.pivotType="perfect",this.randomPivotSelect.checked=!0,this.pivotType="random",this.controls.push(this.randomPivotSelect),this.controls.push(this.perfectPivotSelect),this.controls.push(this.firstPivotSelect),this.controls.push(this.minPivotSelect)}setup(){this.commands=[],this.arrayData=[],this.displayData=[],this.arrayID=[],this.iPointerID=0,this.jPointerID=0,this.pPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure QuickSelect(array, left, right, k):"],["     pivotIdx <- random index within [left, right]"],["     pivot <- array[pivotIdx]"],["     swap array[left] and array[pivotIdx]"],["     i <- left + 1, j <- right - 1"],["     while i <= j do"],["          while ","i <= j"," and ","array[i] <= pivot"],["               i <- i + 1"],["          end while"],["          while ","i <= j"," and ","array[j] >= pivot"],["               j <- j - 1"],["          end while"],["          if i <= j then"],["               swap array[i] and array[j]"],["               i <- i + 1, j <- j - 1"],["          end if"],["     end while"],["     swap pivot and array[j]"],["     if j equals k - 1 then"],["          return array[j]"],["     if j > k - 1 then"],["          QuickSelect on array, left, j - 1, k"],["     else"],["          QuickSelect on array, j + 1, right, k"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,100),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.displayData=[],this.arrayID=[],this.removeCode(this.codeID),this.iPointerID=0,this.jPointerID=0,this.pPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.codeID=this.addCodeToCanvasBase(this.code,50,100)}runCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);if(""!==this.listField.value&&""!==this.kField.value&&t.length<=18&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0){const i=this.kField.value;i>0&&i<=t.length&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.kField.value="",this.implementAction(this.run.bind(this),t,i))}}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.displayData=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}run(t,i){this.commands=[],this.k=Number(i),this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18),this.displayData=new Array(this.arrayData.length);const e=new Map,s=new Map;for(let h=0;h<this.arrayData.length;h++){const t=e.has(this.arrayData[h])?e.get(this.arrayData[h]):0;t>0&&s.set(this.arrayData[h],"a"),e.set(this.arrayData[h],t+1)}for(let h=0;h<this.arrayData.length;h++){this.arrayData[h]=parseInt(this.arrayData[h]),this.arrayID[h]=this.nextIndex++;const t=50*h+350,i=120;let e=this.arrayData[h].toString();if(s.has(this.arrayData[h])){const t=s.get(this.arrayData[h]);e+=t,s.set(this.arrayData[h],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[h]=e,this.cmd(rt.createRectangle,this.arrayID[h],e,50,50,t,i)}return this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.pPointerID=this.nextIndex++,this.helper(0,this.arrayData.length-1),this.commands}helper(t,i){if(t>i)return;this.highlight(0,0);for(let r=t;r<=i;r++)this.cmd(rt.setBackgroundColor,this.arrayID[r],"#99CCFF");if(this.cmd(rt.step),t===i)return this.cmd(rt.setBackgroundColor,this.arrayID[t],"#2ECC71"),this.cmd(rt.step),void this.unhighlight(0,0);let e;if(this.unhighlight(0,0),this.highlight(1,0),this.highlight(2,0),"min"===this.pivotType){let s=t;for(let e=t+1;e<=i;e++)this.arrayData[e]<this.arrayData[s]&&(s=e);e=s}else if("first"===this.pivotType)e=t;else if("perfect"===this.pivotType){const s=this.arrayData.slice(t,i+1);s.sort((t,i)=>t-i);const h=Math.floor(s.length/2);e=this.arrayData.indexOf(s[h])}else"random"===this.pivotType&&(e=Math.floor(Math.random()*(i-t))+t+1);const s=50*e+350;this.cmd(rt.createHighlightCircle,this.pPointerID,"#FFFF00",s,120),this.cmd(rt.step),this.unhighlight(1,0),this.unhighlight(2,0),this.highlight(3,0),this.swapPivot(e,t),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(4,0);let h=t+1,a=i;const n=50*h+350,l=50*a+350;for(this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",n,120),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",l,120),this.cmd(rt.step),this.unhighlight(4,0),this.highlight(5,0);h<=a;){for(this.cmd(rt.step),this.highlight(6,0),this.unhighlight(5,0),this.highlight(6,1),this.cmd(rt.step),this.unhighlight(6,0),this.unhighlight(6,1),this.highlight(6,3),this.cmd(rt.step);h<=a&&this.arrayData[t]>=this.arrayData[h];)this.unhighlight(6,3),this.highlight(7,0),h++,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.movePointers(h,a),this.unhighlight(7,0),this.highlight(6,1),h<=a&&(this.cmd(rt.step),this.unhighlight(6,1),this.highlight(6,3)),this.cmd(rt.step);for(this.unhighlight(6,1),this.unhighlight(6,3),h<=a&&(this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setForegroundColor,this.iPointerID,"#FF0000"),this.cmd(rt.step)),this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(9,1),h<=a&&(this.cmd(rt.step),this.unhighlight(9,1),this.highlight(9,3)),this.cmd(rt.step);h<=a&&this.arrayData[t]<=this.arrayData[a];)this.unhighlight(9,3),this.highlight(10,0),a--,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.movePointers(h,a),this.unhighlight(10,0),this.highlight(9,1),h<=a&&(this.cmd(rt.step),this.unhighlight(9,1),this.highlight(9,3)),this.cmd(rt.step);this.unhighlight(9,1),this.unhighlight(9,3),h<=a&&(this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setForegroundColor,this.jPointerID,"#FF0000"),this.cmd(rt.step)),h<=a&&(this.highlight(13,0),this.swap(h,a),this.unhighlight(13,0),this.highlight(14,0),h++,a--,this.movePointers(h,a),this.unhighlight(14,0))}this.highlight(17,0),this.swapPivot(t,a,!0),this.unhighlight(17,0),this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.delete,this.pPointerID),this.cmd(rt.step);for(let r=t;r<=i;r++)this.cmd(rt.setBackgroundColor,this.arrayID[r],"#FFFFFF");this.highlight(18,0),this.cmd(rt.step),this.k-1===a?(this.unhighlight(18,0),this.highlight(19,0),this.cmd(rt.setBackgroundColor,this.arrayID[a],"#2ECC71"),this.cmd(rt.step),this.unhighlight(19,0)):(this.unhighlight(18,0),this.highlight(20,0),this.cmd(rt.setBackgroundColor,this.arrayID[a],"#4DA6ff"),this.cmd(rt.step),this.k-1<a?(this.unhighlight(20,0),this.highlight(21,0),this.cmd(rt.step),this.unhighlight(21,0),this.helper(t,a-1)):(this.unhighlight(20,0),this.highlight(23,0),this.cmd(rt.step),this.unhighlight(23,0),this.helper(a+1,i)))}movePointers(t,i){const e=50*t+350;this.cmd(rt.move,this.iPointerID,e,120);const s=50*i+350;this.cmd(rt.move,this.jPointerID,s,120),this.cmd(rt.step)}swapPivot(t,i,e){if(t===i)return;const s=this.nextIndex++,h=50*i+350;this.cmd(rt.createLabel,s,this.displayData[i],h,120);const a=this.nextIndex++,n=50*t+350;this.cmd(rt.createLabel,a,this.displayData[t],n,120),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.move,a,h,120),this.cmd(rt.move,this.pPointerID,h,120),this.cmd(rt.move,s,n,120),e&&this.cmd(rt.move,this.jPointerID,n,120),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.delete,a),this.cmd(rt.delete,s);let l=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=l,l=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=l}swap(t,i){const e=this.nextIndex++,s=50*t+350;this.cmd(rt.createLabel,e,this.displayData[t],s,120);const h=this.nextIndex++,a=50*i+350;this.cmd(rt.createLabel,h,this.displayData[i],a,120),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,120),this.cmd(rt.move,h,s,120),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n,this.cmd(rt.setForegroundColor,this.iPointerID,"#0000FF"),this.cmd(rt.setForegroundColor,this.jPointerID,"#0000FF"),this.cmd(rt.step)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],MergeSort:["MergeSort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 15 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.iPointerID=0,this.jPointerID=0,this.kPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"Comparison Count: "+this.compCount,100,50),this.code=[["procedure MergeSort(array)"],["     length <- length of array, midIdx <- length / 2"],["     leftArray <- array[0...midIdx - 1]"],["     rightArray <- array[midIdx...length - 1]"],["     MergeSort(leftArray)"],["     MergeSort(rightArray)"],["     leftIdx, rightIdx, currIdx <- 0"],["     while leftIdx < midIdx and rightIdx < length - midIdx do"],["          if leftArray[leftIdx] <= rightArray[rightIdx] then"],["               array[currIdx] <- leftArray[leftIdx]"],["               leftIdx <- leftIdx + 1"],["          else"],["               array[currIdx] <- rightArray[rightIdx]"],["               rightIdx <- rightIdx + 1"],["          end if"],["          currIdx <- currIdx + 1"],["     end while"],["     while leftIdx < midIdx do"],["          array[currIdx] <- leftArray[leftIdx]"],["          currIdx <- currIdx + 1"],["          leftIdx <- leftIdx + 1"],["     end while"],["     while rightIdx < length - midIdx do"],["          array[currIdx] <- rightArray[rightIdx]"],["          currIdx <- currIdx + 1"],["          rightIdx <- rightIdx + 1"],["     end while"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,50,80),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.arrayID=[],this.iPointerID=0,this.jPointerID=0,this.kPointerID=0,this.comparisonCountID=this.nextIndex++,this.compCount=0}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=15&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.displayData=[],this.arrayID=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.commands}sort(t){this.commands=[],this.highlight(0,0),this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,15),this.displayData=new Array(this.arrayData.length);const i=new Map,e=new Map;for(let s=0;s<this.arrayData.length;s++){const t=i.has(this.arrayData[s])?i.get(this.arrayData[s]):0;t>0&&e.set(this.arrayData[s],"a"),i.set(this.arrayData[s],t+1)}for(let s=0;s<this.arrayData.length;s++){const t=50*s+450,i=50;this.arrayID.push(this.nextIndex);let h=this.arrayData[s].toString();if(e.has(this.arrayData[s])){const t=e.get(this.arrayData[s]);h+=t,e.set(this.arrayData[s],String.fromCharCode(t.charCodeAt(0)+1))}this.displayData[s]=h,this.cmd(rt.createRectangle,this.nextIndex++,h,50,50,t,i)}if(this.cmd(rt.step),this.unhighlight(0,0),1!==this.arrayData.length){this.highlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(2,0),this.unhighlight(3,0);const t=Math.ceil((this.arrayData.length-1)/2);this.highlight(4,0),this.leftHelper(0,t-1,-15,0,1),this.unhighlight(4,0),this.highlight(5,0),this.rightHelper(t,this.arrayData.length-1,15,0,1),this.unhighlight(5,0),this.merge(0,this.arrayData.length-1,t,0,0,-15,15,this.arrayID)}else this.cmd(rt.setBackgroundColor,this.arrayID[0],"#2ECC71"),this.cmd(rt.step);return this.commands}leftHelper(t,i,e,s,h){if(this.cmd(rt.step),t>i)return;this.unhighlight(4,0),this.unhighlight(5,0),this.highlight(0,0);const a=this.drawArrayAndCopy(t,i,e,s,h);if(this.unhighlight(0,0),t!==i){this.highlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(2,0),this.unhighlight(3,0);const s=Math.ceil((t+i)/2),n=h<2?30:14;this.highlight(4,0),this.leftHelper(t,s-1,e-n,e,h+1),this.unhighlight(4,0),this.highlight(5,0),this.leftHelper(s,i,e,e,h+1),this.unhighlight(5,0),this.merge(t,i,s,h,e,e-n,e,a)}else this.cmd(rt.setBackgroundColor,a[t],"#2ECC71"),this.cmd(rt.step)}rightHelper(t,i,e,s,h){if(this.cmd(rt.step),t>i)return;this.unhighlight(4,0),this.unhighlight(5,0),this.highlight(0,0);const a=this.drawArrayAndCopy(t,i,e,s,h);if(this.unhighlight(0,0),t!==i){this.highlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(2,0),this.unhighlight(3,0);const s=Math.ceil((t+i)/2),n=h<2?30:14;this.highlight(4,0),this.rightHelper(t,s-1,e,e,h+1),this.unhighlight(4,0),this.highlight(5,0),this.rightHelper(s,i,e+n,e,h+1),this.unhighlight(5,0),this.merge(t,i,s,h,e,e,e+n,a)}else this.cmd(rt.setBackgroundColor,a[t],"#2ECC71"),this.cmd(rt.step)}drawArrayAndCopy(t,i,e,s,h){const a=[];for(let n=t;n<=i;n++){const t=50*n+450+e,i=50+75*h;a[n]=this.nextIndex,this.arrayID.push(this.nextIndex),this.cmd(rt.createRectangle,this.nextIndex++,"",50,50,t,i)}this.cmd(rt.step);for(let n=t;n<=i;n++)this.copyData(n,n,s,e,h-1,h,this.displayData[n],a[n],-1);return a}merge(t,i,e,s,h,a,n,l){const r=new Array(this.arrayData.length),o=new Array(this.arrayData.length);for(let y=t;y<=i;y++)r[y]=this.arrayData[y],o[y]=this.displayData[y];this.highlight(6,0);const d=50+75*(s+1),c=this.nextIndex++,m=50*t+450+a;this.cmd(rt.createHighlightCircle,c,"#0000FF",m,d);const g=this.nextIndex++,u=50*e+450+n;this.cmd(rt.createHighlightCircle,g,"#0000FF",u,d);const p=this.nextIndex++,I=50*t+450+h,x=50+75*s;this.cmd(rt.createHighlightCircle,p,"#0000FF",I,x),this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0),this.cmd(rt.step),this.unhighlight(7,0);let D=t,b=e,f=t;for(;D<e&&b<=i;)this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.highlight(8,0),this.cmd(rt.step),this.unhighlight(8,0),r[D]<=r[b]?(this.highlight(9,0),this.copyData(D,f,a,h,s+1,s,o[D],l[f],c),this.unhighlight(9,0),this.arrayData[f]=r[D],this.displayData[f]=o[D],D++,this.highlight(10,0),D<e&&this.movePointer(D,s+1,a,c),this.cmd(rt.step),this.unhighlight(10,0)):(this.highlight(11,0),this.cmd(rt.step),this.unhighlight(11,0),this.highlight(12,0),this.copyData(b,f,n,h,s+1,s,o[b],l[f],g),this.unhighlight(12,0),this.arrayData[f]=r[b],this.displayData[f]=o[b],b++,this.highlight(13,0),b<=i&&this.movePointer(b,s+1,n,g),this.cmd(rt.step),this.unhighlight(13,0)),f++,this.highlight(15,0),this.movePointer(f,s,h,p),this.cmd(rt.step),this.unhighlight(15,0);for(this.highlight(17,0),this.cmd(rt.step),this.unhighlight(17,0);D<e;)this.highlight(18,0),this.copyData(D,f,a,h,s+1,s,o[D],l[f],c),this.unhighlight(18,0),this.highlight(19,0),this.highlight(20,0),this.arrayData[f]=r[D],this.displayData[f]=o[D],f++,D++,f<=i&&(this.movePointer(D,s+1,a,c),this.movePointer(f,s,h,p)),this.cmd(rt.step),this.unhighlight(19,0),this.unhighlight(20,0);for(this.highlight(22,0),this.cmd(rt.step),this.unhighlight(22,0);b<=i;)this.highlight(23,0),this.copyData(b,f,n,h,s+1,s,o[b],l[f],g),this.unhighlight(23,0),this.highlight(24,0),this.highlight(25,0),this.arrayData[f]=r[b],this.displayData[f]=o[b],b++,f++,f<=i&&(this.movePointer(b,s+1,n,g),this.movePointer(f,s,h,p)),this.cmd(rt.step),this.unhighlight(24,0),this.unhighlight(25,0);this.cmd(rt.delete,c),this.cmd(rt.delete,g),this.cmd(rt.delete,p),this.cmd(rt.step)}copyData(t,i,e,s,h,a,n,l,r){-1!==r&&(this.cmd(rt.setForegroundColor,r,"#FF0000"),this.cmd(rt.step));const o=50*t+450+e,d=50+75*h,c=this.nextIndex++;this.cmd(rt.createLabel,c,n,o,d);const m=50*i+450+s,g=50+75*a;this.cmd(rt.move,c,m,g),this.cmd(rt.step),this.cmd(rt.setText,l,n),this.cmd(rt.delete,c),-1!==r&&(this.cmd(rt.setBackgroundColor,l,"#2ECC71"),this.cmd(rt.setForegroundColor,r,"#0000FF"),this.cmd(rt.step))}movePointer(t,i,e,s){const h=50*t+450+e,a=50+75*i;this.cmd(rt.move,s,h,a)}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],LSDRadix:["LSD Radix Sort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 18 elements & no elements < 0',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.arrayData=[],this.arrayID=[],this.arrayDisplay=[],this.bucketsData=[],this.bucketsID=[],this.bucketsDisplay=[],this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.infoLabelID=this.nextIndex++,this.code=[["procedure LSDRadixSort(array):"],["     buckets <- list of 10 lists"],["     iterations <- length of longest number"],["     length <- length of array"],["     for i <- 1, iterations do"],["          for j <- 0, length - 1 do"],["               bucket <- ith digit of array[j]"],["               add array[j] to buckets[bucket]"],["          end for"],["          index <- 0"],["          for bucket <- 0, 9 do"],["               while buckets[bucket] isn't empty"],["                    array[index] <- remove first from buckets[bucket]"],["                    index <- index + 1"],["               end while"],["          end for"],["     end for"],["end procedure"]],this.codeID=this.addCodeToCanvasBase(this.code,650,140),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.arrayData=[],this.arrayID=[],this.arrayDisplay=[],this.bucketsData=[],this.bucketsID=[],this.bucketsDisplay=[],this.removeCode(this.codeID),this.iPointerID=this.nextIndex++,this.jPointerID=this.nextIndex++,this.infoLabelID=this.nextIndex++,this.codeID=this.addCodeToCanvasBase(this.code,650,140)}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=18&&t.map(Number).filter(t=>Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);for(let t=0;t<this.bucketsID.length;t++)for(let i=0;i<this.bucketsID[t].length;i++)this.cmd(rt.delete,this.bucketsID[t][i]);return this.arrayData=[],this.arrayID=[],this.arrayDisplay=[],this.bucketsData=[],this.bucketsID=[],this.bucketsDisplay=[],this.commands}sort(t){this.highlight(0,0),this.commands=[],this.arrayID=[],this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,18);const i=this.arrayData.length,e=new Map,s=new Map;for(let l=0;l<i;l++){const t=e.has(this.arrayData[l])?e.get(this.arrayData[l]):0;t>0&&s.set(this.arrayData[l],"a"),e.set(this.arrayData[l],t+1)}for(let l=0;l<i;l++){this.arrayID[l]=this.nextIndex++;const t=50*l+100,i=70;let e=this.arrayData[l].toString();if(s.has(this.arrayData[l])){const t=s.get(this.arrayData[l]);e+=t,s.set(this.arrayData[l],String.fromCharCode(t.charCodeAt(0)+1))}this.arrayDisplay[l]=e,this.cmd(rt.createRectangle,this.arrayID[l],e,50,50,t,i)}this.bucketsData=[],this.bucketsID=[],this.cmd(rt.step),this.unhighlight(0,0),this.highlight(1,0);for(let l=0;l<10;l++){this.bucketsData[l]=[],this.bucketsID[l]=[],this.bucketsDisplay[l]=[],this.bucketsID[l].push(this.nextIndex++);const t=50*l+100,i=140;this.cmd(rt.createRectangle,this.bucketsID[l][0],l,50,20,t,i),this.cmd(rt.setBackgroundColor,this.bucketsID[l],"#D3D3D3")}this.cmd(rt.createLabel,this.infoLabelID,"Searching for number with greatest magnitude",75,20,0),this.cmd(rt.createHighlightCircle,this.iPointerID,"#FF0000",100,70),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.createHighlightCircle,this.jPointerID,"#0000FF",150,70),this.cmd(rt.setHighlight,this.jPointerID,1),this.cmd(rt.step),this.unhighlight(1,0),this.highlight(2,0);let h=0;for(let l=1;l<this.arrayData.length;l++)this.movePointers(h,l),this.arrayData[l]>this.arrayData[h]&&(h=l,this.movePointers(h,l));this.cmd(rt.delete,this.iPointerID),this.cmd(rt.delete,this.jPointerID),this.cmd(rt.setBackgroundColor,this.arrayID[h],"#FFFF00");let a=Math.floor(Math.log10(this.arrayData[h]))+1;a=a||1;const n=this.arrayData[h];this.cmd(rt.setText,this.infoLabelID,n+" has greatest magnitude, number of digits is "+a),this.cmd(rt.step),this.unhighlight(2,0),this.cmd(rt.setBackgroundColor,this.arrayID[h],"#FFFFFF"),this.highlight(4,0);for(let l=0;l<a;l++){this.cmd(rt.setText,this.infoLabelID,"Getting digits at position "+(l+1)),this.cmd(rt.createHighlightCircle,this.iPointerID,"#0000FF",100,70),this.cmd(rt.setHighlight,this.iPointerID,1),this.cmd(rt.step),this.unhighlight(4,0),this.highlight(5,0);for(let i=0;i<this.arrayData.length;i++){this.cmd(rt.move,this.iPointerID,100+50*i,70),this.cmd(rt.step),this.unhighlight(5,0),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0);const t=this.nextIndex++,e=this.arrayData[i],s=this.arrayDisplay[i],h=this.nthDigit(e,l);this.bucketsID[h].push(t),this.bucketsData[h].push(e),this.bucketsDisplay[h].push(s);const a=this.bucketsData[h].length;this.cmd(rt.createRectangle,t,s,50,20,100+50*h,140+20*a+15*a),this.cmd(rt.connect,this.bucketsID[h][this.bucketsID[h].length-2],t,0,0,1,"",2),this.cmd(rt.step),this.unhighlight(7,0)}this.cmd(rt.delete,this.iPointerID),this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(10,0);let t=0;this.cmd(rt.step);for(let i=0;i<10;i++){this.unhighlight(10,0);const e=this.bucketsID[i],s=this.bucketsData[i],h=this.bucketsDisplay[i];for(this.highlight(11,0);s.length;){this.cmd(rt.step),this.unhighlight(11,0),this.highlight(12,0);const a=this.nextIndex++,n=e.splice(1,1)[0],l=s.shift(),r=h.shift();if(this.cmd(rt.createLabel,a,r,100+50*i,175),this.cmd(rt.move,a,100+50*t,70),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],r),this.cmd(rt.delete,a),this.cmd(rt.delete,n),this.unhighlight(12,0),this.highlight(13,0),s.length){this.cmd(rt.connect,e[0],e[1]);for(let t=1;t<e.length;t++)this.cmd(rt.move,e[t],100+50*i,140+20*t+15*t)}this.cmd(rt.step),this.arrayData[t]=l,this.arrayDisplay[t]=r,t++,this.unhighlight(13,0)}this.unhighlight(11,0)}}return this.cmd(rt.delete,this.infoLabelID),this.commands}movePointers(t,i){const e=50*t+100;this.cmd(rt.move,this.iPointerID,e,70);const s=50*i+100;this.cmd(rt.move,this.jPointerID,s,70),this.cmd(rt.step)}swap(t,i){const e=this.nextIndex++,s=50*t+100;this.cmd(rt.createLabel,e,this.displayData[t],s,70);const h=this.nextIndex++,a=50*i+100;this.cmd(rt.createLabel,h,this.displayData[i],a,70),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.setText,this.arrayID[i],""),this.cmd(rt.move,e,a,70),this.cmd(rt.move,h,s,70),this.cmd(rt.step),this.cmd(rt.setText,this.arrayID[t],this.displayData[i]),this.cmd(rt.setText,this.arrayID[i],this.displayData[t]),this.cmd(rt.delete,e),this.cmd(rt.delete,h);let n=this.arrayData[t];this.arrayData[t]=this.arrayData[i],this.arrayData[i]=n,n=this.displayData[t],this.displayData[t]=this.displayData[i],this.displayData[i]=n}nthDigit(t,i){return t=Math.floor(t/Math.pow(10,i)),t%=10}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],HeapSort:["HeapSort",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[];const t=bt(!1);ut('Comma seperated list (e.g. "3,1,2"). Max 15 elements & no elements > 999',t);const i=bt(!0,t);this.listField=xt("Text","",i),this.listField.onkeydown=this.returnSubmit(this.listField,this.sortCallback.bind(this),60,!1),this.controls.push(this.listField),this.sortButton=xt("Button","Sort",i),this.sortButton.onclick=this.sortCallback.bind(this),this.controls.push(this.sortButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){let t,i;for(this.commands=[],this.arrayData=[],this.arrayID=[],this.heapArrayData=[],this.heapArrayID=[],this.heapArrayLabelID=[],this.heapTreeObj=[],this.infoLabelID=this.nextIndex++,this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",20,150,0),this.code=[["procedure heapSort(array)"],["     heap <- create new PriorityQueue(array)"],["     for i <- 0, array.length - 1, loop:"],["          add ","heap.remove()"," to data[i]"],["     end for"],["end procedure"]],this.codeID=Array(this.code.length),t=0;t<this.code.length;t++)for(this.codeID[t]=new Array(this.code[t].length),i=0;i<this.code[t].length;i++)this.codeID[t][i]=this.nextIndex++,this.cmd(rt.createLabel,this.codeID[t][i],this.code[t][i],25,35+14*t,0),this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000"),i>0&&this.cmd(rt.alignRight,this.codeID[t][i],this.codeID[t][i-1]);this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}sort(t){this.commands=[],this.highlight(0,0),this.arrayData=t.map(Number).filter(t=>!Number.isNaN(t)).slice(0,15);const i=this.arrayData.length,e=new Array(i),s=new Map,h=new Map;for(let n=0;n<i;n++){const t=s.has(this.arrayData[n])?s.get(this.arrayData[n]):0;t>0&&h.set(this.arrayData[n],"a"),s.set(this.arrayData[n],t+1)}for(let n=0;n<i;n++){this.arrayID[n]=this.nextIndex++;const t=50*n+400,i=50;let s=this.arrayData[n].toString();if(h.has(this.arrayData[n])){const t=h.get(this.arrayData[n]);s+=t,h.set(this.arrayData[n],String.fromCharCode(t.charCodeAt(0)+1))}e[n]=s,this.cmd(rt.createRectangle,this.arrayID[n],s,50,50,t,i)}this.arrayData=e,this.cmd(rt.step),this.unhighlight(0,0),this.highlight(1,0),this.createHeap(this.arrayData),this.cmd(rt.step),this.cmd(rt.setText,this.infoLabelID,"Buildheap the new array");let a=Math.floor(this.currentHeapSize/2);for(;a>0;)this.pushDown(a),a-=1;for(this.cmd(rt.step),this.unhighlight(1,0),this.cmd(rt.setText,this.infoLabelID,"");this.currentHeapSize>0;)this.highlight(2,0),this.cmd(rt.step),this.unhighlight(2,0),this.remove();this.highlight(4,0),this.cmd(rt.setText,this.infoLabelID,""),this.cmd(rt.step);for(let n=0;n<i+1;n++)this.cmd(rt.delete,this.heapArrayID[n]),this.cmd(rt.delete,this.heapArrayLabelID[n]);return this.unhighlight(4,0),this.highlight(5,0),this.cmd(rt.step),this.unhighlight(5,0),this.commands}createHeap(t){const i=t.length+1;this.cmd(rt.setText,this.infoLabelID,"Array-backed heap created"),this.heapArrayXPositions=new Array(i),this.heapArrayData=t.slice(),this.heapArrayData.unshift(null),this.currentHeapSize=i-1;for(let e=0;e<i;e++)this.heapArrayXPositions[e]=400+40*e,this.heapArrayID[e]=this.nextIndex++,this.heapArrayLabelID[e]=this.nextIndex++,this.heapTreeObj[e]=this.nextIndex++,this.cmd(rt.createRectangle,this.heapArrayID[e],this.heapArrayData[e],40,30,this.heapArrayXPositions[e],150),this.cmd(rt.createLabel,this.heapArrayLabelID[e],e,this.heapArrayXPositions[e],180),this.cmd(rt.setForegroundColor,this.heapArrayLabelID[e],"#0000FF"),e>0&&(this.cmd(rt.createCircle,this.heapTreeObj[e],this.heapArrayData[e],ti[e],ii[e]),this.cmd(rt.setText,this.heapArrayID[e],this.heapArrayData[e]),e>1&&this.cmd(rt.connect,this.heapTreeObj[Math.floor(e/2)],this.heapTreeObj[e]));return this.commands}remove(){const t=this.arrayData.length-this.currentHeapSize,i=this.heapArrayData[1],e=this.nextIndex;return this.cmd(rt.setText,this.infoLabelID,""),this.highlight(3,0),this.highlight(3,1),this.highlight(3,2),this.cmd(rt.setText,this.heapArrayID[1],""),this.cmd(rt.createLabel,e,i,ti[1],ii[1],0),this.cmd(rt.setText,this.heapTreeObj[1],""),this.cmd(rt.setText,this.arrayID[t],""),this.cmd(rt.move,e,50*t+400-5,45),this.cmd(rt.step),this.arrayData[t]=i,this.cmd(rt.setText,this.arrayID[t],i),this.cmd(rt.delete,e),this.cmd(rt.step),this.heapArrayData[1]="",this.unhighlight(3,0),this.unhighlight(3,2),this.cmd(rt.setText,this.infoLabelID,"Downheap to maintain order"),this.currentHeapSize>1?(this.cmd(rt.setHighlight,this.heapArrayID[1],1),this.cmd(rt.setHighlight,this.heapArrayID[this.currentHeapSize],1),this.cmd(rt.setHighlight,this.heapTreeObj[1],1),this.cmd(rt.setHighlight,this.heapTreeObj[this.currentHeapSize],1),this.cmd(rt.step),this.cmd(rt.setHighlight,this.heapArrayID[1],0),this.cmd(rt.setHighlight,this.heapArrayID[this.currentHeapSize],0),this.cmd(rt.setHighlight,this.heapTreeObj[1],0),this.cmd(rt.setHighlight,this.heapTreeObj[this.currentHeapSize],0),this.swap(1,this.currentHeapSize),this.cmd(rt.delete,this.heapTreeObj[this.currentHeapSize]),this.cmd(rt.step),this.currentHeapSize--,this.currentHeapSize>0&&this.pushDown(1)):(this.cmd(rt.setText,this.heapArrayID[1],""),this.cmd(rt.delete,this.heapTreeObj[this.currentHeapSize]),this.cmd(rt.step),this.currentHeapSize--),this.unhighlight(3,1),this.cmd(rt.step),this.commands}pushDown(t){let i;for(;2*t<=this.currentHeapSize;){if(i=2*t,2*t+1<=this.currentHeapSize&&(this.setIndexHighlight(2*t,1),this.setIndexHighlight(2*t+1,1),this.cmd(rt.step),this.setIndexHighlight(2*t,0),this.setIndexHighlight(2*t+1,0),this.downheapCheckRightChild(t)&&(i=2*t+1)),this.setIndexHighlight(t,1),this.setIndexHighlight(i,1),this.cmd(rt.step),this.setIndexHighlight(t,0),this.setIndexHighlight(i,0),!this.downheapCompare(i,t))return;this.swap(i,t),t=i}}downheapCheckRightChild(t){return this.compareWithLetters(this.heapArrayData[2*t+1],this.heapArrayData[2*t])}downheapCompare(t,i){return this.compareWithLetters(this.heapArrayData[t],this.heapArrayData[i])}compareWithLetters(t,i){return parseInt(t)<parseInt(i)}swap(t,i){const e=this.nextIndex++,s=this.nextIndex++,h=this.nextIndex++,a=this.nextIndex++;this.cmd(rt.setText,this.heapArrayID[t],""),this.cmd(rt.setText,this.heapArrayID[i],""),this.cmd(rt.setText,this.heapTreeObj[t],""),this.cmd(rt.setText,this.heapTreeObj[i],""),this.cmd(rt.createLabel,e,this.heapArrayData[t],this.heapArrayXPositions[t],150),this.cmd(rt.createLabel,s,this.heapArrayData[i],this.heapArrayXPositions[i],150),this.cmd(rt.createLabel,h,this.heapArrayData[t],ti[t],ii[t]),this.cmd(rt.createLabel,a,this.heapArrayData[i],ti[i],ii[i]),this.cmd(rt.move,e,this.heapArrayXPositions[i],150),this.cmd(rt.move,s,this.heapArrayXPositions[t],150),this.cmd(rt.move,h,ti[i],ii[i]),this.cmd(rt.move,a,ti[t],ii[t]);const n=this.heapArrayData[t];this.heapArrayData[t]=this.heapArrayData[i],this.heapArrayData[i]=n,this.cmd(rt.step),this.cmd(rt.setText,this.heapArrayID[t],this.heapArrayData[t]),this.cmd(rt.setText,this.heapArrayID[i],this.heapArrayData[i]),this.cmd(rt.setText,this.heapTreeObj[t],this.heapArrayData[t]),this.cmd(rt.setText,this.heapTreeObj[i],this.heapArrayData[i]),this.cmd(rt.delete,e),this.cmd(rt.delete,s),this.cmd(rt.delete,h),this.cmd(rt.delete,a),this.nextIndex-=4}setIndexHighlight(t,i){this.cmd(rt.setHighlight,this.heapTreeObj[t],i),this.cmd(rt.setHighlight,this.heapArrayID[t],i)}clear(){this.commands=[];for(let t=0;t<this.arrayID.length;t++)this.cmd(rt.delete,this.arrayID[t]);return this.arrayData=[],this.arrayID=[],this.heapArrayData=[],this.heapArrayID=[],this.heapArrayLabelID=[],this.commands}reset(){this.currentHeapSize=0}sortCallback(){const t=this.listField.value.split(",").filter(t=>""!==t);""!==this.listField.value&&t.length<=15&&t.map(Number).filter(t=>t>999||Number.isNaN(t)).length<=0&&(this.implementAction(this.clear.bind(this)),this.listField.value="",this.implementAction(this.sort.bind(this),t))}clearCallback(){this.implementAction(this.clear.bind(this))}highlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#FF0000")}unhighlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000")}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],BruteForce:["Brute Force",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[],ut("Text"),this.textField=xt("Text",""),this.textField.onkeydown=this.returnSubmit(this.textField,this.findCallback.bind(this),22,!1),this.controls.push(this.textField),ut("Pattern"),this.patternField=xt("Text",""),this.patternField.onkeydown=this.returnSubmit(this.patternField,this.findCallback.bind(this),22,!1),this.controls.push(this.patternField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.textRowID=[],this.comparisonMatrixID=[],this.codeID=[],this.code=[["procedure BruteForce(text, pattern)"],["     n <- text.length, m <- pattern.length"],["     for i <- 0, n - m"],["          j <- 0"],["          while j < m and pattern[j] = text[i + j]"],["               j <- j + 1"],["          if j = m"],["               match found at i"],["end procedure"]],this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"",575,30,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.textRowID=[],this.comparisonMatrixID=[],this.comparisonCountID=this.nextIndex++,this.compCount=0,this.codeID=[]}findCallback(){if(""!==this.textField.value&&""!==this.patternField.value&&this.textField.value.length>=this.patternField.value.length){this.implementAction(this.clear.bind(this));const t=this.textField.value,i=this.patternField.value;this.textField.value="",this.patternField.value="",this.implementAction(this.find.bind(this),t,i)}}clearCallback(){this.implementAction(this.clear.bind(this))}find(t,i){this.commands=[];const e=t.length-i.length+1;this.cellSize=e<=14?30:e<=17?25:20;const s=100+t.length*this.cellSize+10;this.cmd(rt.move,this.comparisonCountID,s,30),this.textRowID=new Array(t.length),this.comparisonMatrixID=new Array(e);for(let c=0;c<e;c++)this.comparisonMatrixID[c]=new Array(t.length);let h,a;for(let c=0;c<t.length;c++)h=c*this.cellSize+100,a=30,this.textRowID[c]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex,t.charAt(c),this.cellSize,this.cellSize,h,a),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3");for(let c=0;c<e;c++)for(let i=0;i<t.length;i++)h=i*this.cellSize+100,a=(c+1)*this.cellSize+30,this.comparisonMatrixID[c][i]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex++,"",this.cellSize,this.cellSize,h,a);this.codeID=this.addCodeToCanvasBase(this.code,s,120);const n=this.nextIndex++,l=this.nextIndex++;this.cmd(rt.createHighlightCircle,n,"#0000FF",100,30,this.cellSize/2),this.cmd(rt.createHighlightCircle,l,"#0000FF",100,30+this.cellSize,this.cellSize/2);let r=0,o=0,d=0;for(this.highlight(2,0),this.cmd(rt.step);r<=t.length-i.length;){for(let t=r;t<r+i.length;t++)this.cmd(rt.setText,this.comparisonMatrixID[d][t],i.charAt(t-r),h,a);for(this.highlight(3,0),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(4,0),this.cmd(rt.step);o<i.length&&i.charAt(o)===t.charAt(r+o);){if(this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[d][r+o],"#2ECC71"),o++,this.highlight(5,0),this.cmd(rt.step),this.unhighlight(5,0),o!==i.length){const t=(r+o)*this.cellSize+100;this.cmd(rt.move,n,t,30);const i=(d+1)*this.cellSize+30;this.cmd(rt.move,l,t,i)}this.cmd(rt.step)}if(this.unhighlight(4,0),o<i.length&&this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),o!==i.length?this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[d][r+o],"#E74C3C"):(this.highlight(7,0),this.cmd(rt.step),this.unhighlight(7,0)),r++,o=0,d++,r<=t.length-i.length){const t=(r+o)*this.cellSize+100;this.cmd(rt.move,n,t,30);const i=(d+1)*this.cellSize+30;this.cmd(rt.move,l,t,i),this.cmd(rt.step)}}return this.unhighlight(2,0),this.cmd(rt.delete,n),this.cmd(rt.delete,l),this.commands}clear(){this.commands=[];for(let t=0;t<this.textRowID.length;t++)this.cmd(rt.delete,this.textRowID[t]);this.textRowID=[];for(let t=0;t<this.comparisonMatrixID.length;t++)for(let i=0;i<this.comparisonMatrixID[t].length;i++)this.cmd(rt.delete,this.comparisonMatrixID[t][i]);return this.comparisonMatrixID=[],this.removeCode(this.codeID),this.codeID=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,""),this.commands}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],BoyerMoore:["Boyer-Moore",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[],ut("Text"),this.textField=xt("Text",""),this.textField.onkeydown=this.returnSubmit(this.textField,this.findCallback.bind(this),22,!1),this.controls.push(this.textField),ut("Pattern"),this.patternField=xt("Text",""),this.patternField.onkeydown=this.returnSubmit(this.patternField,this.findCallback.bind(this),22,!1),this.controls.push(this.patternField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),ut("or"),this.blotButton=xt("Button","Build Last Occurrence Table"),this.blotButton.onclick=this.buildLastOccurrenceTableCallback.bind(this),this.controls.push(this.blotButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton),Dt(),this.galilButton=pt("Galil Rule Optimization",!1),this.galilButton.onclick=this.toggleGalilRule.bind(this),this.controls.push(this.galilButton)}setup(){this.commands=[],this.textRowID=[],this.comparisonMatrixID=[],this.patternTableLabelID=this.nextIndex++,this.patternTableCharacterID=[],this.patternTableIndexID=[],this.lastTableLabelID=this.nextIndex++,this.lastTableCharacterID=[],this.lastTableValueID=[],this.codeID=[],this.comparisonCountID=this.nextIndex++,this.periodLabelID=this.nextIndex++,this.lastTableCode=[["procedure BoyerMooreLastTable(pattern):"],["     lastTable <- map from character to integer"],["     for i < 0, length of pattern"],["          lastTable[pattern[i]] <- i"],["     return lastTable"],["end procedure"]],this.failureTableCode=[["procedure KMPFailureTable(pattern):"],["     m <- length of pattern"],["     failureTable <- array of length m"],["     i <- 0, j <- 1"],["     failureTable[0] <- 0"],["     while j < m"],["          if pattern[i] = pattern[j]"],["               failureTable[j] <- i + 1"],["               i < i + 1, j <- j + 1"],["          else"],["               if i = 0"],["                    failureTable[j] <- 0"],["                    j <- j + 1"],["               else"],["                    i <- failureTable[i - 1]"],["     return failureTable"],["end procedure"]],this.BMCode=[["procedure BoyerMoore(text, pattern):"],["     initialize lastTable"],["     m <- length of pattern, n <- length of text"],["     i <- 0"],["     while i <= n - m"],["          j = m - 1"],["          while j >= 0 and text[i + j] = pattern[j]"],["               j -> j - 1"],["          if j = -1"],["               match found at i"],["               i <- i + 1"],["          else"],["               shift <- lastTable[text[i + j]]"],["               if shift < j"],["                    i <- i + (j - shift)"],["               else"],["                    i <- i + 1"],["end procedure"]],this.GalilCode=[["procedure BoyerMooreGalil(text, pattern):"],["     initialize lastTable, failureTable"],["     m <- length of pattern, n <- length of text"],["     k <- m - failureTable[m - 1]"],["     i <- 0, w <- 0"],["     while i <= n - m"],["          j = m - 1"],["          while j >= w and text[i + j] = pattern[j]"],["               j -> j - 1"],["          if j < w"],["               match found at i"],["               i <- i + k"],["               w <- m - k"],["          else"],["               shift <- lastTable[text[i + j]]"],["               if shift < j"],["                    i <- i + (j - shift)"],["               else"],["                    i <- i + 1"],["               w <- 0"],["end procedure"]],this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"",575,15,0),this.period=1,this.cmd(rt.createLabel,this.periodLabelID,"",575,35,0),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.textRowID=[],this.comparisonMatrixID=[],this.patternTableLabelID=this.nextIndex++,this.patternTableCharacterID=[],this.patternTableIndexID=[],this.lastTableLabelID=this.nextIndex++,this.lastTableCharacterID=[],this.lastTableValueID=[],this.codeID=[],this.comparisonCountID=this.nextIndex++,this.periodLabelID=this.nextIndex++,this.compCount=0,this.period=1}findCallback(){if(""!==this.textField.value&&""!==this.patternField.value&&this.textField.value.length>=this.patternField.value.length){this.implementAction(this.clear.bind(this));const t=this.textField.value,i=this.patternField.value;this.textField.value="",this.patternField.value="",this.implementAction(this.find.bind(this),t,i)}}buildLastOccurrenceTableCallback(){if(""!==this.patternField.value){this.implementAction(this.clear.bind(this));const t=this.patternField.value;this.patternField.value="",this.implementAction(this.onlyBuildLastOccurrenceTable.bind(this),0,t)}}clearCallback(){this.implementAction(this.clear.bind(this))}toggleGalilRule(){Kt=!Kt}find(t,i){console.log(this.codeID),this.codeID&&this.removeCode(this.codeID),this.commands=[];const e=this.getMaxRows(t,i);this.cellSize=e<=14?30:e<=17?25:20,this.textRowID=new Array(t.length),this.comparisonMatrixID=new Array(e);for(let g=0;g<e;g++)this.comparisonMatrixID[g]=new Array(t.length);for(let g=0;g<t.length;g++){const i=g*this.cellSize+100,e=30;this.textRowID[g]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex,t.charAt(g),this.cellSize,this.cellSize,i,e),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3")}let s,h;for(let g=0;g<e;g++)for(let i=0;i<t.length;i++)s=i*this.cellSize+100,h=(g+1)*this.cellSize+30,this.comparisonMatrixID[g][i]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex++,"",this.cellSize,this.cellSize,s,h);const a=this.buildLastTable(t.length,i);this.removeCode(this.codeID),Kt?(this.buildFailureTable(t.length,i),this.codeID=this.addCodeToCanvasBase(this.GalilCode,100+t.length*this.cellSize+10,195)):this.codeID=this.addCodeToCanvasBase(this.BMCode,100+t.length*this.cellSize+10,195);const n=this.nextIndex++,l=this.nextIndex++;this.cmd(rt.createHighlightCircle,n,"#0000FF",100+(i.length-1)*this.cellSize,30,this.cellSize/2),this.cmd(rt.createHighlightCircle,l,"#0000FF",100+(i.length-1)*this.cellSize,30+this.cellSize,this.cellSize/2);let r=0,o=i.length-1,d=0,c=0,m=Kt?1:0;for(this.highlight(m+4,0);r<=t.length-i.length;){m=Kt?1:0;for(let t=r;t<r+i.length;t++)this.cmd(rt.setText,this.comparisonMatrixID[d][t],i.charAt(t-r),s,h),t-r<c&&this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[d][t],"#FFFF4D");for(this.highlight(m+5,0),this.cmd(rt.step),this.unhighlight(m+5,0),this.highlight(m+6,0);o>=c&&i.charAt(o)===t.charAt(r+o);)if(this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[d][r+o],"#2ECC71"),o--,this.highlight(m+7,0),this.cmd(rt.step),this.unhighlight(m+7,0),o>=0){const t=(r+o)*this.cellSize+100;this.cmd(rt.move,n,t,30);const i=(d+1)*this.cellSize+30;this.cmd(rt.move,l,t,i),this.cmd(rt.step)}if(this.unhighlight(m+6,0),this.highlight(m+8,0),this.cmd(rt.step),this.unhighlight(m+8,0),o<c)this.highlight(m+9,0),this.highlight(m+10,0),Kt?(this.highlight(m+11,0),r+=this.period,c=i.length-this.period):r++,this.cmd(rt.step),this.unhighlight(m+9,0),this.unhighlight(m+10,0),this.unhighlight(m+11,0);else{let i;this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),0!==c&&(c=0),m=Kt?2:0,this.highlight(11+m,0),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[d][r+o],"#E74C3C"),this.cmd(rt.step),this.unhighlight(11+m,0),this.highlight(12+m,0),i=t.charAt(r+o)in a?a[t.charAt(r+o)]:-1,this.cmd(rt.step),this.unhighlight(12+m,0),this.highlight(13+m,0),this.cmd(rt.step),this.unhighlight(13+m,0),i<o?(this.highlight(14+m,0),r+=o-i):(this.highlight(15+m,0),this.cmd(rt.step),this.unhighlight(15+m,0),this.highlight(16+m,0),r++),this.cmd(rt.step),this.unhighlight(14+m,0),this.unhighlight(16+m,0)}if(o=i.length-1,d++,r<=t.length-i.length){const t=(r+o)*this.cellSize+100;this.cmd(rt.move,n,t,30);const i=(d+1)*this.cellSize+30;this.cmd(rt.move,l,t,i)}}return m=Kt?1:0,this.unhighlight(m+4,0),this.cmd(rt.step),this.cmd(rt.delete,n),this.cmd(rt.delete,l),this.commands}getMaxRows(t,i){if(Kt){const t=[];t[0]=0;let e=0,s=1;for(;s<i.length;)i.charAt(e)===i.charAt(s)?(e++,t[s]=e,s++):0===e?(t[s]=e,s++):e=t[e-1];this.period=i.length-t[i.length-1]}const e={};for(let l=0;l<i.length;l++)e[i.charAt(l)]=l;let s=0,h=i.length-1,a=0,n=0;for(;s<=t.length-i.length;){for(;h>=n&&i.charAt(h)===t.charAt(s+h);)h--;if(h<n)Kt?(s+=this.period,n=i.length-this.period):s++;else{let i;0!==n&&(n=0),i=t.charAt(s+h)in e?e[t.charAt(s+h)]:-1,i<h?s+=h-i:s++}h=i.length-1,a++}return a}onlyBuildLastOccurrenceTable(t,i){return this.commands=[],this.cellSize=30,this.buildLastTable(t,i),this.commands}buildLastTable(t,i){const e=100+t*this.cellSize+10;this.cmd(rt.createLabel,this.patternTableLabelID,"Pattern:",e,75,0),this.cmd(rt.createLabel,this.lastTableLabelID,"Last occurence table:",e,150,0),this.cmd(rt.move,this.comparisonCountID,e,15),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.codeID=this.addCodeToCanvasBase(this.lastTableCode,e,195);const s=100+t*this.cellSize+80;this.patternTableCharacterID=new Array(i.length),this.patternTableIndexID=new Array(i.length);for(let o=0;o<i.length;o++){const t=s+o*this.cellSize;this.patternTableCharacterID[o]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex++,i.charAt(o),this.cellSize,this.cellSize,t,80),this.patternTableIndexID[o]=this.nextIndex,this.cmd(rt.createLabel,this.nextIndex++,o,t,80+this.cellSize)}const h={},a=100+t*this.cellSize+155;this.lastTableCharacterID=[],this.lastTableValueID=[];let n=0;const l=this.nextIndex++;this.cmd(rt.createHighlightCircle,l,"#0000FF",s,80,this.cellSize/2),this.cmd(rt.setHighlight,l,1),this.highlight(2,0);for(let o=0;o<i.length;o++){this.cmd(rt.step);let t=s+o*this.cellSize;this.cmd(rt.move,l,t,80),this.highlight(3,0),h[i.charAt(o)]?(this.cmd(rt.setText,h[i.charAt(o)][1],o),this.cmd(rt.setHighlight,h[i.charAt(o)][1],1),h[i.charAt(o)][0]=o):(t=a+n*this.cellSize,this.lastTableCharacterID.push(this.nextIndex),this.cmd(rt.createRectangle,this.nextIndex,i.charAt(o),this.cellSize,this.cellSize,t,140),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3"),this.lastTableValueID.push(this.nextIndex),this.cmd(rt.createRectangle,this.nextIndex,o,this.cellSize,this.cellSize,t,140+this.cellSize),this.cmd(rt.setHighlight,this.nextIndex,1),n++,h[i.charAt(o)]=[o,this.nextIndex++]),this.cmd(rt.step),this.unhighlight(3,0),this.cmd(rt.setHighlight,h[i.charAt(o)][1],0)}this.unhighlight(2,0),this.cmd(rt.delete,l);const r=a+n*this.cellSize;return this.lastTableCharacterID.push(this.nextIndex),this.cmd(rt.createRectangle,this.nextIndex,"*",this.cellSize,this.cellSize,r,140),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3"),this.lastTableValueID.push(this.nextIndex),this.cmd(rt.createRectangle,this.nextIndex++,"-1",this.cellSize,this.cellSize,r,140+this.cellSize),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(4,0),Object.keys(h).map(t=>h[t]=h[t][0]),h}buildFailureTable(t,i){const e=this.nextIndex;this.failureTableLabelID=this.nextIndex++,this.failureTableCharacterID=[],this.failureTableValueID=[];const s=100+t*this.cellSize+10;this.cmd(rt.createLabel,this.failureTableLabelID,"Failure table:",s,225,0),this.cmd(rt.move,this.periodLabelID,s,35),this.cmd(rt.setText,this.periodLabelID,"Period = pattern.length - FT[pattern.length - 1]"),this.codeID=this.addCodeToCanvasBase(this.failureTableCode,s,265);const h=100+t*this.cellSize+110;this.failureTableCharacterID=new Array(i.length),this.failureTableValueID=new Array(i.length);for(let c=0;c<i.length;c++){const t=h+c*this.cellSize;this.failureTableCharacterID[c]=this.nextIndex++,this.cmd(rt.createRectangle,this.failureTableCharacterID[c],i.charAt(c),this.cellSize,this.cellSize,t,215),this.cmd(rt.setBackgroundColor,this.failureTableCharacterID[c],"#D3D3D3"),this.failureTableValueID[c]=this.nextIndex++,this.cmd(rt.createRectangle,this.failureTableValueID[c],"",this.cellSize,this.cellSize,t,215+this.cellSize)}this.cmd(rt.step);const a=this.nextIndex++,n=this.nextIndex++;this.cmd(rt.createHighlightCircle,a,"#0000FF",h,215,this.cellSize/2),this.cmd(rt.createHighlightCircle,n,"#FF0000",h+this.cellSize,215,this.cellSize/2),this.cmd(rt.setText,this.failureTableValueID[0],0),this.highlight(3,0),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(3,0),this.unhighlight(4,0);const l=[];l[0]=0;let r=0,o=1;for(this.highlight(5,0);o<i.length;)this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),i.charAt(r)===i.charAt(o)?(this.highlight(7,0),this.highlight(8,0),r++,l[o]=r,this.cmd(rt.setText,this.failureTableValueID[o],r),o++,o<i.length&&(this.cmd(rt.move,a,h+r*this.cellSize,215),this.cmd(rt.move,n,h+o*this.cellSize,215)),this.cmd(rt.step),this.unhighlight(7,0),this.unhighlight(8,0)):(this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(10,0),this.cmd(rt.step),this.unhighlight(10,0),0===r?(this.highlight(11,0),this.highlight(12,0),l[o]=r,this.cmd(rt.setText,this.failureTableValueID[o],r),o++,o<i.length&&this.cmd(rt.move,n,h+o*this.cellSize,215),this.cmd(rt.step),this.unhighlight(11,0),this.unhighlight(12,0)):(this.highlight(13,0),this.cmd(rt.step),this.unhighlight(13,0),this.highlight(14,0),r=l[r-1],this.cmd(rt.move,a,h+r*this.cellSize,215),this.cmd(rt.step),this.unhighlight(14,0)));this.unhighlight(5,0),this.highlight(15,0),this.cmd(rt.step),this.unhighlight(15,0),this.cmd(rt.setText,this.periodLabelID,"Period = "+i.length+" - "+l[i.length-1]);const d=this.nextIndex++;this.cmd(rt.createHighlightCircle,d,"#FF0000",h+this.cellSize*(i.length-1),215+this.cellSize,this.cellSize/2),this.cmd(rt.step),this.period=i.length-l[i.length-1],this.cmd(rt.setText,this.periodLabelID,"Period = "+this.period),this.cmd(rt.delete,d),0!==this.failureTableValueID.length&&this.cmd(rt.delete,this.failureTableLabelID);for(let c=0;c<this.failureTableCharacterID.length;c++)this.cmd(rt.delete,this.failureTableCharacterID[c]),this.cmd(rt.delete,this.failureTableValueID[c]);return this.cmd(rt.delete,a),this.cmd(rt.delete,n),this.removeCode(this.codeID),this.nextIndex=e,l}clear(){this.commands=[];for(let t=0;t<this.textRowID.length;t++)this.cmd(rt.delete,this.textRowID[t]);this.textRowID=[];for(let t=0;t<this.comparisonMatrixID.length;t++)for(let i=0;i<this.comparisonMatrixID[t].length;i++)this.cmd(rt.delete,this.comparisonMatrixID[t][i]);this.comparisonMatrixID=[],0!==this.patternTableCharacterID.length&&this.cmd(rt.delete,this.patternTableLabelID);for(let t=0;t<this.patternTableCharacterID.length;t++)this.cmd(rt.delete,this.patternTableCharacterID[t]),this.cmd(rt.delete,this.patternTableIndexID[t]);this.patternTableCharacterID=[],this.patternTableIndexID=[],0!==this.lastTableCharacterID.length&&this.cmd(rt.delete,this.lastTableLabelID);for(let t=0;t<this.lastTableCharacterID.length;t++)this.cmd(rt.delete,this.lastTableCharacterID[t]),this.cmd(rt.delete,this.lastTableValueID[t]);return this.removeCode(this.codeID),this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,""),this.cmd(rt.setText,this.periodLabelID,""),this.lastTableCharacterID=[],this.lastTableValueID=[],this.failureTableCharacterID=[],this.failureTableValueID=[],this.codeID=[],this.period=1,this.commands}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],KMP:["KMP",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[],ut("Text"),this.textField=xt("Text",""),this.textField.onkeydown=this.returnSubmit(this.textField,this.findCallback.bind(this),22,!1),this.controls.push(this.textField),ut("Pattern"),this.patternField=xt("Text",""),this.patternField.onkeydown=this.returnSubmit(this.patternField,this.findCallback.bind(this),22,!1),this.controls.push(this.patternField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),ut("or"),this.bftButton=xt("Button","Build Failure Table"),this.bftButton.onclick=this.buildFailureTableCallback.bind(this),this.controls.push(this.bftButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.textRowID=[],this.comparisonMatrixID=[],this.failureTableLabelID=this.nextIndex++,this.failureTableCharacterID=[],this.failureTableValueID=[],this.codeID=[],this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"",575,30,0),this.failureTableCode=[["procedure KMPFailureTable(pattern):"],["     m <- length of pattern"],["     failureTable <- array of length m"],["     i <- 0, j <- 1"],["     failureTable[0] <- 0"],["     while j < m"],["          if pattern[i] = pattern[j]"],["               failureTable[j] <- i + 1"],["               i < i + 1, j <- j + 1"],["          else"],["               if i = 0"],["                    failureTable[j] <- 0"],["                    j <- j + 1"],["               else"],["                    i <- failureTable[i - 1]"],["     return failureTable"],["end procedure"]],this.KMPCode=[["procedure KMP(text, pattern):"],["     initialize failureTable"],["     m <- length of pattern, n <- length of text"],["     i <- 0, j <- 0"],["     while i <= n - m"],["          while j < m and text[i + j] = pattern[j]"],["               j -> j + 1"],["          if j = 0"],["               i <- i + 1"],["          else"],["               if j = m"],["                    match found at i"],["               shift <- failureTable[j - 1]"],["               i <- i + j - shift"],["               j <- shift"],["end procedure"]],this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.textRowID=[],this.comparisonMatrixID=[],this.failureTableLabelID=this.nextIndex++,this.failureTableCharacterID=[],this.failureTableValueID=[],this.codeID=[],this.comparisonCountID=this.nextIndex++,this.compCount=0}findCallback(){if(""!==this.textField.value&&""!==this.patternField.value&&this.textField.value.length>=this.patternField.value.length){this.implementAction(this.clear.bind(this));const t=this.textField.value,i=this.patternField.value;this.textField.value="",this.patternField.value="",this.implementAction(this.find.bind(this),t,i)}}buildFailureTableCallback(){if(""!==this.patternField.value){this.implementAction(this.clear.bind(this));const t=this.patternField.value;this.patternField.value="",this.implementAction(this.onlyBuildFailureTable.bind(this),0,t)}}clearCallback(){this.implementAction(this.clear.bind(this))}find(t,i){this.commands=[];const e=this.getMaxRows(t,i);this.cellSize=e<=14?30:e<=17?25:20,this.textRowID=new Array(t.length),this.comparisonMatrixID=new Array(e);for(let p=0;p<e;p++)this.comparisonMatrixID[p]=new Array(t.length);let s,h;for(let p=0;p<t.length;p++)s=p*this.cellSize+100,h=30,this.textRowID[p]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex,t.charAt(p),this.cellSize,this.cellSize,s,h),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3");for(let p=0;p<e;p++)for(let i=0;i<t.length;i++)s=i*this.cellSize+100,h=(p+1)*this.cellSize+30,this.comparisonMatrixID[p][i]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex++,"",this.cellSize,this.cellSize,s,h);const a=this.buildFailureTable(t.length,i);this.removeCode(this.codeID);const n=100+t.length*this.cellSize+110;this.codeID=this.addCodeToCanvasBase(this.KMPCode,100+t.length*this.cellSize+10,195);const l=this.nextIndex++,r=this.nextIndex++,o=this.nextIndex++,d=this.nextIndex++,c=this.nextIndex++;this.cmd(rt.createHighlightCircle,l,"#0000FF",100,30,this.cellSize/2),this.cmd(rt.createHighlightCircle,r,"#0000FF",100,30+this.cellSize,this.cellSize/2),this.cmd(rt.createHighlightCircle,o,"#FF0000",100,30+this.cellSize,this.cellSize/2),this.cmd(rt.createHighlightCircle,d,"#FF0000",n,100,this.cellSize/2),this.cmd(rt.createHighlightCircle,c,"#FF0000",n,100+this.cellSize,this.cellSize/2),this.cmd(rt.setAlpha,o,0),this.cmd(rt.setAlpha,d,0),this.cmd(rt.setAlpha,c,0);let m=0,g=0,u=0;for(this.highlight(4,0);m<=t.length-i.length;){for(let t=m;t<m+i.length;t++)this.cmd(rt.setText,this.comparisonMatrixID[u][t],i.charAt(t-m),s,h),t-m<g&&this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[u][t],"#FFFF4D");for(this.cmd(rt.step),this.highlight(5,0),this.cmd(rt.setAlpha,o,0),this.cmd(rt.setAlpha,d,0),this.cmd(rt.setAlpha,c,0);g<i.length&&i.charAt(g)===t.charAt(m+g);)this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[u][m+g],"#2ECC71"),g++,this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),g<i.length&&(s=(m+g)*this.cellSize+100,this.cmd(rt.move,l,s,30),h=(u+1)*this.cellSize+30,this.cmd(rt.move,r,s,h),this.cmd(rt.step));if(this.unhighlight(5,0),g<i.length&&this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.highlight(7,0),this.cmd(rt.step),0===g)this.unhighlight(7,0),this.highlight(8,0),this.cmd(rt.step),this.unhighlight(8,0),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[u][m],"#E74C3C"),m++;else{this.unhighlight(7,0),this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(10,0),this.cmd(rt.step),this.unhighlight(10,0),g!==i.length?this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[u][m+g],"#E74C3C"):(this.highlight(11,0),this.cmd(rt.step),this.unhighlight(11,0)),this.highlight(12,0);const t=a[g-1];this.cmd(rt.setPosition,o,(m+g-1)*this.cellSize+100,(u+1)*this.cellSize+30),this.cmd(rt.setPosition,d,n+(g-1)*this.cellSize,100),this.cmd(rt.setPosition,c,n+(g-1)*this.cellSize,100+this.cellSize),this.cmd(rt.setAlpha,o,1),this.cmd(rt.setAlpha,d,1),this.cmd(rt.setAlpha,c,1),this.cmd(rt.step),this.unhighlight(12,0),this.highlight(13,0),this.highlight(14,0),m+=g-t,g=t}u++,m<=t.length-i.length&&(s=(m+g)*this.cellSize+100,this.cmd(rt.move,l,s,30),h=(u+1)*this.cellSize+30,this.cmd(rt.move,r,s,h)),this.cmd(rt.step),this.unhighlight(13,0),this.unhighlight(14,0)}return this.unhighlight(4,0),this.cmd(rt.delete,l),this.cmd(rt.delete,r),this.cmd(rt.delete,o),this.cmd(rt.delete,d),this.cmd(rt.delete,c),this.commands}getMaxRows(t,i){const e=[];e[0]=0;let s=0,h=1;for(;h<i.length;)i.charAt(s)===i.charAt(h)?(s++,e[h]=s,h++):0===s?(e[h]=s,h++):s=e[s-1];s=0,h=0;let a=0;for(;s<=t.length-i.length;){for(;h<i.length&&i.charAt(h)===t.charAt(s+h);)h++;if(0===h)s++;else{const t=e[h-1];s+=h-t,h=t}a++}return a}onlyBuildFailureTable(t,i){return this.commands=[],this.cellSize=30,this.buildFailureTable(t,i),this.commands}buildFailureTable(t,i){const e=100+t*this.cellSize+10;this.cmd(rt.createLabel,this.failureTableLabelID,"Failure table:",e,110,0),this.codeID=this.addCodeToCanvasBase(this.failureTableCode,e,195),this.cmd(rt.move,this.comparisonCountID,e,30),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount);const s=100+t*this.cellSize+110;this.failureTableCharacterID=new Array(i.length),this.failureTableValueID=new Array(i.length);for(let o=0;o<i.length;o++){const t=s+o*this.cellSize;this.failureTableCharacterID[o]=this.nextIndex++,this.cmd(rt.createRectangle,this.failureTableCharacterID[o],i.charAt(o),this.cellSize,this.cellSize,t,100),this.cmd(rt.setBackgroundColor,this.failureTableCharacterID[o],"#D3D3D3"),this.failureTableValueID[o]=this.nextIndex++,this.cmd(rt.createRectangle,this.failureTableValueID[o],"",this.cellSize,this.cellSize,t,100+this.cellSize)}this.cmd(rt.step);const h=this.nextIndex++,a=this.nextIndex++;this.cmd(rt.createHighlightCircle,h,"#0000FF",s,100,this.cellSize/2),this.cmd(rt.createHighlightCircle,a,"#FF0000",s+this.cellSize,100,this.cellSize/2),this.cmd(rt.setText,this.failureTableValueID[0],0),this.highlight(3,0),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(3,0),this.unhighlight(4,0);const n=[];n[0]=0;let l=0,r=1;for(this.highlight(5,0);r<i.length;)this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),i.charAt(l)===i.charAt(r)?(this.highlight(7,0),this.highlight(8,0),l++,n[r]=l,this.cmd(rt.setText,this.failureTableValueID[r],l),r++,r<i.length&&(this.cmd(rt.move,h,s+l*this.cellSize,100),this.cmd(rt.move,a,s+r*this.cellSize,100)),this.cmd(rt.step),this.unhighlight(7,0),this.unhighlight(8,0)):(this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.highlight(10,0),this.cmd(rt.step),this.unhighlight(10,0),0===l?(this.highlight(11,0),this.highlight(12,0),n[r]=l,this.cmd(rt.setText,this.failureTableValueID[r],l),r++,r<i.length&&this.cmd(rt.move,a,s+r*this.cellSize,100),this.cmd(rt.step),this.unhighlight(11,0),this.unhighlight(12,0)):(this.highlight(13,0),this.cmd(rt.step),this.unhighlight(13,0),this.highlight(14,0),l=n[l-1],this.cmd(rt.move,h,s+l*this.cellSize,100),this.cmd(rt.step),this.unhighlight(14,0)));return this.unhighlight(5,0),this.highlight(15,0),this.cmd(rt.step),this.unhighlight(15,0),this.cmd(rt.delete,h),this.cmd(rt.delete,a),n}clear(){this.commands=[];for(let t=0;t<this.textRowID.length;t++)this.cmd(rt.delete,this.textRowID[t]);this.textRowID=[];for(let t=0;t<this.comparisonMatrixID.length;t++)for(let i=0;i<this.comparisonMatrixID[t].length;i++)this.cmd(rt.delete,this.comparisonMatrixID[t][i]);this.comparisonMatrixID=[],0!==this.failureTableValueID.length&&this.cmd(rt.delete,this.failureTableLabelID);for(let t=0;t<this.failureTableCharacterID.length;t++)this.cmd(rt.delete,this.failureTableCharacterID[t]),this.cmd(rt.delete,this.failureTableValueID[t]);return this.removeCode(this.codeID),this.codeID=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,""),this.failureTableCharacterID=[],this.failureTableValueID=[],this.commands}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],RabinKarp:["Rabin-Karp",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[],ut("Text"),this.textField=xt("Text",""),this.textField.onkeydown=this.returnSubmit(this.textField,this.findCallback.bind(this),22,!1),this.controls.push(this.textField),ut("Pattern"),this.patternField=xt("Text",""),this.patternField.onkeydown=this.returnSubmit(this.patternField,this.findCallback.bind(this),22,!1),this.controls.push(this.patternField),this.findButton=xt("Button","Find"),this.findButton.onclick=this.findCallback.bind(this),this.controls.push(this.findButton),this.baseField=xt("Base",""),this.baseField.onkeydown=this.returnSubmit(this.baseField,this.findCallback.bind(this),4,!0),this.controls.push(this.baseField),this.baseButton=xt("Button","Change Base"),this.baseButton.onclick=this.baseCallback.bind(this),this.controls.push(this.baseButton),Dt(),this.clearButton=xt("Button","Clear"),this.clearButton.onclick=this.clearCallback.bind(this),this.controls.push(this.clearButton)}setup(){this.commands=[],this.textRowID=[],this.comparisonMatrixID=[],this.baseLabelID=this.nextIndex++,this.characterValuesLabelID=this.nextIndex++,this.textHashLabelID=this.nextIndex++,this.textHashCalculationID=this.nextIndex++,this.patternHashLabelID=this.nextIndex++,this.patternHashCalculationID=this.nextIndex++,this.baseValue=1,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.cmd(rt.createLabel,this.comparisonCountID,"",575,30,0),this.code=[["procedure RabinKarp(text, pattern)"],["     m <- length of pattern, n <- length of text"],["     patternHash \u2190 rolling hash of pattern"],["     textHash \u2190 rolling hash of first m characters of text"],["     i <- 0"],["     while i <= n - m"],["          if patternHash = textHash"],["               j <- 0"],["               while j < m and text[i + j] = pattern[j]"],["                    j <- j + 1"],["               if j = m"],["                    match found at i"],["          i <- i + 1"],["          if i <= n - m"],["               textHash <- new hash of text, from i to i + m"],["end procedure"]],this.codeID=[],this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory()}reset(){this.nextIndex=0,this.textRowID=[],this.comparisonMatrixID=[],this.baseLabelID=this.nextIndex++,this.characterValuesLabelID=this.nextIndex++,this.textHashLabelID=this.nextIndex++,this.textHashCalculationID=this.nextIndex++,this.patternHashLabelID=this.nextIndex++,this.patternHashCalculationID=this.nextIndex++,this.comparisonCountID=this.nextIndex++,this.compCount=0,this.codeID=[]}findCallback(){if(""!==this.textField.value&&""!==this.patternField.value&&this.textField.value.length>=this.patternField.value.length){this.implementAction(this.clear.bind(this));const t=this.textField.value,i=this.patternField.value;this.textField.value="",this.patternField.value="",this.implementAction(this.find.bind(this),t,i)}}baseCallback(){const t=parseInt(this.baseField.value);""!==this.baseField.value&&0!==t&&(this.baseField.value="",this.baseValue=t)}clearCallback(){this.implementAction(this.clear.bind(this))}find(t,i){this.commands=[],t=t.replace(/[^a-zA-Z]/g,"").toLowerCase(),i=i.replace(/[^a-zA-Z]/g,"").toLowerCase();const e=t.length-i.length+1;this.cellSize=e<=14?30:e<=17?25:20,this.textRowID=new Array(t.length),this.comparisonMatrixID=new Array(e);for(let I=0;I<e;I++)this.comparisonMatrixID[I]=new Array(t.length);let s,h;for(let I=0;I<t.length;I++)s=I*this.cellSize+100,h=30,this.textRowID[I]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex,t.charAt(I),this.cellSize,this.cellSize,s,h),this.cmd(rt.setBackgroundColor,this.nextIndex++,"#D3D3D3");for(let I=0;I<e;I++)for(let i=0;i<t.length;i++)s=i*this.cellSize+100,h=(I+1)*this.cellSize+30,this.comparisonMatrixID[I][i]=this.nextIndex,this.cmd(rt.createRectangle,this.nextIndex++,"",this.cellSize,this.cellSize,s,h);const a=100+t.length*this.cellSize+10;this.cmd(rt.createLabel,this.baseLabelID,"Base constant = "+this.baseValue,a,45,0),this.cmd(rt.createLabel,this.characterValuesLabelID,"Character values: a = 0, b = 1, ..., z = 25",a,60,0),this.cmd(rt.createLabel,this.textHashLabelID,"Text hash:",a,100,0),this.cmd(rt.createLabel,this.patternHashLabelID,"Pattern hash:",a,115,0),this.cmd(rt.move,this.comparisonCountID,a,30),this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+this.compCount),this.codeID=this.addCodeToCanvasBase(this.code,a,180);let n="",l=0,r="",o=0;const d=Math.pow(this.baseValue,i.length-1);let c=d;for(let I=0;I<i.length;I++)l+=(t.charCodeAt(I)-97)*c,n+=`(${t.charAt(I)} * ${c}) + `,o+=(i.charCodeAt(I)-97)*c,r+=`(${i.charAt(I)} * ${c}) + `,c/=this.baseValue;n=n.substring(0,n.length-2)+" = "+l,r=r.substring(0,r.length-2)+" = "+o;const m=100+t.length*this.cellSize+100;this.cmd(rt.createLabel,this.textHashCalculationID,n,m,100,0),this.cmd(rt.createLabel,this.patternHashCalculationID,r,m,115,0);const g=this.nextIndex++,u=this.nextIndex++;this.highlight(2,0),this.cmd(rt.step),this.unhighlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(3,0),this.highlight(5,0);let p=0;for(let I=0;I<=t.length-i.length;I++){for(let t=I;t<I+i.length;t++)this.cmd(rt.setText,this.comparisonMatrixID[p][t],i.charAt(t-I),s,h);if(this.cmd(rt.step),this.highlight(6,0),this.cmd(rt.step),o===l){this.unhighlight(6,0),this.highlight(7,0),s=I*this.cellSize+100,this.cmd(rt.createHighlightCircle,g,"#0000FF",s,30),h=(p+1)*this.cellSize+30,this.cmd(rt.createHighlightCircle,u,"#0000FF",s,h),this.cmd(rt.step),this.unhighlight(7,0),this.highlight(8,0),this.cmd(rt.step);let e=0;for(;e<i.length&&i.charAt(e)===t.charAt(I+e);)this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[p][I+e],"#2ECC71"),e++,this.highlight(9,0),e!==i.length&&(s=(I+e)*this.cellSize+100,this.cmd(rt.move,g,s,30),h=(p+1)*this.cellSize+30,this.cmd(rt.move,u,s,h)),this.cmd(rt.step),this.unhighlight(9,0);this.unhighlight(8,0),this.highlight(10,0),this.cmd(rt.step),this.unhighlight(10,0),e!==i.length?(this.cmd(rt.setText,this.comparisonCountID,"Comparison Count: "+ ++this.compCount),this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[p][I+e],"#E74C3C")):(this.highlight(11,0),this.cmd(rt.step),this.unhighlight(11,0)),this.cmd(rt.delete,g),this.cmd(rt.delete,u),this.cmd(rt.step)}else{for(let t=I;t<I+i.length;t++)this.cmd(rt.setBackgroundColor,this.comparisonMatrixID[p][t],"#FFFF4D");this.unhighlight(6,0),this.cmd(rt.step)}if(this.highlight(12,0),this.cmd(rt.step),this.unhighlight(12,0),this.highlight(13,0),this.cmd(rt.step),this.unhighlight(13,0),I<t.length-i.length){this.highlight(14,0),l=this.baseValue*(l-d*(t.charCodeAt(I)-97))+(t.charCodeAt(I+i.length)-97),n="",c=d;for(let e=0;e<i.length;e++)n+=`(${t.charAt(e+I+1)} * ${c}) + `,c/=this.baseValue;n=n.substring(0,n.length-2)+" = "+l,this.cmd(rt.setText,this.textHashCalculationID,n),this.cmd(rt.step),this.unhighlight(14,0)}p++}return this.unhighlight(5,0),this.commands}clear(){this.commands=[],0!==this.textRowID.length&&(this.cmd(rt.delete,this.baseLabelID),this.cmd(rt.delete,this.characterValuesLabelID),this.cmd(rt.delete,this.textHashLabelID),this.cmd(rt.delete,this.textHashCalculationID),this.cmd(rt.delete,this.patternHashLabelID),this.cmd(rt.delete,this.patternHashCalculationID));for(let t=0;t<this.textRowID.length;t++)this.cmd(rt.delete,this.textRowID[t]);this.textRowID=[];for(let t=0;t<this.comparisonMatrixID.length;t++)for(let i=0;i<this.comparisonMatrixID[t].length;i++)this.cmd(rt.delete,this.comparisonMatrixID[t][i]);return this.comparisonMatrixID=[],this.compCount=0,this.cmd(rt.setText,this.comparisonCountID,""),this.removeCode(this.codeID),this.codeID=[],this.commands}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}}],BFS:["Breadth-First Search",class extends zt{constructor(t,i,e){super(t,i,e,_t),this.addControls()}addControls(){ut("Start vertex: "),this.startField=xt("Text",""),this.startField.onkeydown=this.returnSubmit(this.startField,this.startCallback.bind(this),1,!1),this.startField.size=2,this.controls.push(this.startField),this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),this.controls.push(this.startButton),Dt(),super.addControls()}setup(t){super.setup(t),this.commands=[],this.messageID=[],this.visited=[],this.queueID=[],this.listID=[],this.visitedID=[],this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",25,15,0),this.code=[["procedure BFS(Vertex S)"],["initialize VisitedSet, VS"],["initialize Queue, Q"],["add S to Q"],["while Q is not empty"],["     v <- remove from Q"],["          for all w adjacent to v"],["               if w not in VS"],["                    add w to Q"],["                    mark w as visited in VS"]],this.cmd(rt.createLabel,this.nextIndex++,"Visited Set:",25,90,0),this.cmd(rt.createLabel,this.nextIndex++,"List:",25,40,0),this.cmd(rt.createLabel,this.nextIndex++,"Current vertex:",25,140,0),this.cmd(rt.createLabel,this.nextIndex++,"Queue:",25,165,0),this.codeID=this.addCodeToCanvasBase(this.code,25,250),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.lastIndex=this.nextIndex}reset(){this.nextIndex=this.lastIndex,this.listID=[],this.messageID=[],this.visitedID=[]}startCallback(){if(""!==this.startField.value){let t=this.startField.value;this.startField.value="",t=t.toUpperCase().charCodeAt(0)-65,t>=0&&t<this.size&&this.implementAction(this.doBFS.bind(this),t)}}doBFS(t){this.commands=[],this.clear(),this.queue=[],this.queueID=[],this.listID=[],this.visitedID=[],this.rebuildEdges();let i=t;for(this.cmd(rt.setText,this.infoLabelID,"Enqueueing "+this.toStr(i)+" and adding to visited set"),this.visited[i]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30,115),this.cmd(rt.setBackgroundColor,this.circleID[i],"#99CCFF"),this.queue.push(i),this.queueID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30,190),this.highlight(1,0),this.highlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(1,0),this.unhighlight(2,0),this.unhighlight(3,0),this.highlight(4,0);this.queue.length>0&&this.listID.length<this.size;){i=this.queue.shift(),this.highlight(5,0),this.cmd(rt.setText,this.infoLabelID,"Dequeueing "+this.toStr(i)+" and adding to list"),this.cmd(rt.setTextColor,this.queueID[0],"#0000FF"),this.cmd(rt.move,this.queueID[0],115,146);for(let t=1;t<this.queueID.length;t++)this.cmd(rt.move,this.queueID[t],30+20*(t-1),190);this.listID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30+20*(this.listID.length-1),65),this.visitVertex(i),this.cmd(rt.step),this.unhighlight(5,0),this.highlight(6,0);for(let t=0;t<this.size;t++)this.adj_matrix[i][t]>0&&(this.highlightEdge(i,t,1),this.highlight(7,0),this.cmd(rt.step),this.visited[t]?(this.unhighlight(7,0),this.cmd(rt.setText,this.infoLabelID,this.toStr(t)+" has already been visited, skipping")):(this.unhighlight(7,0),this.highlight(8,0),this.highlight(9,0),this.visited[t]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.setText,this.infoLabelID,this.toStr(t)+" has not yet been visited, enqueueing and adding to visited set"),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30+20*(this.visitedID.length-1),115),this.cmd(rt.setBackgroundColor,this.circleID[t],"#99CCFF"),this.queue.push(t),this.queueID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30+20*(this.queue.length-1),190)),this.cmd(rt.step),this.unhighlight(8,0),this.unhighlight(9,0),this.highlightEdge(i,t,0));this.unhighlight(6,0),this.cmd(rt.delete,this.queueID.shift()),this.leaveVertex()}return this.unhighlight(4,0),this.queue.length>0?this.cmd(rt.setText,this.infoLabelID,"All vertices have been visited, done"):this.cmd(rt.setText,this.infoLabelID,"Queue is empty, done"),this.commands}clear(){for(let t=0;t<this.size;t++)this.cmd(rt.setBackgroundColor,this.circleID[t],"#FFFFFF"),this.visited[t]=!1;for(let t=0;t<this.listID.length;t++)this.cmd(rt.delete,this.listID[t]);for(let t=0;t<this.visitedID.length;t++)this.cmd(rt.delete,this.visitedID[t]);if(null!=this.messageID)for(let t=0;t<this.messageID.length;t++)this.cmd(rt.delete,this.messageID[t]);this.messageID=[]}}],DFS:["Depth-First Search",class extends zt{constructor(t,i,e){super(t,i,e,_t),this.addControls(),this.physicalStack=!1}addControls(){ut("Start vertex: "),this.startField=xt("Text",""),this.startField.onkeydown=this.returnSubmit(this.startField,this.startCallback.bind(this),1,!1),this.controls.push(this.startField),this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),this.controls.push(this.startButton),Dt();const t=It(["Recursion","Stack"],"StackType");this.recursiveStackButton=t[0],this.recursiveStackButton.onclick=this.stackCallback.bind(this,!1),this.recursiveStackButton.checked=!0,this.controls.push(this.recursiveStackButton),this.physicalStackButton=t[1],this.physicalStackButton.onclick=this.stackCallback.bind(this,!0),this.controls.push(this.physicalStackButton),Dt(),super.addControls()}setup(t){super.setup(t),this.commands=[],this.messageID=[],this.visited=[],this.stackID=[],this.listID=[],this.visitedID=[],this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",25,15,0),this.cmd(rt.createLabel,this.nextIndex++,"Visited Set:",25,95,0),this.cmd(rt.createLabel,this.nextIndex++,"List:",25,45,0),this.cmd(rt.createLabel,this.nextIndex++,"Current vertex:",25,145,0),this.stackLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.stackLabelID,this.physicalStack?"Stack:":"Recursive stack:   Recursive calls:",25,170,0),this.recCode=[["Procedure DFS(Vertex s, Set VS, List L):"],["     add s to VS, L"],["     for all v adjacent to s"],["          if v not in VS"],["               do DFS(v, VS, L)"]],this.itCode=[["Procedure DFS(Vertex s, Set VS, List L):"],["     Initialize Stack K"],["     add s to K, VS"],["     while K not empty"],["          v <- remove from K"],["          add v to L"],["          for all w adjacent to v"],["               if w not in VS"],["                    add w to K, VS"]],this.physicalStack?this.codeID=this.addCodeToCanvasBase(this.itCode,250,170):this.codeID=this.addCodeToCanvasBase(this.recCode,250,170),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.lastIndex=this.nextIndex}reset(){this.nextIndex=this.lastIndex,this.listID=[],this.visitedID=[],this.messageID=[]}stackCallback(t){this.physicalStack!==t&&(this.physicalStack=t,this.animationManager.resetAll(),this.setup(this.adj_matrix))}startCallback(){if(""!==this.startField.value){let t=this.startField.value;this.startField.value="",t=t.toUpperCase().charCodeAt(0)-65,t>=0&&t<this.size&&(this.physicalStack?this.implementAction(this.doDFSStack.bind(this),t):this.implementAction(this.doDFSRecursive.bind(this),t))}}doDFSStack(t){this.commands=[],this.clear(),this.visited=new Array(this.size),this.stack=[],this.stackID=[],this.listID=[],this.visitedID=[],this.stackStartY=this.isLarge?465:335,this.stackSpacing=this.isLarge?16:20,this.rebuildEdges();let i=t;this.cmd(rt.setText,this.infoLabelID,"Pushing "+this.toStr(i)+" and adding to visited set"),this.highlight(2,0);let e=this.nextIndex++;for(this.visited[i]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30,120),this.cmd(rt.setBackgroundColor,this.circleID[i],"#99CCFF"),this.stack.push(i),this.stackID.push(e),this.cmd(rt.createLabel,e,this.toStr(i),40,this.stackStartY),this.cmd(rt.step),this.unhighlight(2,0),this.highlight(3,0);this.stack.length>0&&this.listID.length<this.size;){i=this.stack.pop(),e=this.stackID.pop(),this.highlight(4,0),this.highlight(5,0),this.cmd(rt.setText,this.infoLabelID,"Popping "+this.toStr(i)+" and adding to list"),this.cmd(rt.setTextColor,e,"#0000FF"),this.cmd(rt.move,e,115,151),this.listID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30+20*(this.listID.length-1),70),this.visitVertex(i),this.cmd(rt.step),this.unhighlight(4,0),this.unhighlight(5,0),this.highlight(6,0);for(let t=0;t<this.size;t++)this.adj_matrix[i][t]>0&&(this.highlightEdge(i,t,1),this.highlight(7,0),this.cmd(rt.step),this.visited[t]?(this.unhighlight(7,0),this.cmd(rt.setText,this.infoLabelID,this.toStr(t)+" has already been visited, skipping")):(this.unhighlight(7,0),this.highlight(8,0),this.visited[t]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.setText,this.infoLabelID,this.toStr(t)+" has not yet been visited, pushing and adding to visited set"),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30+20*(this.visitedID.length-1),120),this.cmd(rt.setBackgroundColor,this.circleID[t],"#99CCFF"),this.stack.push(t),this.stackID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),40,this.stackStartY-(this.stack.length-1)*this.stackSpacing)),this.cmd(rt.step),this.unhighlight(8,0));this.unhighlight(6,0),this.cmd(rt.delete,e),this.leaveVertex()}return this.unhighlight(3,0),this.stack.length>0?this.cmd(rt.setText,this.infoLabelID,"All vertices have been visited, done"):this.cmd(rt.setText,this.infoLabelID,"Stack is empty, done"),this.commands}doDFSRecursive(t){this.commands=[],this.clear(),this.visited=new Array(this.size),this.listID=[],this.visitedID=[],this.stackStartY=this.isLarge?465:335,this.stackSpacing=this.isLarge?16:20,this.recursionSpacingX=this.isLarge?10:20,this.recursionSpacingY=this.isLarge?15:20,this.currentID=this.nextIndex++,this.rebuildEdges(),this.cmd(rt.setText,this.infoLabelID,"");const i=t;return this.cmd(rt.createLabel,this.currentID,"",115,151),this.cmd(rt.setTextColor,this.currentID,"#0000FF"),this.cmd(rt.setText,this.infoLabelID,"About to recurse to "+this.toStr(t)),this.cmd(rt.step),this.visitVertex(i),this.dfsVisit(i,125),this.cmd(rt.setText,this.infoLabelID,"Returned from "+this.toStr(i)+", done"),this.cmd(rt.delete,this.currentID),this.leaveVertex(),this.commands}dfsVisit(t,i){this.cmd(rt.setText,this.infoLabelID,"Visiting "+this.toStr(t)+" and adding to list"),this.cmd(rt.setText,this.currentID,this.toStr(t)),this.stackID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),40,this.stackStartY-(this.stackID.length-1)*this.stackSpacing);const e=this.nextIndex++;this.messageID.push(e),this.cmd(rt.createLabel,e,"DFS("+this.toStr(t)+")",i,185+(this.messageID.length-1)*this.recursionSpacingY,0),this.listID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30+20*(this.listID.length-1),70),this.visited[t]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30+20*(this.visitedID.length-1),120),this.cmd(rt.setBackgroundColor,this.circleID[t],"#99CCFF"),this.highlight(1,0),this.cmd(rt.step),this.unhighlight(1,0),this.highlight(2,0);for(let s=0;s<this.size;s++)this.adj_matrix[t][s]>0&&(this.highlight(3,0),this.cmd(rt.step),this.visited[s]?(this.unhighlight(3,0),this.cmd(rt.setText,this.infoLabelID,"Vertex "+this.toStr(s)+" already visited, skipping"),this.cmd(rt.step)):(this.unhighlight(3,0),this.highlight(4,0),this.highlightEdge(t,s,1,"red"),this.cmd(rt.setText,this.infoLabelID,"About to recurse to "+this.toStr(s)),this.cmd(rt.step),this.unhighlight(4,0),this.unhighlight(2,0),this.leaveVertex(),this.visitVertex(s),this.dfsVisit(s,i+this.recursionSpacingX),this.highlight(2,0),this.leaveVertex(),this.visitVertex(t),this.cmd(rt.setText,this.infoLabelID,"Returned from "+this.toStr(s)+" to "+this.toStr(t)),this.cmd(rt.step)));this.unhighlight(2,0),this.cmd(rt.delete,this.stackID.pop())}clear(){for(let t=0;t<this.size;t++)this.cmd(rt.setBackgroundColor,this.circleID[t],"#FFFFFF"),this.visited[t]=!1;for(let t=0;t<this.listID.length;t++)this.cmd(rt.delete,this.listID[t]);this.listID=[];for(let t=0;t<this.visitedID.length;t++)this.cmd(rt.delete,this.visitedID[t]);if(this.visitedID=[],null!=this.messageID)for(let t=0;t<this.messageID.length;t++)this.cmd(rt.delete,this.messageID[t]);this.messageID=[],this.cmd(rt.setText,this.infoLabelID,"")}}],Dijkstra:["Dijkstra's",class extends zt{constructor(t,i,e){super(t,i,e,Pt,!1,!1,!0),this.addControls()}addControls(){ut("Start vertex: "),this.startField=xt("Text",""),this.startField.onkeydown=this.returnSubmit(this.startField,this.startCallback.bind(this),1,!1),this.startField.size=2,this.controls.push(this.startField),this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),this.controls.push(this.startButton),Dt(),super.addControls()}setup(t){super.setup(t),this.commands=[],this.vertexID=new Array(this.size),this.distance=new Array(this.size),this.distanceID=new Array(this.size),this.visited=[],this.visitedID=[],this.pq=new Ut,this.code=[["initialize VisitedSet, VS"],["initialize distanceMap, DM"],["initialize PriorityQueue, PQ"],["for all v in G, initialize distance of v to INF"],["PQ.enqueue((s, 0))"],["while PQ is not empty and VS is not full"],["    (u, d) <- PQ.dequeue()"],["    if u is not visited in VS"],["        mark u as visited in VS"],["    for all (w, d2) adjacent to u and not visited in VS"],["        update DM for d2"],["        PQ.enqueue((w, d + d2))"]],this.codeID=this.addCodeToCanvasBase(this.code,1100,50),this.tableEntryHeight=this.isLarge?17:20;for(let i=0;i<this.size;i++)this.vertexID[i]=this.nextIndex++,this.distanceID[i]=this.nextIndex++,this.cmd(rt.createRectangle,this.vertexID[i],this.toStr(i),50,this.tableEntryHeight,50,180+i*this.tableEntryHeight),this.cmd(rt.createRectangle,this.distanceID[i],"",50,this.tableEntryHeight,100,180+i*this.tableEntryHeight),this.cmd(rt.setTextColor,this.vertexID[i],"#0000FF");this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",25,15,0),this.cmd(rt.createLabel,this.nextIndex++,"Visited Set:",25,40,0),this.cmd(rt.createLabel,this.nextIndex++,"Current vertex:",25,85,0),this.cmd(rt.createLabel,this.nextIndex++,"Priority Queue:",25,110,0),this.cmd(rt.createLabel,this.nextIndex++,"Distance Map:",75,160),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.comparisonMessageID=this.nextIndex++,this.lastIndex=this.nextIndex}reset(){this.nextIndex=this.lastIndex,this.messageID=[],this.visitedID=[],this.pq=new Ut}startCallback(){let t;""!==this.startField.value&&(t=this.startField.value,this.startField.value="",t=t.toUpperCase().charCodeAt(0)-65,t>=0&&t<this.size&&this.implementAction(this.doDijkstra.bind(this),t))}doDijkstra(t){this.commands=[];let i=t,e=this.nextIndex++;for(this.clear(),this.visitedID=[],this.distance[i]=0,this.cmd(rt.setText,this.distanceID[i],0),this.pq=new Ut,this.pq.enqueue(i,e,0),this.cmd(rt.createLabel,e,"("+this.toStr(i)+", 0)",110,110,0),this.cmd(rt.setText,this.infoLabelID,"Enqueueing "+this.toStr(i)+" with distance 0 and updating distance map"),this.highlight(0,0),this.highlight(1,0),this.highlight(2,0),this.highlight(3,0),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(0,0),this.unhighlight(1,0),this.unhighlight(2,0),this.unhighlight(3,0),this.unhighlight(4,0);this.visited.includes(!1)&&0!==this.pq.size();){this.highlight(5,0),this.highlight(6,0),[i,e]=this.pq.dequeue(),this.cmd(rt.setText,this.infoLabelID,"Dequeueing "+this.toStr(i)),this.cmd(rt.move,e,110,85),this.cmd(rt.setText,e,this.toStr(i)),this.cmd(rt.setTextColor,e,"#0000FF");let t=this.pq.getIDs();for(let i=0;i<this.pq.size();i++)this.cmd(rt.move,t[i],110+i%9*42,110+25*Math.floor(i/9));if(this.visitVertex(i),this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0),this.visited[i])this.unhighlight(7,0),this.cmd(rt.setText,this.infoLabelID,this.toStr(i)+" has already been visited, skipping"),this.cmd(rt.step);else{this.highlight(8,0),this.visited[i]=!0,this.cmd(rt.setText,this.infoLabelID,"Adding "+this.toStr(i)+" to visited set"),this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(i),30+20*(this.visitedID.length-1),65),this.cmd(rt.setBackgroundColor,this.circleID[i],"#99CCFF"),this.cmd(rt.step),this.unhighlight(8,0),this.unhighlight(7,0),this.highlight(9,0),this.highlight(10,0),this.cmd(rt.setText,this.infoLabelID,"Updating neighbors of vertex "+this.toStr(i));for(let e=0;e<this.size;e++)if(this.adj_matrix[i][e]>=0){if(this.highlightEdge(i,e,1),this.visited[e])this.cmd(rt.setText,this.infoLabelID,this.toStr(e)+" has already been visited, skipping"),this.cmd(rt.step);else{this.cmd(rt.setText,this.infoLabelID,"Comparing distances"),this.cmd(rt.setHighlight,this.distanceID[i],1),this.cmd(rt.setHighlight,this.distanceID[e],1);const s=this.distance[i],h=this.adj_matrix[i][e],a=s+h,n=this.distance[e],l=n>=0?String(this.distance[e]):"INF";if(n<0||a<n){this.distance[e]=a,this.cmd(rt.createLabel,this.comparisonMessageID,"New distance ("+s+" + "+h+" = "+a+") is less than old distance ("+l+"), updating",135,180+e*this.tableEntryHeight-5,0),this.highlight(10,0),this.cmd(rt.step),this.cmd(rt.setText,this.infoLabelID,"Updating distance"),this.cmd(rt.setText,this.distanceID[e],this.distance[e]),this.cmd(rt.setHighlight,this.distanceID[i],0),this.cmd(rt.setHighlight,this.distanceID[e],0),this.cmd(rt.step),this.unhighlight(10,0),this.cmd(rt.delete,this.comparisonMessageID),this.pq.enqueue(e,this.nextIndex,a),this.cmd(rt.setText,this.infoLabelID,"Enqueueing "+this.toStr(e)+" with distance "+a),this.cmd(rt.createLabel,this.nextIndex++,"("+this.toStr(e)+", "+a+")",110+(this.pq.size()-1)%9*42,110+25*Math.floor((this.pq.size()-1)/9),0),this.highlight(11,0),this.cmd(rt.step);const n=this.pq.getIDs();if(String(t)!==String(n.slice(0,-1))){for(let t=0;t<this.pq.size();t++)this.cmd(rt.move,n[t],110+t%9*42,110+25*Math.floor(t/9));this.cmd(rt.step)}t=n,this.unhighlight(11,0)}else this.cmd(rt.createLabel,this.comparisonMessageID,"New distance ("+s+" + "+h+" = "+a+") is greater than or equal to old distance ("+l+"), skipping",135,180+e*this.tableEntryHeight-5,0),this.highlight(5,0),this.cmd(rt.step),this.unhighlight(5,0),this.cmd(rt.delete,this.comparisonMessageID),this.cmd(rt.setHighlight,this.distanceID[i],0),this.cmd(rt.setHighlight,this.distanceID[e],0)}this.highlightEdge(i,e,0)}this.unhighlight(10,0),this.unhighlight(9,0)}this.leaveVertex(),this.cmd(rt.delete,e),this.unhighlight(5,0)}return this.pq.size()>0?this.cmd(rt.setText,this.infoLabelID,"All vertices have been visited, done"):this.cmd(rt.setText,this.infoLabelID,"Priority queue is empty, done"),this.commands}clear(){for(let i=0;i<this.size;i++)this.cmd(rt.setBackgroundColor,this.circleID[i],"#FFFFFF"),this.cmd(rt.setText,this.distanceID[i],"INF"),this.visited[i]=!1,this.distance[i]=-1;for(let i=0;i<this.visitedID.length;i++)this.cmd(rt.delete,this.visitedID[i]);const t=this.pq.getIDs();for(const i of t)this.cmd(rt.delete,i);if(null!=this.messageID)for(let i=0;i<this.messageID.length;i++)this.cmd(rt.delete,this.messageID[i]);this.messageID=[]}}],Prim:["Prim's",class extends zt{constructor(t,i,e){super(t,i,e,Et,!1,!1,!0),this.addControls()}addControls(){ut("Start vertex: "),this.startField=xt("Text",""),this.startField.onkeydown=this.returnSubmit(this.startField,this.startCallback.bind(this),1,!1),this.startField.size=2,this.controls.push(this.startField),this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),this.controls.push(this.startButton),Dt(),super.addControls(!1)}setup(t){super.setup(t),this.commands=[],this.messageID=null,this.visited=[],this.visitedID=[],this.pq=new Ut,this.code=[["initialize VisitedSet, VS"],["initialize MST EdgeSet, MST"],["initialize PriorityQueue, PQ"],["mark s as visited in VS"],["for each edge(s, v) in G, PQ.enqueue(edge(s, v))"],["while PQ is not empty and VS is not full"],["    edge(u, w) <- PQ.dequeue()"],["    if w is not visited in VS"],["        add edge(u, w) to MST"],["        mark w as visited in VS"],["        for each edge(w, x) such that x is not visited"],["            PQ.enqueue(edge(w, x))"]],this.codeID=this.addCodeToCanvasBase(this.code,50,200),this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",25,15,0),this.cmd(rt.createLabel,this.nextIndex++,"Visited Set:",25,40,0),this.cmd(rt.createLabel,this.nextIndex++,"Current edge:",25,90,0),this.cmd(rt.createLabel,this.nextIndex++,"Priority Queue:",25,115,0),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.highlightCircleL=this.nextIndex++,this.highlightCircleAL=this.nextIndex++,this.highlightCircleAM=this.nextIndex++,this.lastIndex=this.nextIndex}reset(){this.nextIndex=this.lastIndex,this.messageID=[],this.visitedID=[],this.pq=new Ut}startCallback(){if(""!==this.startField.value){let t=this.startField.value;this.startField.value="",t=t.toUpperCase().charCodeAt(0)-65,t>=0&&t<this.size&&this.implementAction(this.doPrim.bind(this),t)}}doPrim(t){this.commands=[],this.clear(),this.visitedID=[],this.visitVertex(t),this.visited[t]=!0,this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t),30,65),this.cmd(rt.setBackgroundColor,this.circleID[t],"#99CCFF"),this.cmd(rt.setText,this.infoLabelID,"Adding "+this.toStr(t)+" to visited set"),this.highlight(0,0),this.highlight(1,0),this.highlight(2,0),this.highlight(3,0),this.cmd(rt.step),this.unhighlight(3,0),this.unhighlight(2,0),this.unhighlight(1,0),this.unhighlight(0,0),this.highlight(4,0),this.pq=new Ut;let i=[];this.cmd(rt.setText,this.infoLabelID,"Enqueuing edges of "+this.toStr(t));for(let e=0;e<this.size;e++){const s=this.adj_matrix[t][e];if(s>=0){this.highlightEdge(t,e,1),this.cmd(rt.createLabel,this.nextIndex,"("+this.toStr(t)+this.toStr(e)+", "+s+")",45+this.pq.size()%8*50,143+25*Math.floor(this.pq.size()/8)),this.pq.enqueue([t,e],this.nextIndex++,s),this.cmd(rt.step);const h=this.pq.getIDs();if(String(i)!==String(h.slice(0,-1))){for(let t=0;t<this.pq.size();t++)this.cmd(rt.move,h[t],45+t%8*50,143+25*Math.floor(t/8));this.cmd(rt.step)}i=h,this.highlightEdge(t,e,0)}}for(this.unhighlight(4,0),this.leaveVertex(),this.highlight(5,0);this.visited.includes(!1)&&0!==this.pq.size();){this.highlight(6,0);const[t,e]=this.pq.dequeue();let s=this.toStr(t[0])+this.toStr(t[1]);this.cmd(rt.setText,this.infoLabelID,"Dequeued "+s+", with destination "+this.toStr(t[1])),this.cmd(rt.move,e,110,96),this.cmd(rt.setText,e,this.toStr(t[0])+this.toStr(t[1])),this.cmd(rt.setTextColor,e,"#0000FF"),i=this.pq.getIDs();for(let h=0;h<this.pq.size();h++)this.cmd(rt.move,i[h],45+h%8*50,143+25*Math.floor(h/8));if(this.highlightEdge(t[0],t[1],1),this.visitVertex(t[1]),this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0),this.visited[t[1]])this.unhighlight(7,0),this.highlightEdge(t[0],t[1],0),this.cmd(rt.setText,this.infoLabelID,this.toStr(t[1])+" has already been visited, skipping"),this.cmd(rt.step);else{this.cmd(rt.setText,this.infoLabelID,"Adding "+s+" to MST"),this.highlightEdge(t[0],t[1],0),this.setEdgeColor(t[0],t[1],"#3399FF"),this.setEdgeThickness(t[0],t[1],4),this.highlight(8,0),this.cmd(rt.step),this.unhighlight(8,0),this.visited[t[1]]=!0,this.cmd(rt.setText,this.infoLabelID,"Adding "+this.toStr(t[1])+" to visited set"),this.visitedID.push(this.nextIndex),this.cmd(rt.createLabel,this.nextIndex++,this.toStr(t[1]),30+20*(this.visitedID.length-1),65),this.cmd(rt.setBackgroundColor,this.circleID[t[1]],"#99CCFF"),this.highlight(9,0),this.cmd(rt.step),this.unhighlight(9,0),this.cmd(rt.setText,this.infoLabelID,"Enqueuing edges of "+this.toStr(t[1])),this.highlight(11,0),this.highlight(10,0);for(let e=0;e<this.size;e++)if(this.adj_matrix[t[1]][e]>=0){if(this.highlightEdge(t[1],e,1),this.cmd(rt.setHighlight,this.circleID[e],1),this.visited[e])this.cmd(rt.setText,this.infoLabelID,"Vertex "+this.toStr(e)+" has already been visited, skipping"),this.cmd(rt.step),this.cmd(rt.setHighlight,this.circleID[e],0);else{this.cmd(rt.setText,this.infoLabelID,"Vertex "+this.toStr(e)+" has not yet been visited"),this.cmd(rt.step),this.cmd(rt.setHighlight,this.circleID[e],0),s=this.toStr(t[1])+this.toStr(e),this.cmd(rt.setText,this.infoLabelID,"Enqueueing edge "+s+" with weight "+this.adj_matrix[t[1]][e]),this.cmd(rt.createLabel,this.nextIndex,"("+s+", "+this.adj_matrix[t[1]][e]+")",45+this.pq.size()%8*50,143+25*Math.floor(this.pq.size()/8)),this.pq.enqueue([t[1],e],this.nextIndex++,this.adj_matrix[t[1]][e]),this.cmd(rt.step);const h=this.pq.getIDs();if(String(i)!==String(h.slice(0,-1))){for(let t=0;t<this.pq.size();t++)this.cmd(rt.move,h[t],45+t%8*50,143+25*Math.floor(t/8));this.cmd(rt.step)}i=h}this.highlightEdge(t[1],e,0)}this.unhighlight(10,0),this.unhighlight(11,0),this.unhighlight(7,0)}this.leaveVertex(),this.cmd(rt.delete,e)}return this.unhighlight(5,0),this.unhighlight(7,0),this.pq.size()>0?this.cmd(rt.setText,this.infoLabelID,"MST has correct amount of edges / all vertices have been visited, done"):this.cmd(rt.setText,this.infoLabelID,"Priority queue is empty, done"),this.commands}clear(){this.recolorGraph();for(let i=0;i<this.size;i++)this.cmd(rt.setBackgroundColor,this.circleID[i],"#FFFFFF"),this.visited[i]=!1;for(let i=0;i<this.visitedID.length;i++)this.cmd(rt.delete,this.visitedID[i]);const t=this.pq.getIDs();for(const i of t)this.cmd(rt.delete,i);if(null!=this.messageID)for(let i=0;i<this.messageID.length;i++)this.cmd(rt.delete,this.messageID[i]);this.messageID=[]}}],Kruskal:["Kruskal's",class extends zt{constructor(t,i,e){super(t,i,e,Et,!1,!1,!0),this.addControls()}addControls(){this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),this.controls.push(this.startButton),Dt(),super.addControls(!1)}setup(t){let i;for(super.setup(t),this.messageID=[],this.commands=[],this.setID=new Array(this.size),this.setIndexID=new Array(this.size),this.setData=new Array(this.size),this.edgesListLeftID=[],this.edgesListRightID=[],i=0;i<this.size;i++)this.setID[i]=this.nextIndex++,this.setIndexID[i]=this.nextIndex++,this.cmd(rt.createRectangle,this.setIndexID[i],this.toStr(i),50,20,52,110+20*i),this.cmd(rt.createRectangle,this.setID[i],"",50,20,102,110+20*i),this.cmd(rt.setTextColor,this.setIndexID[i],"#0000FF");this.messageLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.messageLabelID,"",30,15,0),this.cmd(rt.createLabel,this.nextIndex++,"Disjoint Set:",77,73,1),this.cmd(rt.createLabel,this.nextIndex++,"Vertex",52,88,1),this.cmd(rt.createLabel,this.nextIndex++,"Set ID",102,88,1),this.cmd(rt.createLabel,this.nextIndex++,"Current edge:",145,67,0),this.cmd(rt.createLabel,this.nextIndex++,"Priority Queue:",145,92,0),this.code=[["initialize DisjointSet, DS, with all vertices in G"],["initialize MST EdgeSet, MST"],["initialize PriorityQueue, PQ with all edges in G"],["while PQ is not empty and MST has fewer than n-1 edges"],["    edge(u, v) <- PQ.dequeue()"],["    if u and v are not in the same cluster"],["        add edge(u, v) to MST"],["        merge u's cluster with v's cluster"]],this.codeID=this.addCodeToCanvasBase(this.code,1100,30),this.animationManager.setAllLayers([0,this.currentLayer]),this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.lastIndex=this.nextIndex}reset(){this.nextIndex=this.lastIndex,this.messageID=[],this.edgesListLeft=[],this.edgesListRight=[],this.edgesListLeftID=[],this.edgesListRightID=[]}startCallback(){this.implementAction(this.doKruskal.bind(this))}doKruskal(){this.commands=[];for(let p=0;p<this.edgesListLeftID.length;p++)this.cmd(rt.delete,this.edgesListLeftID[p]),this.cmd(rt.delete,this.edgesListRightID[p]);let t,i,e;for(this.edgesListLeftID=[],this.edgesListRightID=[],this.edgesListLeft=[],this.edgesListRight=[],t=0;t<this.size;t++)this.setData[t]=t+1,this.cmd(rt.setText,this.setID[t],t+1),!this.isLarge&&this.cmd(rt.setBackgroundColor,this.setID[t],Ht[t]);for(this.recolorGraph(),this.highlight(0,0),this.highlight(1,0),this.cmd(rt.setText,this.messageLabelID,"Enqueueing all edges into Priority Queue"),t=0;t<this.size;t++)for(i=t+1;i<this.size;i++)this.adj_matrix[t][i]>=0&&(this.edgesListLeftID.push(this.nextIndex++),this.edgesListRightID.push(this.nextIndex++),e=this.edgesListLeftID.length-1,this.edgesListLeft.push(t),this.edgesListRight.push(i),this.cmd(rt.createLabel,this.edgesListLeftID[e],this.toStr(t)+" ",150+100*Math.floor(e/9),135+e%9*40),this.cmd(rt.createLabel,this.edgesListRightID[e]," "+this.toStr(i),190+100*Math.floor(e/9),135+e%9*40),this.cmd(rt.connect,this.edgesListLeftID[e],this.edgesListRightID[e],"#000000",0,0,this.adj_matrix[t][i]));this.cmd(rt.step),this.unhighlight(0,0),this.unhighlight(1,0);const s=this.edgesListLeftID.length;let h,a,n,l;for(t=1;t<s;t++){for(h=this.edgesListLeftID[t],a=this.edgesListRightID[t],n=this.edgesListLeft[t],l=this.edgesListRight[t],i=t;i>0&&this.adj_matrix[this.edgesListLeft[i-1]][this.edgesListRight[i-1]]>this.adj_matrix[n][l];)this.edgesListLeft[i]=this.edgesListLeft[i-1],this.edgesListRight[i]=this.edgesListRight[i-1],this.edgesListLeftID[i]=this.edgesListLeftID[i-1],this.edgesListRightID[i]=this.edgesListRightID[i-1],i-=1;this.edgesListLeft[i]=n,this.edgesListRight[i]=l,this.edgesListLeftID[i]=h,this.edgesListRightID[i]=a}for(t=0;t<s;t++)this.cmd(rt.move,this.edgesListLeftID[t],150+100*Math.floor(t/9),135+t%9*40),this.cmd(rt.move,this.edgesListRightID[t],190+100*Math.floor(t/9),135+t%9*40);this.highlight(2,0),this.cmd(rt.step),this.unhighlight(2,0);const r=this.nextIndex++,o=this.nextIndex++,d=this.nextIndex++,c=this.nextIndex++,m=this.nextIndex++;let g=0,u=0;for(this.cmd(rt.createLabel,r,"",30,40,0),this.cmd(rt.createLabel,o,"",100,40,0),this.highlight(3,0);g<this.size-1&&u<s;){for(this.cmd(rt.setText,this.messageLabelID,"Dequeueing "+this.toStr(this.edgesListLeft[u])+this.toStr(this.edgesListRight[u])),this.cmd(rt.move,this.edgesListLeftID[u],235,73),this.cmd(rt.move,this.edgesListRightID[u],275,73),t=u+1;t<s;t++){const i=t-u-1;this.cmd(rt.move,this.edgesListLeftID[t],150+100*Math.floor(i/9),135+i%9*40),this.cmd(rt.move,this.edgesListRightID[t],190+100*Math.floor(i/9),135+i%9*40)}this.highlightEdge(this.edgesListLeft[u],this.edgesListRight[u],1),this.highlight(4,0),this.cmd(rt.step),this.unhighlight(4,0),this.highlight(5,0),this.cmd(rt.setText,this.messageLabelID,"Looking at disjoint set"),this.cmd(rt.setText,r,"find("+this.toStr(this.edgesListLeft[u])+") = "),this.cmd(rt.createHighlightCircle,d,"#FF9999",233,73,12),this.cmd(rt.step);const i=this.edgesListLeft[u],e=this.setData[i];this.cmd(rt.move,d,52,110+20*this.edgesListLeft[u]),this.cmd(rt.setText,r,"find("+this.toStr(this.edgesListLeft[u])+") = "+e),this.cmd(rt.step),this.cmd(rt.setText,o,"find("+this.toStr(this.edgesListRight[u])+") = "),this.cmd(rt.createHighlightCircle,c,"#FF0000",276,73,12),this.cmd(rt.step);const h=this.edgesListRight[u],a=this.setData[h];if(this.cmd(rt.move,c,52,110+20*this.edgesListRight[u]),this.cmd(rt.setText,o,"find("+this.toStr(this.edgesListRight[u])+") = "+a),this.cmd(rt.step),this.unhighlight(5,0),e!==a){this.highlight(5,0),this.cmd(rt.setText,this.messageLabelID,"Vertices in different sets.  Add edge to MST."),this.highlightEdge(this.edgesListLeft[u],this.edgesListRight[u],0),g++,this.setEdgeColor(this.edgesListLeft[u],this.edgesListRight[u],"#3399FF"),this.setEdgeThickness(this.edgesListLeft[u],this.edgesListRight[u],4),this.highlight(6,0),this.cmd(rt.step),this.unhighlight(6,0),this.highlight(7,0),this.cmd(rt.setText,this.messageLabelID,"Union sets "+e+" and "+a),this.cmd(rt.setText,r,"union("+this.toStr(i)+", "+this.toStr(h)+")"),this.cmd(rt.setText,o,""),this.cmd(rt.step);const t=Math.min(e,a),s=Math.max(e,a);let n=!0;for(let i=0;i<this.size;i++)this.setData[i]===s&&(n?(n=!1,this.cmd(rt.createHighlightCircle,m,"#0000FF",102,110+20*i,12),this.cmd(rt.setHighlight,m,1)):this.cmd(rt.move,m,102,110+20*i),this.cmd(rt.step),this.setData[i]=t,this.cmd(rt.setText,this.setID[i],t),!this.isLarge&&this.cmd(rt.setBackgroundColor,this.setID[i],Ht[t-1]),this.cmd(rt.step));this.unhighlight(7,0),this.cmd(rt.delete,m),this.unhighlight(5,0)}else this.cmd(rt.setText,this.messageLabelID,"Vertices in the same set, skip edge"),this.cmd(rt.step);this.highlightEdge(this.edgesListLeft[u],this.edgesListRight[u],0),this.cmd(rt.delete,d),this.cmd(rt.delete,c),this.cmd(rt.delete,this.edgesListLeftID[u]),this.cmd(rt.delete,this.edgesListRightID[u]),this.cmd(rt.setText,r,""),this.cmd(rt.setText,o,""),u++}return this.unhighlight(3,0),this.cmd(rt.delete,r),this.cmd(rt.delete,o),this.edgesListLeftID=this.edgesListLeftID.slice(u),this.edgesListRightID=this.edgesListRightID.slice(u),g===this.size-1?this.cmd(rt.setText,this.messageLabelID,"MST has correct amount of edges, done"):this.cmd(rt.setText,this.messageLabelID,"Priority queue is empty, done"),this.commands}}],LCS:["LCS",class extends ft{constructor(t,i,e){super(t,i,e),this.addControls(),this.nextIndex=0,this.setup()}addControls(){this.controls=[],ut("S1:"),this.S1Field=xt("Text",""),this.S1Field.onkeydown=this.returnSubmit(this.S1Field,this.runCallback.bind(this),13,!1),this.controls.push(this.S1Field),ut("S2:"),this.S2Field=xt("Text",""),this.S2Field.onkeydown=this.returnSubmit(this.S2Field,this.runCallback.bind(this),13,!1),this.controls.push(this.S2Field),this.tableButton=xt("Button","Run"),this.tableButton.onclick=this.runCallback.bind(this),this.controls.push(this.tableButton)}setup(){let t,i;for(this.infoLabelID=this.nextIndex++,this.cmd(rt.createLabel,this.infoLabelID,"",20,400,0),this.code=[["procedure ","LCS(S1, S2, matrix)"],["     matrix <- create new 2D array of length S1.length by S2.length"],["     for y <- 1, to S1.length, loop"],["          for x <- 1 to S2.length, loop"],["               if ","(S1[y] == S2[x])"],["                    matrix[y][x] = 1 + ","matrix[y - 1][x - 1]"],["               else"],["                    matrix[y][x] = max(","matrix[y - 1][x]",","," matrix[y][x - 1]",")"],["          end for"],["     end for"],["     currY <- S1.length"],["     currX <- S2.length"],["     list <- create new List()"],["     while currY > 0 and currX > 0, loop:"],[["          if "],["matrix[currY - 1][currX] == matrix[currY][currX - 1] "]],[["           and "],["matrix[currY][currX] != matrix [currY - 1][currX - 1]"]],["               list.addFront(S1[currY])"],["               currX--"],["               currY--"],["          else"],[["               if "],["matrix[currY - 1][currX] > matrix[currY][currX - 1]"]],["                    currX--"],["               else"],["                    currY--"],["     end while"],["end procedure"]],this.codeID=Array(this.code.length),t=0;t<this.code.length;t++)for(this.codeID[t]=new Array(this.code[t].length),i=0;i<this.code[t].length;i++)this.codeID[t][i]=this.nextIndex++,this.cmd(rt.createLabel,this.codeID[t][i],this.code[t][i],20,20+14*t,0),this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000"),i>0&&this.cmd(rt.alignRight,this.codeID[t][i],this.codeID[t][i-1]);this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),this.initialIndex=this.nextIndex,this.oldIDs=[],this.commands=[]}reset(){this.oldIDs=[],this.nextIndex=this.initialIndex}runCallback(){const t=this.S1Field.value,i=this.S2Field.value;""!==t&&""!==i&&(this.S1Field.value="",this.S2Field.value="",this.implementAction(this.run.bind(this),t,i))}run(t,i){this.commands=[],this.clearOldIDs(),this.buildTable(t,i);const e=this.nextIndex++,s=t.length,h=i.length;let a,n;for(a=0;a<=s;a++)this.cmd(rt.setText,this.tableID[a][0],"0"),this.tableVals[a][0]=0;for(a=0;a<=h;a++)this.cmd(rt.setText,this.tableID[0][a],"0"),this.tableVals[0][a]=0;for(this.cmd(rt.step),n=0;n<h;n++)for(a=0;a<s;a++)this.cmd(rt.setHighlight,this.tableID[a+1][n+1],1),this.cmd(rt.setHighlight,this.S1TableID[a],1),this.cmd(rt.setHighlight,this.S2TableID[n],1),this.highlight(4,1),this.cmd(rt.setText,this.infoLabelID,"Comparing "+t.charAt(a)+" and "+i.charAt(n)),this.cmd(rt.step),this.cmd(rt.setHighlight,this.S1TableID[a],0),this.cmd(rt.setHighlight,this.S2TableID[n],0),this.unhighlight(4,1),t.charAt(a)===i.charAt(n)?(this.highlight(5,0),this.highlight(5,1),this.cmd(rt.setHighlight,this.tableID[a+1-1][n+1-1],1),this.cmd(rt.setText,this.infoLabelID,"Match, increment from the diagonal"),this.cmd(rt.step),this.cmd(rt.createLabel,e,this.tableVals[a][n]+1,this.tableXPos[a][n],this.tableYPos[a][n]),this.cmd(rt.bringToTop,e,1),this.cmd(rt.move,e,this.tableXPos[a+1][n+1],this.tableYPos[a+1][n+1]),this.cmd(rt.step),this.cmd(rt.delete,e),this.unhighlight(5,0),this.unhighlight(5,1),this.cmd(rt.setHighlight,this.tableID[a+1-1][n+1-1],0),this.tableVals[a+1][n+1]=this.tableVals[a][n]+1,this.cmd(rt.setText,this.tableID[a+1][n+1],this.tableVals[a+1][n+1])):(this.highlight(7,0),this.highlight(7,1),this.highlight(7,2),this.highlight(7,3),this.highlight(7,4),this.cmd(rt.setHighlight,this.tableID[a][n+1],1),this.cmd(rt.setHighlight,this.tableID[a+1][n],1),this.cmd(rt.setText,this.infoLabelID,"Mismatch, copy greatest value from left or above"),this.cmd(rt.step),this.unhighlight(7,0),this.unhighlight(7,2),this.unhighlight(7,4),this.tableVals[a][n+1]>this.tableVals[a+1][n]?(this.cmd(rt.setHighlight,this.tableID[a+1][n],0),this.unhighlight(7,1),this.tableVals[a+1][n+1]=this.tableVals[a][n+1],this.cmd(rt.createLabel,e,this.tableVals[a][n+1],this.tableXPos[a][n+1],this.tableYPos[a][n+1])):(this.unhighlight(7,3),this.cmd(rt.setHighlight,this.tableID[a][n+1],0),this.tableVals[a+1][n+1]=this.tableVals[a+1][n],this.cmd(rt.createLabel,e,this.tableVals[a+1][n],this.tableXPos[a+1][n],this.tableYPos[a+1][n])),this.cmd(rt.bringToTop,e,1),this.cmd(rt.move,e,this.tableXPos[a+1][n+1],this.tableYPos[a+1][n+1]),this.cmd(rt.step),this.cmd(rt.setText,this.tableID[a+1][n+1],this.tableVals[a+1][n+1]),this.cmd(rt.delete,e),this.tableVals[a][n+1]>this.tableVals[a+1][n]?(this.unhighlight(7,3),this.cmd(rt.setHighlight,this.tableID[a][n+1],0)):(this.unhighlight(7,1),this.cmd(rt.setHighlight,this.tableID[a+1][n],0))),this.cmd(rt.setHighlight,this.tableID[a+1][n+1],0);return this.highlight(9,0),this.highlight(10,0),this.highlight(11,0),this.highlight(12,0),this.cmd(rt.setText,this.infoLabelID,"Finished building table, can now find LCS"),this.cmd(rt.step),this.buildLCSFromTable(t,i),this.unhighlight(24,0),this.highlight(25,0),this.cmd(rt.setText,this.infoLabelID,"Done"),this.cmd(rt.step),this.unhighlight(25,0),this.commands}buildTable(t,i){const e=t.length,s=i.length;let h,a;for(this.tableID=new Array(e+1),this.tableVals=new Array(e+1),this.tableXPos=new Array(e+1),this.tableYPos=new Array(e+1),this.S1TableID=new Array(e),h=0;h<=e;h++){h>0&&(this.S1TableID[h-1]=this.nextIndex++,this.cmd(rt.createLabel,this.S1TableID[h-1],t.charAt(h-1),500+40*h,20),this.oldIDs.push(this.S1TableID[h-1]));const i=this.nextIndex++;this.oldIDs.push(i),this.cmd(rt.createLabel,i,h-1===-1?"\u2205":h-1,500+40*h,50),this.cmd(rt.setForegroundColor,i,"#0000FF")}for(this.S2TableID=new Array(s),h=0;h<=s;h++){h>0&&(this.S2TableID[h-1]=this.nextIndex++,this.cmd(rt.createLabel,this.S2TableID[h-1],i.charAt(h-1),420,80+30*h),this.oldIDs.push(this.S2TableID[h-1]));const t=this.nextIndex++;this.oldIDs.push(t),this.cmd(rt.createLabel,t,h-1===-1?"\u2205":h-1,460,80+30*h),this.cmd(rt.setForegroundColor,t,"#0000FF")}for(h=0;h<=e;h++)for(this.tableID[h]=new Array(s+1),this.tableVals[h]=new Array(s+1),this.tableXPos[h]=new Array(s+1),this.tableYPos[h]=new Array(s+1),a=0;a<=s;a++)this.tableID[h][a]=this.nextIndex++,this.tableVals[h][a]=-1,this.oldIDs.push(this.tableID[h][a]),this.tableXPos[h][a]=500+40*h,this.tableYPos[h][a]=80+30*a,this.cmd(rt.createRectangle,this.tableID[h][a],"",40,30,this.tableXPos[h][a],this.tableYPos[h][a])}clearOldIDs(){for(let t=0;t<this.oldIDs.length;t++)this.cmd(rt.delete,this.oldIDs[t]);this.oldIDs=[],this.nextIndex=this.initialIndex}buildLCSFromTable(t,i){let e=this.tableVals.length-1,s=this.tableVals[0].length-1;const h=[],a=this.nextIndex++;this.oldIDs.push(a),this.cmd(rt.createLabel,a,"Longest Common Subsequence:",20,425,0),this.cmd(rt.setForegroundColor,a,"#003300");for(let n=1;n<=t.length;n++)for(let t=1;t<=i.length;t++){const i=this.tableVals[n][t]!==this.tableVals[n][t-1],e=this.tableVals[n][t]!==this.tableVals[n-1][t];(i||e)&&this.cmd(rt.setRectangleEdgeThickness,this.tableID[n][t],[i,!1,!1,e])}for(this.cmd(rt.step),this.unhighlight(9,0),this.unhighlight(10,0),this.unhighlight(11,0),this.unhighlight(12,0);e>0&&s>0;){this.cmd(rt.setBackgroundColor,this.tableID[e][s],"#99CCFF"),this.cmd(rt.step),this.unhighlight(14,1),this.unhighlight(15,1);for(let t=16;t<24;t++)this.unhighlight(t,0);if(this.highlight(14,1),this.cmd(rt.setHighlight,this.tableID[e-1][s],1),this.cmd(rt.setHighlight,this.tableID[e][s-1],1),this.cmd(rt.step),this.unhighlight(14,1),this.cmd(rt.setHighlight,this.tableID[e-1][s],0),this.cmd(rt.setHighlight,this.tableID[e][s-1],0),this.tableVals[e-1][s]===this.tableVals[e][s-1]&&(this.highlight(15,1),this.cmd(rt.setHighlight,this.tableID[e][s],1),this.cmd(rt.setHighlight,this.tableID[e-1][s-1],1),this.cmd(rt.step),this.unhighlight(15,1),this.cmd(rt.setHighlight,this.tableID[e][s],0),this.cmd(rt.setHighlight,this.tableID[e-1][s-1],0)),this.tableVals[e-1][s]===this.tableVals[e][s-1]&&this.tableVals[e-1][s]!==this.tableVals[e][s]?(this.cmd(rt.setHighlight,this.S1TableID[e-1],1),this.cmd(rt.setHighlight,this.S2TableID[s-1],1),this.cmd(rt.setText,this.infoLabelID,"Hit a corner, move diagonally and add current character to LCS"),this.cmd(rt.step),this.cmd(rt.setHighlight,this.S1TableID[e-1],0),this.cmd(rt.setHighlight,this.S2TableID[s-1],0)):this.tableVals[e-1][s]>this.tableVals[e][s-1]?(this.highlight(20,1),this.cmd(rt.setHighlight,this.tableID[e-1][s],1),this.cmd(rt.setHighlight,this.tableID[e][s-1],1),this.cmd(rt.step),this.unhighlight(20,1),this.cmd(rt.setHighlight,this.tableID[e-1][s],0),this.cmd(rt.setHighlight,this.tableID[e][s-1],0),this.highlight(21,0),this.cmd(rt.setText,this.infoLabelID,"Move left")):(this.highlight(23,0),this.cmd(rt.setText,this.infoLabelID,"Move up")),this.tableVals[e-1][s]===this.tableVals[e][s-1]&&this.tableVals[e-1][s]!==this.tableVals[e][s]){const i=this.nextIndex++;this.oldIDs.push(i),h.push(i),this.cmd(rt.createLabel,i,t.charAt(e-1),20+10*(h.length-1)+4,450),this.cmd(rt.setForegroundColor,i,"#0000FF");for(let t=h.length-1;t>=0;t--)this.cmd(rt.move,h[t],20+10*(h.length-1-t)+4,450);this.highlight(16,0),this.highlight(17,0),this.highlight(18,0),e-=1,s-=1}else this.tableVals[e-1][s]>this.tableVals[e][s-1]?(e-=1,this.highlight(21,0)):(s-=1,this.highlight(23,0))}for(let n=16;n<24;n++)this.unhighlight(n,0);this.highlight(24,0),this.cmd(rt.step)}highlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#FF0000")}unhighlight(t,i){this.cmd(rt.setForegroundColor,this.codeID[t][i],"#000000")}enableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!1}disableUI(){for(let t=0;t<this.controls.length;t++)this.controls[t].disabled=!0}},"Longest Common Subsequence"],Floyd:["Floyd-Warshall",class extends zt{constructor(t,i,e){super(t,i,e,[],!1,!1,!0),this.addControls()}addControls(){this.startButton=xt("Button","Run"),this.startButton.onclick=this.startCallback.bind(this),Dt(),super.addControls(),this.smallGraphButton.onclick=this.smallGraphCallback.bind(this),this.largeGraphButton.onclick=this.largeGraphCallback.bind(this)}reset(){for(let t=0;t<this.size;t++)for(let i=0;i<this.size;i++)this.costTable[t][i]=this.adj_matrix[t][i],this.costTable[t][i]>=0?this.pathTable[t][i]=t:this.pathTable[t][i]=-1}smallGraphCallback(){8!==this.size&&(this.animationManager.resetAll(),this.animationManager.setAllLayers([0,this.currentLayer]),this.logicalButton.disabled=!1,this.adjacencyListButton.disabled=!1,this.adjacencyMatrixButton.disabled=!1,this.setup_small())}largeGraphCallback(){18!==this.size&&(this.animationManager.resetAll(),this.logicalButton.disabled=!0,this.adjacencyListButton.disabled=!0,this.adjacencyMatrixButton.disabled=!0,this.setup_large())}getCostLabel(t,i){return i=void 0!==i&&i,t>=0?String(t):8===this.size||i?"INF":""}setup_small(){this.cost_table_width=30,this.cost_table_height=30,this.cost_table_start_x=40,this.cost_table_start_y=70,this.path_table_width=30,this.path_table_height=30,this.path_table_start_x=330,this.path_table_start_y=70,this.node_1_x_pos=50,this.node_1_y_pos=400,this.node_2_x_pos=150,this.node_2_y_pos=350,this.node_3_x_pos=250,this.node_3_y_pos=400,this.message_x=400,this.message_y=350,super.setup_small()}setup_large(){this.cost_table_width=20,this.cost_table_height=20,this.cost_table_start_x=40,this.cost_table_start_y=50,this.path_table_width=20,this.path_table_height=20,this.path_table_start_x=500,this.path_table_start_y=50,this.node_1_x_pos=50,this.node_1_y_pos=500,this.node_2_x_pos=150,this.node_2_y_pos=450,this.node_3_x_pos=250,this.node_3_y_pos=500,this.message_x=300,this.message_y=450,super.setup_large()}setup(){let t;for(super.setup(),this.commands=[],this.costTable=new Array(this.size),this.pathTable=new Array(this.size),this.costTableID=new Array(this.size),this.pathTableID=new Array(this.size),this.pathIndexXID=new Array(this.size),this.pathIndexYID=new Array(this.size),this.costIndexXID=new Array(this.size),this.costIndexYID=new Array(this.size),this.node1ID=this.nextIndex++,this.node2ID=this.nextIndex++,this.node3ID=this.nextIndex++,t=0;t<this.size;t++)this.costTable[t]=new Array(this.size),this.pathTable[t]=new Array(this.size),this.costTableID[t]=new Array(this.size),this.pathTableID[t]=new Array(this.size);const i=this.nextIndex++,e=this.nextIndex++;for(this.cmd(rt.createLabel,i,"Cost Table",this.cost_table_start_x,this.cost_table_start_y-2*this.cost_table_height,0),this.cmd(rt.createLabel,e,"Path Table",this.path_table_start_x,this.path_table_start_y-2*this.path_table_height,0),t=0;t<this.size;t++){this.pathIndexXID[t]=this.nextIndex++,this.pathIndexYID[t]=this.nextIndex++,this.costIndexXID[t]=this.nextIndex++,this.costIndexYID[t]=this.nextIndex++,this.cmd(rt.createLabel,this.pathIndexXID[t],t,this.path_table_start_x+t*this.path_table_width,this.path_table_start_y-this.path_table_height),this.cmd(rt.setTextColor,this.pathIndexXID[t],"#0000FF"),this.cmd(rt.createLabel,this.pathIndexYID[t],t,this.path_table_start_x-this.path_table_width,this.path_table_start_y+t*this.path_table_height),this.cmd(rt.setTextColor,this.pathIndexYID[t],"#0000FF"),this.cmd(rt.createLabel,this.costIndexXID[t],t,this.cost_table_start_x+t*this.cost_table_width,this.cost_table_start_y-this.cost_table_height),this.cmd(rt.setTextColor,this.costIndexXID[t],"#0000FF"),this.cmd(rt.createLabel,this.costIndexYID[t],t,this.cost_table_start_x-this.cost_table_width,this.cost_table_start_y+t*this.cost_table_height),this.cmd(rt.setTextColor,this.costIndexYID[t],"#0000FF");for(let i=0;i<this.size;i++)this.costTable[t][i]=this.adj_matrix[t][i],this.costTable[t][i]>=0?this.pathTable[t][i]=t:this.pathTable[t][i]=-1,this.costTableID[t][i]=this.nextIndex++,this.pathTableID[t][i]=this.nextIndex++,this.cmd(rt.createRectangle,this.costTableID[t][i],this.getCostLabel(this.costTable[t][i],!0),this.cost_table_width,this.cost_table_height,this.cost_table_start_x+i*this.cost_table_width,this.cost_table_start_y+t*this.cost_table_height),this.cmd(rt.createRectangle,this.pathTableID[t][i],this.pathTable[t][i],this.path_table_width,this.path_table_height,this.path_table_start_x+i*this.path_table_width,this.path_table_start_y+t*this.path_table_height)}this.animationManager.startNewAnimation(this.commands),this.animationManager.skipForward(),this.animationManager.clearHistory(),18===this.size&&this.animationManager.setAllLayers([0])}startCallback(){this.implementAction(this.doFloydWarshall.bind(this))}doFloydWarshall(){this.commands=[];const t=this.nextIndex,i=this.nextIndex++,e=this.nextIndex++,s=this.nextIndex++;this.cmd(rt.createCircle,this.node1ID,"",this.node_1_x_pos,this.node_1_y_pos),this.cmd(rt.createCircle,this.node2ID,"",this.node_2_x_pos,this.node_2_y_pos),this.cmd(rt.createCircle,this.node3ID,"",this.node_3_x_pos,this.node_3_y_pos),this.cmd(rt.createLabel,i,"",this.message_x,this.message_y,0);for(let h=0;h<this.size;h++)for(let t=0;t<this.size;t++)for(let a=0;a<this.size;a++)t!==a&&a!==h&&t!==h&&(this.cmd(rt.setText,this.node1ID,t),this.cmd(rt.setText,this.node2ID,h),this.cmd(rt.setText,this.node3ID,a),this.cmd(rt.connect,this.node1ID,this.node2ID,"#009999",-.1,1,this.getCostLabel(this.costTable[t][h],!0)),this.cmd(rt.connect,this.node2ID,this.node3ID,"#9900CC",-.1,1,this.getCostLabel(this.costTable[h][a],!0)),this.cmd(rt.connect,this.node1ID,this.node3ID,"#CC0000",0,1,this.getCostLabel(this.costTable[t][a],!0)),this.cmd(rt.setHighlight,this.costTableID[t][h],1),this.cmd(rt.setHighlight,this.costTableID[h][a],1),this.cmd(rt.setHighlight,this.costTableID[t][a],1),this.cmd(rt.setTextColor,this.costTableID[t][h],"#009999"),this.cmd(rt.setTextColor,this.costTableID[h][a],"#9900CC"),this.cmd(rt.setTextColor,this.costTableID[t][a],"#CC0000"),this.costTable[t][h]>=0&&this.costTable[h][a]>=0&&(this.costTable[t][a]<0||this.costTable[t][h]+this.costTable[h][a]<this.costTable[t][a])?(this.cmd(rt.setText,i,this.getCostLabel(this.costTable[t][h],!0)+" + "+this.getCostLabel(this.costTable[h][a],!0)+" < "+this.getCostLabel(this.costTable[t][a],!0)),this.cmd(rt.step),this.costTable[t][a]=this.costTable[t][h]+this.costTable[h][a],this.cmd(rt.setText,this.pathTableID[t][a],""),this.cmd(rt.setText,this.costTableID[t][a],""),this.cmd(rt.createLabel,e,this.pathTable[h][a],this.path_table_start_x+a*this.path_table_width,this.path_table_start_y+h*this.path_table_height),this.cmd(rt.move,e,this.path_table_start_x+a*this.path_table_width,this.path_table_start_y+t*this.path_table_height),this.cmd(rt.createLabel,s,this.costTable[t][a],this.message_x,this.message_y),this.cmd(rt.setHighlight,s,1),this.cmd(rt.move,s,this.cost_table_start_x+a*this.cost_table_width,this.cost_table_start_y+t*this.cost_table_height),this.pathTable[t][a]=this.pathTable[h][a],this.cmd(rt.step),this.cmd(rt.setText,this.costTableID[t][a],this.costTable[t][a]),this.cmd(rt.setText,this.pathTableID[t][a],this.pathTable[t][a]),this.cmd(rt.delete,e),this.cmd(rt.delete,s)):(this.cmd(rt.setText,i,"!("+this.getCostLabel(this.costTable[t][h],!0)+" + "+this.getCostLabel(this.costTable[h][a],!0)+" < "+this.getCostLabel(this.costTable[t][a],!0)+")"),this.cmd(rt.step)),this.cmd(rt.setTextColor,this.costTableID[t][h],"#000000"),this.cmd(rt.setTextColor,this.costTableID[h][a],"#000000"),this.cmd(rt.setTextColor,this.costTableID[t][a],"#000000"),this.cmd(rt.disconnect,this.node1ID,this.node2ID),this.cmd(rt.disconnect,this.node2ID,this.node3ID),this.cmd(rt.disconnect,this.node1ID,this.node3ID),this.cmd(rt.setHighlight,this.costTableID[t][h],0),this.cmd(rt.setHighlight,this.costTableID[h][a],0),this.cmd(rt.setHighlight,this.costTableID[t][a],0));return this.cmd(rt.delete,this.node1ID),this.cmd(rt.delete,this.node2ID),this.cmd(rt.delete,this.node3ID),this.cmd(rt.delete,i),this.nextIndex=t,this.commands}}]},si=["Lists","ArrayList","LinkedList","DoublyLinkedList","CircularlyLinkedList","Stacks, Queues and Deques","StackArray","StackLL","QueueArray","QueueLL","DequeArray","DequeLL","Trees and SkipList","BST","Heap","AVL","BTree","SplayTree","SkipList","HashMaps","ClosedHash","OpenHash","Sorting and QuickSelect","BubbleSort","CocktailSort","InsertionSort","SelectionSort","QuickSort","QuickSelect","MergeSort","LSDRadix","HeapSort","String Searching","BruteForce","BoyerMoore","KMP","RabinKarp","Graph Algorithms","BFS","DFS","Dijkstra","Prim","Kruskal","Dynamic Programming","LCS","Floyd"];var hi={AVL:J.a.createElement("ul",null,J.a.createElement("li",null,"To cause a left rotation, add 1, 2 and 3, in that order"),J.a.createElement("li",null,"To cause a right rotation, add 3, 2 and 1, in that order"),J.a.createElement("li",null,"To cause a left-right rotation, add 3, 1 and 2, in that order"),J.a.createElement("li",null,"To cause a right-left rotation, add 1, 3 and 2, in that order")),BoyerMoore:J.a.createElement("ul",null,J.a.createElement("li",null,'The worst case is when we have a text with only one letter and a pattern with that same letter, but a different first letter (for example, "aaaaaaaaa" for text and "baaaa" for pattern), since we will only mismatch on the last comparison'),J.a.createElement("li",null,"When incorporating the Galil Rule, we can use logic similar to that of KMP to optimize our shifts. After finding a full match, instead of shifting by 1 we shift by the period ",J.a.createElement("i",null,"k"),". After that shift, we don't need to compare the first"," ",J.a.createElement("i",null,"k")," characters in the pattern because we've already compared them and know that they match!")),BruteForce:J.a.createElement("ul",null,J.a.createElement("li",null,'The worst case is when we have a text with only one letter and a pattern with that same letter, but a different last letter (for example, "aaaaaaaaa" for text and "aaaab" for pattern), since we will only mismatch on the last comparison')),BST:J.a.createElement("ul",null,J.a.createElement("li",null,"To get a degenerate BST, you can add ascending data, such as 1, 2, 3, ..."),J.a.createElement("li",null,"To get a full BST, you can add 2, 1, 4, 3, 5, in that order"),J.a.createElement("li",null,"To get a complete BST, you can add 3, 2, 4, 1, in that order"),J.a.createElement("li",null,"To get a full and complete BST, you can add 4, 2, 5, 1, 3, in that order")),BTree:J.a.createElement("ul",null,J.a.createElement("li",null,"To cause overflow and trigger a promotion, add more than 3 data (for example 1, 2, 3 and 4)"),J.a.createElement("li",null,"To remove from a leaf node, add 1, 2, 3 and 4, in that order, then remove 3 or 4"),J.a.createElement("li",null,"To remove from an inner node and use the predecessor, add 1, 3, 4, 5 and 2, in that order, then remove 3"),J.a.createElement("li",null,"To cause underflow and trigger a rotation/transfer, add 1, 2, 3 and 4, in that order, then remove 1"),J.a.createElement("li",null,"To cause underflow and trigger a fusion, follow the steps above then remove 2")),BubbleSort:J.a.createElement("ul",null,J.a.createElement("li",null,"The best case is when we have a sorted array (terminates if no swaps are made)"),J.a.createElement("li",null,"The worst case is when we have a reverse sorted array (we perform",J.a.createElement("p",{className:"equation"},"n + (n - 1) + (n - 2) + ... = n",J.a.createElement("sup",null,"2")),"comparisons)")),CocktailSort:J.a.createElement("ul",null,J.a.createElement("li",null,"The best case is when we have a sorted array (terminates if no swaps are made)"),J.a.createElement("li",null,"The worst case is when we have a reverse sorted array (we perform",J.a.createElement("p",{className:"equation"},"n + (n - 1) + (n - 2) + ... = n",J.a.createElement("sup",null,"2")),"comparisons)"),J.a.createElement("li",null,"Even though Cocktail Shaker Sort has the same big-O as Bubble Sort, it is still faster; one case where it significantly outperforms Bubble Sort is when we have a sorted array, except for the last element which is the smallest, for example [2, 3, 4, 5, 6, 7, 8, 9, 1]")),InsertionSort:J.a.createElement("ul",null,J.a.createElement("li",null,"The best case is when we have a sorted array (terminates if no swaps are made)"),J.a.createElement("li",null,"The worst case is when we have a reverse sorted array (we perform",J.a.createElement("p",{className:"equation"},"n + (n - 1) + (n - 2) + ... = n",J.a.createElement("sup",null,"2")),"comparisons)")),QuickSelect:J.a.createElement("ul",null,J.a.createElement("li",null,"The worst case occurs when we pick a bad pivot everytime (for example, the smallest or largest element), since we can no longer subvide the array")),QuickSort:J.a.createElement("ul",null,J.a.createElement("li",null,"The worst case occurs when we pick a bad pivot everytime (for example, the smallest or largest element), since we can no longer subvide the array and the algorithms becomes similar to Selection Sort")),SkipList:J.a.createElement("ul",null,J.a.createElement("li",null,"You can get a degenerate SkipList by always adding with a constant amount of heads, for example 0 or 4."))};class ai extends J.a.Component{constructor(t){super(t),this.updateDimensions=()=>{this.animManag.changeSize(document.body.clientWidth)},this.toggleExamples=()=>this.setState(t=>({examplesEnabled:!t.examplesEnabled}));const i=t.location.pathname.slice(1);this.canvasRef=J.a.createRef(),this.animBarRef=J.a.createRef(),this.state={algoName:i,examplesEnabled:!1,width:0},gt.a.pageview(i)}componentDidMount(){ei[this.state.algoName]&&(this.animManag=new lt(this.canvasRef,this.animBarRef),this.currentAlg=new ei[this.state.algoName][1](this.animManag,this.canvasRef.current.width,this.canvasRef.current.height),window.addEventListener("resize",this.updateDimensions))}componentWillUnmount(){window.removeEventListener("resize",this.updateDimensions)}render(){const t=this.state.algoName;if(!ei[t])return J.a.createElement("div",{className:"container"},J.a.createElement(mt,null),J.a.createElement("div",{className:"content"},J.a.createElement("div",{className:"four-o-four"},J.a.createElement("h1",null,"404!"),J.a.createElement("h3",null,"Algorithm not found! Click ",J.a.createElement(s.b,{to:"/"},"here")," to return to the home screen and choose another algorithm."))),J.a.createElement(ot,null));const i=ei[t][2]?ei[t][2]:ei[t][0];return J.a.createElement("div",{className:"VisualizationMainPage"},J.a.createElement("div",{id:"container"},J.a.createElement("div",{id:"header"},J.a.createElement("h1",null,J.a.createElement(s.b,{to:"/"},"\u3008"),"\xa0\xa0",i,J.a.createElement("div",{id:"toggle"},J.a.createElement(dt.Toggle,null)))),J.a.createElement("div",{id:"mainContent"},J.a.createElement("div",{id:"algoControlSection"},J.a.createElement("table",{id:"AlgorithmSpecificControls"}),hi[t]&&J.a.createElement("button",{className:this.state.examplesEnabled?"selected":"",id:"examplesButton",onClick:this.toggleExamples})),J.a.createElement("div",{className:"viewport"},J.a.createElement("canvas",{id:"canvas",width:this.state.width,height:"505",ref:this.canvasRef}),this.state.examplesEnabled&&J.a.createElement("div",{className:"modal"},J.a.createElement("div",{className:"modal-content"},hi[t]))),J.a.createElement("div",{id:"generalAnimationControlSection"},J.a.createElement("table",{id:"GeneralAnimationControls",ref:this.animBarRef}))),J.a.createElement("div",{id:"footer"},J.a.createElement("p",null,J.a.createElement(s.b,{to:"/"},"Return to Home Page")))))}}var ni=ai;var li=()=>J.a.createElement("div",{className:"about"},J.a.createElement("p",null,"This is a tool to help you visualize and understand the data structures and algorithms covered in Georgia Tech's CS1332 course. It is based on the"," ",J.a.createElement("a",{href:"https://www.cs.usfca.edu/~galles/visualization/about.html"},"Data Structures Visualizations website")," ","by David Gales."),J.a.createElement("p",null,"The CS1332 Visualization Tool was adapted and expanded by"," ",J.a.createElement("a",{href:"https://rodrigodlpontes.github.io/website/"},"Rodrigo Pontes"),", under the supervision of Dr. Mary Hudachek-Buswell, to include data structures and algorithms covered in the course. It has since received many additions and revisions from"," ",J.a.createElement("a",{href:"https://github.com/RodrigoDLPontes/visualization-tool#contributors-"},"many other wonderful contributors"),"."),J.a.createElement("p",null,"It also includes icons from"," ",J.a.createElement("a",{href:"https://material.io/resources/icons/?style=baseline"},"Google's Material Icons"),", and components from ",J.a.createElement("a",{href:"https://material-ui.com/"},"Material UI "),"and ",J.a.createElement("a",{href:"https://www.npmjs.com/package/react-hook-theme/v/1.2.5"},"react-hook-theme"),"."));var ri=()=>J.a.createElement("div",{className:"container"},J.a.createElement(mt,null),J.a.createElement("div",{className:"content"},J.a.createElement(h.c,null,J.a.createElement(h.a,{exact:!0,path:"/"},J.a.createElement("div",{className:"outer-flex"},J.a.createElement("div",{className:"inner-flex"},si.map((t,i)=>ei[t]?J.a.createElement(s.b,{to:"/"+t,key:i},J.a.createElement("input",{className:"button",type:"button",value:ei[t][0]})):J.a.createElement("div",{key:i,className:"divider"},J.a.createElement("span",null,t)))))),J.a.createElement(h.a,{path:"/about"},J.a.createElement(li,null)))),J.a.createElement(ot,null));var oi=()=>(gt.a.initialize("UA-164374852-1"),gt.a.pageview("home"),J.a.createElement(s.a,{basename:"/"},J.a.createElement(h.c,null,J.a.createElement(h.a,{exact:!0,path:["/","/about"],component:ri}),J.a.createElement(h.a,{component:ni})))),di=e(35);e.n(di).a.createRoot(document.getElementById("root")).render(J.a.createElement(dt.ThemeProvider,{options:{theme:"light",save:!0}},J.a.createElement(oi,null)))}},[[38,1,2]]]);
//# sourceMappingURL=main.0473bc78.chunk.js.map